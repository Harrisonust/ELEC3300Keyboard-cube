ARM GAS  /tmp/ccUAsxIF.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB71:
  26              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f1xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f1xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f1xx_it.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f1xx_it.c ****   *
  17:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f1xx_it.c ****   */
  19:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f1xx_it.c **** 
  21:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Core/Src/stm32f1xx_it.c **** #include "cmsis_os.h"
  25:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  28:Core/Src/stm32f1xx_it.c **** 
  29:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  31:Core/Src/stm32f1xx_it.c **** 
  32:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccUAsxIF.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** 
  34:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  36:Core/Src/stm32f1xx_it.c **** 
  37:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  38:Core/Src/stm32f1xx_it.c **** 
  39:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  41:Core/Src/stm32f1xx_it.c **** 
  42:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  43:Core/Src/stm32f1xx_it.c **** 
  44:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  46:Core/Src/stm32f1xx_it.c **** 
  47:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  48:Core/Src/stm32f1xx_it.c **** 
  49:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/stm32f1xx_it.c **** 
  52:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  53:Core/Src/stm32f1xx_it.c **** 
  54:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/stm32f1xx_it.c **** 
  57:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  58:Core/Src/stm32f1xx_it.c **** 
  59:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Core/Src/stm32f1xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  61:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_tim1_ch1;
  62:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim2;
  63:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim6;
  64:Core/Src/stm32f1xx_it.c **** 
  65:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  66:Core/Src/stm32f1xx_it.c **** 
  67:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32f1xx_it.c **** 
  69:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f1xx_it.c **** /**
  73:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32f1xx_it.c ****   */
  75:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 76 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  77:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f1xx_it.c **** 
  79:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32f1xx_it.c **** 
  82:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f1xx_it.c **** }
  32              		.loc 1 83 1 view .LVU1
ARM GAS  /tmp/ccUAsxIF.s 			page 3


  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE71:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB72:
  84:Core/Src/stm32f1xx_it.c **** 
  85:Core/Src/stm32f1xx_it.c **** /**
  86:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32f1xx_it.c ****   */
  88:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32f1xx_it.c **** {
  47              		.loc 1 89 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  90:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32f1xx_it.c **** 
  92:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32f1xx_it.c ****   while (1)
  54              		.loc 1 93 3 discriminator 1 view .LVU3
  94:Core/Src/stm32f1xx_it.c ****   {
  95:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f1xx_it.c ****   }
  55              		.loc 1 97 3 discriminator 1 view .LVU4
  93:Core/Src/stm32f1xx_it.c ****   {
  56              		.loc 1 93 9 discriminator 1 view .LVU5
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE72:
  61              		.section	.text.MemManage_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	MemManage_Handler
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
  69              	MemManage_Handler:
  70              	.LFB73:
  98:Core/Src/stm32f1xx_it.c **** }
  99:Core/Src/stm32f1xx_it.c **** 
 100:Core/Src/stm32f1xx_it.c **** /**
 101:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 102:Core/Src/stm32f1xx_it.c ****   */
 103:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32f1xx_it.c **** {
  71              		.loc 1 104 1 view -0
ARM GAS  /tmp/ccUAsxIF.s 			page 4


  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.L5:
 105:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f1xx_it.c **** 
 107:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f1xx_it.c ****   while (1)
  78              		.loc 1 108 3 discriminator 1 view .LVU7
 109:Core/Src/stm32f1xx_it.c ****   {
 110:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f1xx_it.c ****   }
  79              		.loc 1 112 3 discriminator 1 view .LVU8
 108:Core/Src/stm32f1xx_it.c ****   {
  80              		.loc 1 108 9 discriminator 1 view .LVU9
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE73:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	BusFault_Handler:
  94              	.LFB74:
 113:Core/Src/stm32f1xx_it.c **** }
 114:Core/Src/stm32f1xx_it.c **** 
 115:Core/Src/stm32f1xx_it.c **** /**
 116:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 117:Core/Src/stm32f1xx_it.c ****   */
 118:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32f1xx_it.c **** {
  95              		.loc 1 119 1 view -0
  96              		.cfi_startproc
  97              		@ Volatile: function does not return.
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.L7:
 120:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32f1xx_it.c **** 
 122:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32f1xx_it.c ****   while (1)
 102              		.loc 1 123 3 discriminator 1 view .LVU11
 124:Core/Src/stm32f1xx_it.c ****   {
 125:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f1xx_it.c ****   }
 103              		.loc 1 127 3 discriminator 1 view .LVU12
 123:Core/Src/stm32f1xx_it.c ****   {
 104              		.loc 1 123 9 discriminator 1 view .LVU13
 105 0000 FEE7     		b	.L7
ARM GAS  /tmp/ccUAsxIF.s 			page 5


 106              		.cfi_endproc
 107              	.LFE74:
 109              		.section	.text.UsageFault_Handler,"ax",%progbits
 110              		.align	1
 111              		.global	UsageFault_Handler
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	UsageFault_Handler:
 118              	.LFB75:
 128:Core/Src/stm32f1xx_it.c **** }
 129:Core/Src/stm32f1xx_it.c **** 
 130:Core/Src/stm32f1xx_it.c **** /**
 131:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32f1xx_it.c ****   */
 133:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32f1xx_it.c **** {
 119              		.loc 1 134 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L9:
 135:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32f1xx_it.c **** 
 137:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 138 3 discriminator 1 view .LVU15
 139:Core/Src/stm32f1xx_it.c ****   {
 140:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f1xx_it.c ****   }
 127              		.loc 1 142 3 discriminator 1 view .LVU16
 138:Core/Src/stm32f1xx_it.c ****   {
 128              		.loc 1 138 9 discriminator 1 view .LVU17
 129 0000 FEE7     		b	.L9
 130              		.cfi_endproc
 131              	.LFE75:
 133              		.section	.text.DebugMon_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	DebugMon_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu softvfp
 141              	DebugMon_Handler:
 142              	.LFB76:
 143:Core/Src/stm32f1xx_it.c **** }
 144:Core/Src/stm32f1xx_it.c **** 
 145:Core/Src/stm32f1xx_it.c **** /**
 146:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 147:Core/Src/stm32f1xx_it.c ****   */
 148:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 149:Core/Src/stm32f1xx_it.c **** {
 143              		.loc 1 149 1 view -0
ARM GAS  /tmp/ccUAsxIF.s 			page 6


 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f1xx_it.c **** 
 152:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 153:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f1xx_it.c **** 
 155:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 156:Core/Src/stm32f1xx_it.c **** }
 148              		.loc 1 156 1 view .LVU19
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE76:
 153              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 154              		.align	1
 155              		.global	EXTI0_IRQHandler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	EXTI0_IRQHandler:
 162              	.LFB77:
 157:Core/Src/stm32f1xx_it.c **** 
 158:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 159:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 160:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 161:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 162:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 163:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 164:Core/Src/stm32f1xx_it.c **** 
 165:Core/Src/stm32f1xx_it.c **** /**
 166:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line0 interrupt.
 167:Core/Src/stm32f1xx_it.c ****   */
 168:Core/Src/stm32f1xx_it.c **** void EXTI0_IRQHandler(void)
 169:Core/Src/stm32f1xx_it.c **** {
 163              		.loc 1 169 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 170:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 171:Core/Src/stm32f1xx_it.c **** 
 172:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 173:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 172              		.loc 1 173 3 view .LVU21
 173 0002 0120     		movs	r0, #1
 174 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 175              	.LVL0:
 174:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 175:Core/Src/stm32f1xx_it.c **** 
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
ARM GAS  /tmp/ccUAsxIF.s 			page 7


 177:Core/Src/stm32f1xx_it.c **** }
 176              		.loc 1 177 1 is_stmt 0 view .LVU22
 177 0008 08BD     		pop	{r3, pc}
 178              		.cfi_endproc
 179              	.LFE77:
 181              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 182              		.align	1
 183              		.global	EXTI1_IRQHandler
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu softvfp
 189              	EXTI1_IRQHandler:
 190              	.LFB78:
 178:Core/Src/stm32f1xx_it.c **** 
 179:Core/Src/stm32f1xx_it.c **** /**
 180:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line1 interrupt.
 181:Core/Src/stm32f1xx_it.c ****   */
 182:Core/Src/stm32f1xx_it.c **** void EXTI1_IRQHandler(void)
 183:Core/Src/stm32f1xx_it.c **** {
 191              		.loc 1 183 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 08B5     		push	{r3, lr}
 196              	.LCFI1:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
 184:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 185:Core/Src/stm32f1xx_it.c **** 
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
 187:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 200              		.loc 1 187 3 view .LVU24
 201 0002 0220     		movs	r0, #2
 202 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 203              	.LVL1:
 188:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 189:Core/Src/stm32f1xx_it.c **** 
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
 191:Core/Src/stm32f1xx_it.c **** }
 204              		.loc 1 191 1 is_stmt 0 view .LVU25
 205 0008 08BD     		pop	{r3, pc}
 206              		.cfi_endproc
 207              	.LFE78:
 209              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 210              		.align	1
 211              		.global	EXTI2_IRQHandler
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu softvfp
 217              	EXTI2_IRQHandler:
 218              	.LFB79:
 192:Core/Src/stm32f1xx_it.c **** 
 193:Core/Src/stm32f1xx_it.c **** /**
 194:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line2 interrupt.
ARM GAS  /tmp/ccUAsxIF.s 			page 8


 195:Core/Src/stm32f1xx_it.c ****   */
 196:Core/Src/stm32f1xx_it.c **** void EXTI2_IRQHandler(void)
 197:Core/Src/stm32f1xx_it.c **** {
 219              		.loc 1 197 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 08B5     		push	{r3, lr}
 224              	.LCFI2:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 3, -8
 227              		.cfi_offset 14, -4
 198:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 199:Core/Src/stm32f1xx_it.c **** 
 200:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI2_IRQn 0 */
 201:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 228              		.loc 1 201 3 view .LVU27
 229 0002 0420     		movs	r0, #4
 230 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 231              	.LVL2:
 202:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 203:Core/Src/stm32f1xx_it.c **** 
 204:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI2_IRQn 1 */
 205:Core/Src/stm32f1xx_it.c **** }
 232              		.loc 1 205 1 is_stmt 0 view .LVU28
 233 0008 08BD     		pop	{r3, pc}
 234              		.cfi_endproc
 235              	.LFE79:
 237              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 238              		.align	1
 239              		.global	EXTI3_IRQHandler
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu softvfp
 245              	EXTI3_IRQHandler:
 246              	.LFB80:
 206:Core/Src/stm32f1xx_it.c **** 
 207:Core/Src/stm32f1xx_it.c **** /**
 208:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line3 interrupt.
 209:Core/Src/stm32f1xx_it.c ****   */
 210:Core/Src/stm32f1xx_it.c **** void EXTI3_IRQHandler(void)
 211:Core/Src/stm32f1xx_it.c **** {
 247              		.loc 1 211 1 is_stmt 1 view -0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251 0000 08B5     		push	{r3, lr}
 252              	.LCFI3:
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 3, -8
 255              		.cfi_offset 14, -4
 212:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 213:Core/Src/stm32f1xx_it.c **** 
 214:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 215:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 256              		.loc 1 215 3 view .LVU30
ARM GAS  /tmp/ccUAsxIF.s 			page 9


 257 0002 0820     		movs	r0, #8
 258 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 259              	.LVL3:
 216:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 217:Core/Src/stm32f1xx_it.c **** 
 218:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 219:Core/Src/stm32f1xx_it.c **** }
 260              		.loc 1 219 1 is_stmt 0 view .LVU31
 261 0008 08BD     		pop	{r3, pc}
 262              		.cfi_endproc
 263              	.LFE80:
 265              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 266              		.align	1
 267              		.global	DMA1_Channel2_IRQHandler
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu softvfp
 273              	DMA1_Channel2_IRQHandler:
 274              	.LFB81:
 220:Core/Src/stm32f1xx_it.c **** 
 221:Core/Src/stm32f1xx_it.c **** /**
 222:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel2 global interrupt.
 223:Core/Src/stm32f1xx_it.c ****   */
 224:Core/Src/stm32f1xx_it.c **** void DMA1_Channel2_IRQHandler(void)
 225:Core/Src/stm32f1xx_it.c **** {
 275              		.loc 1 225 1 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 08B5     		push	{r3, lr}
 280              	.LCFI4:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 3, -8
 283              		.cfi_offset 14, -4
 226:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
 227:Core/Src/stm32f1xx_it.c **** 
 228:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 0 */
 229:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim1_ch1);
 284              		.loc 1 229 3 view .LVU33
 285 0002 0248     		ldr	r0, .L21
 286 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 287              	.LVL4:
 230:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
 231:Core/Src/stm32f1xx_it.c **** 
 232:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 1 */
 233:Core/Src/stm32f1xx_it.c **** }
 288              		.loc 1 233 1 is_stmt 0 view .LVU34
 289 0008 08BD     		pop	{r3, pc}
 290              	.L22:
 291 000a 00BF     		.align	2
 292              	.L21:
 293 000c 00000000 		.word	hdma_tim1_ch1
 294              		.cfi_endproc
 295              	.LFE81:
 297              		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 298              		.align	1
ARM GAS  /tmp/ccUAsxIF.s 			page 10


 299              		.global	USB_LP_CAN1_RX0_IRQHandler
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	USB_LP_CAN1_RX0_IRQHandler:
 306              	.LFB82:
 234:Core/Src/stm32f1xx_it.c **** 
 235:Core/Src/stm32f1xx_it.c **** /**
 236:Core/Src/stm32f1xx_it.c ****   * @brief This function handles USB low priority or CAN RX0 interrupts.
 237:Core/Src/stm32f1xx_it.c ****   */
 238:Core/Src/stm32f1xx_it.c **** void USB_LP_CAN1_RX0_IRQHandler(void)
 239:Core/Src/stm32f1xx_it.c **** {
 307              		.loc 1 239 1 is_stmt 1 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311 0000 08B5     		push	{r3, lr}
 312              	.LCFI5:
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 3, -8
 315              		.cfi_offset 14, -4
 240:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */
 241:Core/Src/stm32f1xx_it.c **** 
 242:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
 243:Core/Src/stm32f1xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 316              		.loc 1 243 3 view .LVU36
 317 0002 0248     		ldr	r0, .L25
 318 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 319              	.LVL5:
 244:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */
 245:Core/Src/stm32f1xx_it.c **** 
 246:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
 247:Core/Src/stm32f1xx_it.c **** }
 320              		.loc 1 247 1 is_stmt 0 view .LVU37
 321 0008 08BD     		pop	{r3, pc}
 322              	.L26:
 323 000a 00BF     		.align	2
 324              	.L25:
 325 000c 00000000 		.word	hpcd_USB_FS
 326              		.cfi_endproc
 327              	.LFE82:
 329              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 330              		.align	1
 331              		.global	TIM2_IRQHandler
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu softvfp
 337              	TIM2_IRQHandler:
 338              	.LFB83:
 248:Core/Src/stm32f1xx_it.c **** 
 249:Core/Src/stm32f1xx_it.c **** /**
 250:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 251:Core/Src/stm32f1xx_it.c ****   */
 252:Core/Src/stm32f1xx_it.c **** void TIM2_IRQHandler(void)
 253:Core/Src/stm32f1xx_it.c **** {
ARM GAS  /tmp/ccUAsxIF.s 			page 11


 339              		.loc 1 253 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343 0000 08B5     		push	{r3, lr}
 344              	.LCFI6:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 3, -8
 347              		.cfi_offset 14, -4
 254:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 255:Core/Src/stm32f1xx_it.c **** 
 256:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 257:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 348              		.loc 1 257 3 view .LVU39
 349 0002 0248     		ldr	r0, .L29
 350 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 351              	.LVL6:
 258:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 259:Core/Src/stm32f1xx_it.c **** 
 260:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 261:Core/Src/stm32f1xx_it.c **** }
 352              		.loc 1 261 1 is_stmt 0 view .LVU40
 353 0008 08BD     		pop	{r3, pc}
 354              	.L30:
 355 000a 00BF     		.align	2
 356              	.L29:
 357 000c 00000000 		.word	htim2
 358              		.cfi_endproc
 359              	.LFE83:
 361              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 362              		.align	1
 363              		.global	EXTI15_10_IRQHandler
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu softvfp
 369              	EXTI15_10_IRQHandler:
 370              	.LFB84:
 262:Core/Src/stm32f1xx_it.c **** 
 263:Core/Src/stm32f1xx_it.c **** /**
 264:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line[15:10] interrupts.
 265:Core/Src/stm32f1xx_it.c ****   */
 266:Core/Src/stm32f1xx_it.c **** void EXTI15_10_IRQHandler(void)
 267:Core/Src/stm32f1xx_it.c **** {
 371              		.loc 1 267 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375 0000 08B5     		push	{r3, lr}
 376              	.LCFI7:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 268:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 269:Core/Src/stm32f1xx_it.c **** 
 270:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 271:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
ARM GAS  /tmp/ccUAsxIF.s 			page 12


 380              		.loc 1 271 3 view .LVU42
 381 0002 4FF40040 		mov	r0, #32768
 382 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 383              	.LVL7:
 272:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 273:Core/Src/stm32f1xx_it.c **** 
 274:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 1 */
 275:Core/Src/stm32f1xx_it.c **** }
 384              		.loc 1 275 1 is_stmt 0 view .LVU43
 385 000a 08BD     		pop	{r3, pc}
 386              		.cfi_endproc
 387              	.LFE84:
 389              		.section	.text.TIM6_IRQHandler,"ax",%progbits
 390              		.align	1
 391              		.global	TIM6_IRQHandler
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu softvfp
 397              	TIM6_IRQHandler:
 398              	.LFB85:
 276:Core/Src/stm32f1xx_it.c **** 
 277:Core/Src/stm32f1xx_it.c **** /**
 278:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM6 global interrupt.
 279:Core/Src/stm32f1xx_it.c ****   */
 280:Core/Src/stm32f1xx_it.c **** void TIM6_IRQHandler(void)
 281:Core/Src/stm32f1xx_it.c **** {
 399              		.loc 1 281 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0000 08B5     		push	{r3, lr}
 404              	.LCFI8:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 3, -8
 407              		.cfi_offset 14, -4
 282:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM6_IRQn 0 */
 283:Core/Src/stm32f1xx_it.c **** 
 284:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM6_IRQn 0 */
 285:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 408              		.loc 1 285 3 view .LVU45
 409 0002 0248     		ldr	r0, .L35
 410 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 411              	.LVL8:
 286:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM6_IRQn 1 */
 287:Core/Src/stm32f1xx_it.c **** 
 288:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM6_IRQn 1 */
 289:Core/Src/stm32f1xx_it.c **** }
 412              		.loc 1 289 1 is_stmt 0 view .LVU46
 413 0008 08BD     		pop	{r3, pc}
 414              	.L36:
 415 000a 00BF     		.align	2
 416              	.L35:
 417 000c 00000000 		.word	htim6
 418              		.cfi_endproc
 419              	.LFE85:
 421              		.text
ARM GAS  /tmp/ccUAsxIF.s 			page 13


 422              	.Letext0:
 423              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 424              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 425              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 426              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 427              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 428              		.file 7 "/usr/include/newlib/sys/_types.h"
 429              		.file 8 "/usr/include/newlib/sys/reent.h"
 430              		.file 9 "/usr/include/newlib/sys/lock.h"
 431              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 432              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 433              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 434              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 435              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd.h"
 436              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 437              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /tmp/ccUAsxIF.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/ccUAsxIF.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccUAsxIF.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccUAsxIF.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccUAsxIF.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccUAsxIF.s:62     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccUAsxIF.s:69     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccUAsxIF.s:86     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccUAsxIF.s:93     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccUAsxIF.s:110    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccUAsxIF.s:117    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccUAsxIF.s:134    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccUAsxIF.s:141    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccUAsxIF.s:154    .text.EXTI0_IRQHandler:0000000000000000 $t
     /tmp/ccUAsxIF.s:161    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
     /tmp/ccUAsxIF.s:182    .text.EXTI1_IRQHandler:0000000000000000 $t
     /tmp/ccUAsxIF.s:189    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
     /tmp/ccUAsxIF.s:210    .text.EXTI2_IRQHandler:0000000000000000 $t
     /tmp/ccUAsxIF.s:217    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
     /tmp/ccUAsxIF.s:238    .text.EXTI3_IRQHandler:0000000000000000 $t
     /tmp/ccUAsxIF.s:245    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
     /tmp/ccUAsxIF.s:266    .text.DMA1_Channel2_IRQHandler:0000000000000000 $t
     /tmp/ccUAsxIF.s:273    .text.DMA1_Channel2_IRQHandler:0000000000000000 DMA1_Channel2_IRQHandler
     /tmp/ccUAsxIF.s:293    .text.DMA1_Channel2_IRQHandler:000000000000000c $d
     /tmp/ccUAsxIF.s:298    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccUAsxIF.s:305    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 USB_LP_CAN1_RX0_IRQHandler
     /tmp/ccUAsxIF.s:325    .text.USB_LP_CAN1_RX0_IRQHandler:000000000000000c $d
     /tmp/ccUAsxIF.s:330    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccUAsxIF.s:337    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccUAsxIF.s:357    .text.TIM2_IRQHandler:000000000000000c $d
     /tmp/ccUAsxIF.s:362    .text.EXTI15_10_IRQHandler:0000000000000000 $t
     /tmp/ccUAsxIF.s:369    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
     /tmp/ccUAsxIF.s:390    .text.TIM6_IRQHandler:0000000000000000 $t
     /tmp/ccUAsxIF.s:397    .text.TIM6_IRQHandler:0000000000000000 TIM6_IRQHandler
     /tmp/ccUAsxIF.s:417    .text.TIM6_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_tim1_ch1
HAL_PCD_IRQHandler
hpcd_USB_FS
HAL_TIM_IRQHandler
htim2
htim6
