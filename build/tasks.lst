ARM GAS  /tmp/ccubydGq.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tasks.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	prvTaskIsTaskSuspended:
  24              	.LVL0:
  25              	.LFB14:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    Help yourself get started quickly while simultaneously helping     *
ARM GAS  /tmp/ccubydGq.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "StackMacros.h"
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
ARM GAS  /tmp/ccubydGq.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB. */
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE ( ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && (
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
ARM GAS  /tmp/ccubydGq.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
ARM GAS  /tmp/ccubydGq.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
ARM GAS  /tmp/ccubydGq.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the end of the stack on architectures where the stack 
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
ARM GAS  /tmp/ccubydGq.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void *pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static variables must be declared volatile. */
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
ARM GAS  /tmp/ccubydGq.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) 0U;
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint +e956 */
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
ARM GAS  /tmp/ccubydGq.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /tmp/ccubydGq.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
ARM GAS  /tmp/ccubydGq.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION; /*lint !e971 Unqualified char
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer ) /*lint !e971 Unqualified char types are allowed for st
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
ARM GAS  /tmp/ccubydGq.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( portUSING_MPU_WRAPPERS == 1 )
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				this task had a statically allocated stack in case it is
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				later deleted.  The TCB was allocated dynamically. */
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
ARM GAS  /tmp/ccubydGq.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const uint16_t usStackDepth,
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask ) /*lint !e971 Unqualified char types are allowed for str
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
ARM GAS  /tmp/ccubydGq.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
ARM GAS  /tmp/ccubydGq.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) /*lint !e971 Unqualified char types are allowed fo
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( ( configUSE_TRACE_FACILITY == 1 ) || ( INC
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			break;
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccubydGq.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the	top of stack variable is updated. */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
ARM GAS  /tmp/ccubydGq.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccubydGq.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
ARM GAS  /tmp/ccubydGq.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
ARM GAS  /tmp/ccubydGq.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccubydGq.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
ARM GAS  /tmp/ccubydGq.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/ccubydGq.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
ARM GAS  /tmp/ccubydGq.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
ARM GAS  /tmp/ccubydGq.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccubydGq.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccubydGq.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change it's priority variable. However, if
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before adding
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					can do this even if the scheduler is suspended. */
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccubydGq.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
ARM GAS  /tmp/ccubydGq.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  27              		.loc 1 1657 2 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  32              		.loc 1 1658 2 view .LVU1
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  33              		.loc 1 1659 2 view .LVU2
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1665 3 view .LVU3
  35 0000 28B1     		cbz	r0, .L8
  36              		.loc 1 1665 24 discriminator 2 view .LVU4
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  37              		.loc 1 1668 3 discriminator 2 view .LVU5
  38              		.loc 1 1668 7 is_stmt 0 discriminator 2 view .LVU6
  39 0002 4169     		ldr	r1, [r0, #20]
  40              		.loc 1 1668 82 discriminator 2 view .LVU7
  41 0004 0C4A     		ldr	r2, .L10
  42 0006 9142     		cmp	r1, r2
  43 0008 0AD0     		beq	.L9
ARM GAS  /tmp/ccubydGq.s 			page 31


1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  44              		.loc 1 1658 13 view .LVU8
  45 000a 0020     		movs	r0, #0
  46              	.LVL1:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  47              		.loc 1 1658 13 view .LVU9
  48 000c 7047     		bx	lr
  49              	.LVL2:
  50              	.L8:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  51              		.loc 1 1665 3 is_stmt 1 view .LVU10
  52              	.LBB90:
  53              	.LBI90:
  54              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
ARM GAS  /tmp/ccubydGq.s 			page 32


  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccubydGq.s 			page 33


 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
ARM GAS  /tmp/ccubydGq.s 			page 34


 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
ARM GAS  /tmp/ccubydGq.s 			page 35


 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  55              		.loc 2 233 30 view .LVU11
  56              	.LBB91:
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
  57              		.loc 2 235 1 view .LVU12
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
  58              		.loc 2 237 2 view .LVU13
  59              		.syntax unified
  60              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
  61 000e 4FF05003 			mov r3, #80												
  62 0012 83F31188 		msr basepri, r3											
  63 0016 BFF36F8F 		isb														
  64 001a BFF34F8F 		dsb														
  65              	
  66              	@ 0 "" 2
  67              	.LVL3:
  68              		.thumb
  69              		.syntax unified
  70              	.L3:
  71              		.loc 2 237 2 is_stmt 0 view .LVU14
  72              	.LBE91:
  73              	.LBE90:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  74              		.loc 1 1665 3 is_stmt 1 discriminator 1 view .LVU15
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  75              		.loc 1 1665 3 discriminator 1 view .LVU16
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  76              		.loc 1 1665 3 discriminator 1 view .LVU17
  77 001e FEE7     		b	.L3
  78              	.L9:
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  79              		.loc 1 1671 4 view .LVU18
  80              		.loc 1 1671 8 is_stmt 0 view .LVU19
  81 0020 836A     		ldr	r3, [r0, #40]
  82              		.loc 1 1671 6 view .LVU20
ARM GAS  /tmp/ccubydGq.s 			page 36


  83 0022 064A     		ldr	r2, .L10+4
  84 0024 9342     		cmp	r3, r2
  85 0026 02D0     		beq	.L6
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
  86              		.loc 1 1675 5 is_stmt 1 view .LVU21
  87              		.loc 1 1675 69 is_stmt 0 view .LVU22
  88 0028 1BB1     		cbz	r3, .L7
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  89              		.loc 1 1658 13 view .LVU23
  90 002a 0020     		movs	r0, #0
  91              	.LVL4:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  92              		.loc 1 1658 13 view .LVU24
  93 002c 7047     		bx	lr
  94              	.LVL5:
  95              	.L6:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  96              		.loc 1 1658 13 view .LVU25
  97 002e 0020     		movs	r0, #0
  98              	.LVL6:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  99              		.loc 1 1658 13 view .LVU26
 100 0030 7047     		bx	lr
 101              	.LVL7:
 102              	.L7:
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 103              		.loc 1 1677 14 view .LVU27
 104 0032 0120     		movs	r0, #1
 105              	.LVL8:
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 106              		.loc 1 1691 28 is_stmt 1 view .LVU28
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 107              		.loc 1 1694 3 view .LVU29
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 108              		.loc 1 1695 2 is_stmt 0 view .LVU30
 109 0034 7047     		bx	lr
 110              	.L11:
 111 0036 00BF     		.align	2
ARM GAS  /tmp/ccubydGq.s 			page 37


 112              	.L10:
 113 0038 00000000 		.word	.LANCHOR0
 114 003c 00000000 		.word	.LANCHOR1
 115              		.cfi_endproc
 116              	.LFE14:
 118              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 119              		.align	1
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu softvfp
 125              	prvResetNextTaskUnblockTime:
 126              	.LFB38:
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* As we are in a critical section we can access the ready
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					lists even if the scheduler is suspended. */
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* We may have just resumed a higher priority task. */
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccubydGq.s 			page 38


1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccubydGq.s 			page 39


1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												"IDLE",
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL,
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccubydGq.s 			page 40


1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base. */
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccubydGq.s 			page 41


1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
ARM GAS  /tmp/ccubydGq.s 			page 42


1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
ARM GAS  /tmp/ccubydGq.s 			page 43


2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
ARM GAS  /tmp/ccubydGq.s 			page 44


2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
ARM GAS  /tmp/ccubydGq.s 			page 45


2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
ARM GAS  /tmp/ccubydGq.s 			page 46


2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == 0x00 )
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccubydGq.s 			page 47


2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
ARM GAS  /tmp/ccubydGq.s 			page 48


2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
ARM GAS  /tmp/ccubydGq.s 			page 49


2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
ARM GAS  /tmp/ccubydGq.s 			page 50


2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccubydGq.s 			page 51


2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTaskResumeAll();
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + 1;
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U )
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccubydGq.s 			page 52


2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
ARM GAS  /tmp/ccubydGq.s 			page 53


2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
ARM GAS  /tmp/ccubydGq.s 			page 54


2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
ARM GAS  /tmp/ccubydGq.s 			page 55


2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
ARM GAS  /tmp/ccubydGq.s 			page 56


2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
ARM GAS  /tmp/ccubydGq.s 			page 57


2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
ARM GAS  /tmp/ccubydGq.s 			page 58


2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
ARM GAS  /tmp/ccubydGq.s 			page 59


2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemV
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a higher priority than the calling task.  This allows
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task to know if it should force a context
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch now. */
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 60


2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccubydGq.s 			page 61


3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
ARM GAS  /tmp/ccubydGq.s 			page 62


3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
ARM GAS  /tmp/ccubydGq.s 			page 63


3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
ARM GAS  /tmp/ccubydGq.s 			page 64


3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
ARM GAS  /tmp/ccubydGq.s 			page 65


3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
ARM GAS  /tmp/ccubydGq.s 			page 66


3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xListIsEmpty;
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		too often in the idle task. */
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xTaskResumeAll();
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xListIsEmpty == pdFALSE )
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				TCB_t *pxTCB;
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
ARM GAS  /tmp/ccubydGq.s 			page 67


3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the suspended list then there is a chance it is
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			actually just blocked indefinitely - so really it should be reported as
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being in the Blocked state. */
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTaskStatus->eCurrentState == eSuspended )
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTaskStatus->eCurrentState = eBlocked;
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xTaskResumeAll();
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* INCLUDE_vTaskSuspend */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
ARM GAS  /tmp/ccubydGq.s 			page 68


3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the value
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		of eState passed into this function is eInvalid - otherwise the state is
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		just set to whatever is passed in. */
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eState;
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile TCB_t *pxNextTCB, *pxFirstTCB;
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccubydGq.s 			page 69


3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
ARM GAS  /tmp/ccubydGq.s 			page 70


3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE == 1 )
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccubydGq.s 			page 71


3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	)
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 127              		.loc 1 3636 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 132              		.loc 1 3637 1 view .LVU32
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 133              		.loc 1 3639 2 view .LVU33
 134              		.loc 1 3639 6 is_stmt 0 view .LVU34
 135 0000 084B     		ldr	r3, .L15
 136 0002 1B68     		ldr	r3, [r3]
 137 0004 1B68     		ldr	r3, [r3]
 138              		.loc 1 3639 45 view .LVU35
 139 0006 23B9     		cbnz	r3, .L13
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 140              		.loc 1 3645 3 is_stmt 1 view .LVU36
 141              		.loc 1 3645 24 is_stmt 0 view .LVU37
 142 0008 074B     		ldr	r3, .L15+4
 143 000a 4FF0FF32 		mov	r2, #-1
 144 000e 1A60     		str	r2, [r3]
 145 0010 7047     		bx	lr
 146              	.L13:
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 147              		.loc 1 3653 3 is_stmt 1 view .LVU38
 148              		.loc 1 3653 27 is_stmt 0 view .LVU39
 149 0012 044B     		ldr	r3, .L15
 150 0014 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccubydGq.s 			page 72


 151 0016 DB68     		ldr	r3, [r3, #12]
 152              		.loc 1 3653 13 view .LVU40
 153 0018 DB68     		ldr	r3, [r3, #12]
 154              	.LVL9:
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 155              		.loc 1 3654 3 is_stmt 1 view .LVU41
 156              		.loc 1 3654 26 is_stmt 0 view .LVU42
 157 001a 5A68     		ldr	r2, [r3, #4]
 158              		.loc 1 3654 24 view .LVU43
 159 001c 024B     		ldr	r3, .L15+4
 160              	.LVL10:
 161              		.loc 1 3654 24 view .LVU44
 162 001e 1A60     		str	r2, [r3]
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 163              		.loc 1 3656 1 view .LVU45
 164 0020 7047     		bx	lr
 165              	.L16:
 166 0022 00BF     		.align	2
 167              	.L15:
 168 0024 00000000 		.word	.LANCHOR2
 169 0028 00000000 		.word	.LANCHOR3
 170              		.cfi_endproc
 171              	.LFE38:
 173              		.section	.text.prvDeleteTCB,"ax",%progbits
 174              		.align	1
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu softvfp
 180              	prvDeleteTCB:
 181              	.LVL11:
 182              	.LFB37:
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 183              		.loc 1 3582 2 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 187              		.loc 1 3582 2 is_stmt 0 view .LVU47
 188 0000 10B5     		push	{r4, lr}
 189              	.LCFI0:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 4, -8
 192              		.cfi_offset 14, -4
 193 0002 0446     		mov	r4, r0
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194              		.loc 1 3586 3 is_stmt 1 view .LVU48
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 195              		.loc 1 3600 4 view .LVU49
 196 0004 006B     		ldr	r0, [r0, #48]
 197              	.LVL12:
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 198              		.loc 1 3600 4 is_stmt 0 view .LVU50
 199 0006 FFF7FEFF 		bl	vPortFree
 200              	.LVL13:
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccubydGq.s 			page 73


 201              		.loc 1 3601 4 is_stmt 1 view .LVU51
 202 000a 2046     		mov	r0, r4
 203 000c FFF7FEFF 		bl	vPortFree
 204              	.LVL14:
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 205              		.loc 1 3630 2 is_stmt 0 view .LVU52
 206 0010 10BD     		pop	{r4, pc}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 207              		.loc 1 3630 2 view .LVU53
 208              		.cfi_endproc
 209              	.LFE37:
 211              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu softvfp
 218              	prvInitialiseNewTask:
 219              	.LVL15:
 220              	.LFB6:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 221              		.loc 1 775 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 16, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 225              		.loc 1 775 1 is_stmt 0 view .LVU55
 226 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 227              	.LCFI1:
 228              		.cfi_def_cfa_offset 32
 229              		.cfi_offset 4, -32
 230              		.cfi_offset 5, -28
 231              		.cfi_offset 6, -24
 232              		.cfi_offset 7, -20
 233              		.cfi_offset 8, -16
 234              		.cfi_offset 9, -12
 235              		.cfi_offset 10, -8
 236              		.cfi_offset 14, -4
 237 0004 0746     		mov	r7, r0
 238 0006 9846     		mov	r8, r3
 239 0008 089D     		ldr	r5, [sp, #32]
 240 000a DDF82490 		ldr	r9, [sp, #36]
 241 000e 0A9C     		ldr	r4, [sp, #40]
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 242              		.loc 1 776 1 is_stmt 1 view .LVU56
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 243              		.loc 1 777 1 view .LVU57
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 244              		.loc 1 807 3 view .LVU58
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 245              		.loc 1 807 26 is_stmt 0 view .LVU59
 246 0010 266B     		ldr	r6, [r4, #48]
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 247              		.loc 1 807 36 view .LVU60
 248 0012 02F18042 		add	r2, r2, #1073741824
 249              	.LVL16:
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
ARM GAS  /tmp/ccubydGq.s 			page 74


 250              		.loc 1 807 36 view .LVU61
 251 0016 013A     		subs	r2, r2, #1
 252              	.LVL17:
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 253              		.loc 1 807 16 view .LVU62
 254 0018 06EB8206 		add	r6, r6, r2, lsl #2
 255              	.LVL18:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256              		.loc 1 808 3 is_stmt 1 view .LVU63
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 257              		.loc 1 808 81 is_stmt 0 view .LVU64
 258 001c 26F00706 		bic	r6, r6, #7
 259              	.LVL19:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 260              		.loc 1 811 3 is_stmt 1 view .LVU65
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 261              		.loc 1 811 124 view .LVU66
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 262              		.loc 1 827 2 view .LVU67
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 263              		.loc 1 827 9 is_stmt 0 view .LVU68
 264 0020 0022     		movs	r2, #0
 265              	.LVL20:
 266              	.L20:
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 267              		.loc 1 827 30 is_stmt 1 discriminator 1 view .LVU69
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 268              		.loc 1 827 2 is_stmt 0 discriminator 1 view .LVU70
 269 0022 0F2A     		cmp	r2, #15
 270 0024 07D8     		bhi	.L21
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 271              		.loc 1 829 3 is_stmt 1 view .LVU71
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 272              		.loc 1 829 37 is_stmt 0 view .LVU72
 273 0026 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274              		.loc 1 829 29 view .LVU73
 275 0028 A318     		adds	r3, r4, r2
 276 002a 83F83400 		strb	r0, [r3, #52]
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 277              		.loc 1 834 3 is_stmt 1 view .LVU74
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 278              		.loc 1 834 13 is_stmt 0 view .LVU75
 279 002e 8B5C     		ldrb	r3, [r1, r2]	@ zero_extendqisi2
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 280              		.loc 1 834 5 view .LVU76
 281 0030 0BB1     		cbz	r3, .L21
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 282              		.loc 1 840 28 is_stmt 1 discriminator 2 view .LVU77
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 283              		.loc 1 827 75 discriminator 2 view .LVU78
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 284              		.loc 1 827 76 is_stmt 0 discriminator 2 view .LVU79
 285 0032 0132     		adds	r2, r2, #1
 286              	.LVL21:
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 287              		.loc 1 827 76 discriminator 2 view .LVU80
ARM GAS  /tmp/ccubydGq.s 			page 75


 288 0034 F5E7     		b	.L20
 289              	.L21:
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 290              		.loc 1 846 2 is_stmt 1 view .LVU81
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 291              		.loc 1 846 54 is_stmt 0 view .LVU82
 292 0036 0023     		movs	r3, #0
 293 0038 84F84330 		strb	r3, [r4, #67]
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 294              		.loc 1 850 2 is_stmt 1 view .LVU83
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 295              		.loc 1 850 4 is_stmt 0 view .LVU84
 296 003c 062D     		cmp	r5, #6
 297 003e 00D9     		bls	.L23
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 298              		.loc 1 852 14 view .LVU85
 299 0040 0625     		movs	r5, #6
 300              	.L23:
 301              	.LVL22:
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 302              		.loc 1 856 27 is_stmt 1 view .LVU86
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 303              		.loc 1 859 2 view .LVU87
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 304              		.loc 1 859 23 is_stmt 0 view .LVU88
 305 0042 E562     		str	r5, [r4, #44]
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 306              		.loc 1 862 3 is_stmt 1 view .LVU89
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 307              		.loc 1 862 28 is_stmt 0 view .LVU90
 308 0044 6564     		str	r5, [r4, #68]
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 309              		.loc 1 863 3 is_stmt 1 view .LVU91
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 310              		.loc 1 863 27 is_stmt 0 view .LVU92
 311 0046 4FF0000A 		mov	r10, #0
 312 004a C4F848A0 		str	r10, [r4, #72]
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 313              		.loc 1 867 2 is_stmt 1 view .LVU93
 314 004e 201D     		adds	r0, r4, #4
 315 0050 FFF7FEFF 		bl	vListInitialiseItem
 316              	.LVL23:
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 317              		.loc 1 868 2 view .LVU94
 318 0054 04F11800 		add	r0, r4, #24
 319 0058 FFF7FEFF 		bl	vListInitialiseItem
 320              	.LVL24:
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321              		.loc 1 872 2 view .LVU95
 322 005c 2461     		str	r4, [r4, #16]
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 323              		.loc 1 875 2 view .LVU96
 324 005e C5F10705 		rsb	r5, r5, #7
 325              	.LVL25:
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 326              		.loc 1 875 2 is_stmt 0 view .LVU97
 327 0062 A561     		str	r5, [r4, #24]
ARM GAS  /tmp/ccubydGq.s 			page 76


 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 328              		.loc 1 876 2 is_stmt 1 view .LVU98
 329 0064 6462     		str	r4, [r4, #36]
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 330              		.loc 1 903 3 view .LVU99
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 331              		.loc 1 918 3 view .LVU100
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 332              		.loc 1 918 29 is_stmt 0 view .LVU101
 333 0066 C4F84CA0 		str	r10, [r4, #76]
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 334              		.loc 1 919 3 is_stmt 1 view .LVU102
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 335              		.loc 1 919 27 is_stmt 0 view .LVU103
 336 006a 84F850A0 		strb	r10, [r4, #80]
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 337              		.loc 1 946 3 is_stmt 1 view .LVU104
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 338              		.loc 1 946 28 is_stmt 0 view .LVU105
 339 006e 4246     		mov	r2, r8
 340 0070 3946     		mov	r1, r7
 341 0072 3046     		mov	r0, r6
 342 0074 FFF7FEFF 		bl	pxPortInitialiseStack
 343              	.LVL26:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 344              		.loc 1 946 26 view .LVU106
 345 0078 2060     		str	r0, [r4]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 346              		.loc 1 950 2 is_stmt 1 view .LVU107
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 347              		.loc 1 950 4 is_stmt 0 view .LVU108
 348 007a B9F1000F 		cmp	r9, #0
 349 007e 01D0     		beq	.L19
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 350              		.loc 1 954 3 is_stmt 1 view .LVU109
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 351              		.loc 1 954 18 is_stmt 0 view .LVU110
 352 0080 C9F80040 		str	r4, [r9]
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 353              		.loc 1 958 27 is_stmt 1 view .LVU111
 354              	.L19:
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 355              		.loc 1 960 1 is_stmt 0 view .LVU112
 356 0084 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 357              		.loc 1 960 1 view .LVU113
 358              		.cfi_endproc
 359              	.LFE6:
 361              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 362              		.align	1
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu softvfp
 368              	prvInitialiseTaskLists:
 369              	.LFB35:
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
ARM GAS  /tmp/ccubydGq.s 			page 77


 370              		.loc 1 3334 1 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 38B5     		push	{r3, r4, r5, lr}
 375              	.LCFI2:
 376              		.cfi_def_cfa_offset 16
 377              		.cfi_offset 3, -16
 378              		.cfi_offset 4, -12
 379              		.cfi_offset 5, -8
 380              		.cfi_offset 14, -4
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381              		.loc 1 3335 1 view .LVU115
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 382              		.loc 1 3337 2 view .LVU116
 383              	.LVL27:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 384              		.loc 1 3337 18 is_stmt 0 view .LVU117
 385 0002 0024     		movs	r4, #0
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 386              		.loc 1 3337 2 view .LVU118
 387 0004 07E0     		b	.L28
 388              	.LVL28:
 389              	.L29:
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 390              		.loc 1 3339 3 is_stmt 1 discriminator 3 view .LVU119
 391 0006 04EB8402 		add	r2, r4, r4, lsl #2
 392 000a 9300     		lsls	r3, r2, #2
 393 000c 0E48     		ldr	r0, .L31
 394 000e 1844     		add	r0, r0, r3
 395 0010 FFF7FEFF 		bl	vListInitialise
 396              	.LVL29:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 397              		.loc 1 3337 91 discriminator 3 view .LVU120
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 398              		.loc 1 3337 101 is_stmt 0 discriminator 3 view .LVU121
 399 0014 0134     		adds	r4, r4, #1
 400              	.LVL30:
 401              	.L28:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 402              		.loc 1 3337 40 is_stmt 1 discriminator 1 view .LVU122
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 403              		.loc 1 3337 2 is_stmt 0 discriminator 1 view .LVU123
 404 0016 062C     		cmp	r4, #6
 405 0018 F5D9     		bls	.L29
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 406              		.loc 1 3342 2 is_stmt 1 view .LVU124
 407 001a 0C4D     		ldr	r5, .L31+4
 408 001c 2846     		mov	r0, r5
 409 001e FFF7FEFF 		bl	vListInitialise
 410              	.LVL31:
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 411              		.loc 1 3343 2 view .LVU125
 412 0022 0B4C     		ldr	r4, .L31+8
 413              	.LVL32:
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 414              		.loc 1 3343 2 is_stmt 0 view .LVU126
ARM GAS  /tmp/ccubydGq.s 			page 78


 415 0024 2046     		mov	r0, r4
 416 0026 FFF7FEFF 		bl	vListInitialise
 417              	.LVL33:
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 418              		.loc 1 3344 2 is_stmt 1 view .LVU127
 419 002a 0A48     		ldr	r0, .L31+12
 420 002c FFF7FEFF 		bl	vListInitialise
 421              	.LVL34:
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 422              		.loc 1 3348 3 view .LVU128
 423 0030 0948     		ldr	r0, .L31+16
 424 0032 FFF7FEFF 		bl	vListInitialise
 425              	.LVL35:
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 426              		.loc 1 3354 3 view .LVU129
 427 0036 0948     		ldr	r0, .L31+20
 428 0038 FFF7FEFF 		bl	vListInitialise
 429              	.LVL36:
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 430              		.loc 1 3360 2 view .LVU130
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 431              		.loc 1 3360 20 is_stmt 0 view .LVU131
 432 003c 084B     		ldr	r3, .L31+24
 433 003e 1D60     		str	r5, [r3]
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 434              		.loc 1 3361 2 is_stmt 1 view .LVU132
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 435              		.loc 1 3361 28 is_stmt 0 view .LVU133
 436 0040 084B     		ldr	r3, .L31+28
 437 0042 1C60     		str	r4, [r3]
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 438              		.loc 1 3362 1 view .LVU134
 439 0044 38BD     		pop	{r3, r4, r5, pc}
 440              	.L32:
 441 0046 00BF     		.align	2
 442              	.L31:
 443 0048 00000000 		.word	.LANCHOR4
 444 004c 00000000 		.word	.LANCHOR5
 445 0050 00000000 		.word	.LANCHOR6
 446 0054 00000000 		.word	.LANCHOR1
 447 0058 00000000 		.word	.LANCHOR7
 448 005c 00000000 		.word	.LANCHOR0
 449 0060 00000000 		.word	.LANCHOR2
 450 0064 00000000 		.word	.LANCHOR8
 451              		.cfi_endproc
 452              	.LFE35:
 454              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 455              		.align	1
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu softvfp
 461              	prvAddNewTaskToReadyList:
 462              	.LVL37:
 463              	.LFB7:
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 464              		.loc 1 964 1 is_stmt 1 view -0
ARM GAS  /tmp/ccubydGq.s 			page 79


 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 468              		.loc 1 964 1 is_stmt 0 view .LVU136
 469 0000 10B5     		push	{r4, lr}
 470              	.LCFI3:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 14, -4
 474 0002 0446     		mov	r4, r0
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 475              		.loc 1 967 2 is_stmt 1 view .LVU137
 476 0004 FFF7FEFF 		bl	vPortEnterCritical
 477              	.LVL38:
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 478              		.loc 1 969 3 view .LVU138
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 479              		.loc 1 969 25 is_stmt 0 view .LVU139
 480 0008 204A     		ldr	r2, .L40
 481 000a 1368     		ldr	r3, [r2]
 482 000c 0133     		adds	r3, r3, #1
 483 000e 1360     		str	r3, [r2]
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 484              		.loc 1 970 3 is_stmt 1 view .LVU140
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 485              		.loc 1 970 20 is_stmt 0 view .LVU141
 486 0010 1F4B     		ldr	r3, .L40+4
 487 0012 1B68     		ldr	r3, [r3]
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 488              		.loc 1 970 5 view .LVU142
 489 0014 5BB1     		cbz	r3, .L38
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 490              		.loc 1 993 4 is_stmt 1 view .LVU143
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 491              		.loc 1 993 26 is_stmt 0 view .LVU144
 492 0016 1F4B     		ldr	r3, .L40+8
 493 0018 1B68     		ldr	r3, [r3]
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 494              		.loc 1 993 6 view .LVU145
 495 001a 6BB9     		cbnz	r3, .L35
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 496              		.loc 1 995 5 is_stmt 1 view .LVU146
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 497              		.loc 1 995 21 is_stmt 0 view .LVU147
 498 001c 1C4B     		ldr	r3, .L40+4
 499 001e 1B68     		ldr	r3, [r3]
 500 0020 DA6A     		ldr	r2, [r3, #44]
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 501              		.loc 1 995 45 view .LVU148
 502 0022 E36A     		ldr	r3, [r4, #44]
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 503              		.loc 1 995 7 view .LVU149
 504 0024 9A42     		cmp	r2, r3
 505 0026 07D8     		bhi	.L35
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 506              		.loc 1 997 6 is_stmt 1 view .LVU150
ARM GAS  /tmp/ccubydGq.s 			page 80


 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 507              		.loc 1 997 19 is_stmt 0 view .LVU151
 508 0028 194B     		ldr	r3, .L40+4
 509 002a 1C60     		str	r4, [r3]
 510 002c 04E0     		b	.L35
 511              	.L38:
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512              		.loc 1 974 4 is_stmt 1 view .LVU152
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 513              		.loc 1 974 17 is_stmt 0 view .LVU153
 514 002e 184B     		ldr	r3, .L40+4
 515 0030 1C60     		str	r4, [r3]
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 516              		.loc 1 976 4 is_stmt 1 view .LVU154
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 517              		.loc 1 976 31 is_stmt 0 view .LVU155
 518 0032 1368     		ldr	r3, [r2]
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 519              		.loc 1 976 6 view .LVU156
 520 0034 012B     		cmp	r3, #1
 521 0036 26D0     		beq	.L39
 522              	.L35:
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 523              		.loc 1 1006 29 is_stmt 1 view .LVU157
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 524              		.loc 1 1010 3 view .LVU158
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 525              		.loc 1 1010 15 is_stmt 0 view .LVU159
 526 0038 174A     		ldr	r2, .L40+12
 527 003a 1368     		ldr	r3, [r2]
 528 003c 0133     		adds	r3, r3, #1
 529 003e 1360     		str	r3, [r2]
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 530              		.loc 1 1018 31 is_stmt 1 view .LVU160
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531              		.loc 1 1020 3 view .LVU161
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 532              		.loc 1 1020 3 view .LVU162
 533 0040 E06A     		ldr	r0, [r4, #44]
 534 0042 0123     		movs	r3, #1
 535 0044 8340     		lsls	r3, r3, r0
 536 0046 154A     		ldr	r2, .L40+16
 537 0048 1168     		ldr	r1, [r2]
 538 004a 0B43     		orrs	r3, r3, r1
 539 004c 1360     		str	r3, [r2]
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 540              		.loc 1 1020 3 view .LVU163
 541 004e 00EB8000 		add	r0, r0, r0, lsl #2
 542 0052 211D     		adds	r1, r4, #4
 543 0054 124B     		ldr	r3, .L40+20
 544 0056 03EB8000 		add	r0, r3, r0, lsl #2
 545 005a FFF7FEFF 		bl	vListInsertEnd
 546              	.LVL39:
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547              		.loc 1 1020 36 view .LVU164
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 548              		.loc 1 1022 3 view .LVU165
ARM GAS  /tmp/ccubydGq.s 			page 81


1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 549              		.loc 1 1024 2 view .LVU166
 550 005e FFF7FEFF 		bl	vPortExitCritical
 551              	.LVL40:
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 552              		.loc 1 1026 2 view .LVU167
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 553              		.loc 1 1026 24 is_stmt 0 view .LVU168
 554 0062 0C4B     		ldr	r3, .L40+8
 555 0064 1B68     		ldr	r3, [r3]
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 556              		.loc 1 1026 4 view .LVU169
 557 0066 6BB1     		cbz	r3, .L33
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 558              		.loc 1 1030 3 is_stmt 1 view .LVU170
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 559              		.loc 1 1030 19 is_stmt 0 view .LVU171
 560 0068 094B     		ldr	r3, .L40+4
 561 006a 1B68     		ldr	r3, [r3]
 562 006c DA6A     		ldr	r2, [r3, #44]
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 563              		.loc 1 1030 42 view .LVU172
 564 006e E36A     		ldr	r3, [r4, #44]
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 565              		.loc 1 1030 5 view .LVU173
 566 0070 9A42     		cmp	r2, r3
 567 0072 07D2     		bcs	.L33
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 568              		.loc 1 1032 4 is_stmt 1 view .LVU174
 569 0074 0B4B     		ldr	r3, .L40+24
 570 0076 4FF08052 		mov	r2, #268435456
 571 007a 1A60     		str	r2, [r3]
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 572              		.loc 1 1032 4 view .LVU175
 573              		.syntax unified
 574              	@ 1032 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 575 007c BFF34F8F 		dsb
 576              	@ 0 "" 2
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 577              		.loc 1 1032 4 view .LVU176
 578              	@ 1032 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 579 0080 BFF36F8F 		isb
 580              	@ 0 "" 2
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 581              		.loc 1 1032 35 view .LVU177
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 582              		.loc 1 1041 27 view .LVU178
 583              		.thumb
 584              		.syntax unified
 585              	.L33:
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 586              		.loc 1 1043 1 is_stmt 0 view .LVU179
 587 0084 10BD     		pop	{r4, pc}
 588              	.LVL41:
 589              	.L39:
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 590              		.loc 1 981 5 is_stmt 1 view .LVU180
ARM GAS  /tmp/ccubydGq.s 			page 82


 591 0086 FFF7FEFF 		bl	prvInitialiseTaskLists
 592              	.LVL42:
 593 008a D5E7     		b	.L35
 594              	.L41:
 595              		.align	2
 596              	.L40:
 597 008c 00000000 		.word	.LANCHOR9
 598 0090 00000000 		.word	.LANCHOR10
 599 0094 00000000 		.word	.LANCHOR11
 600 0098 00000000 		.word	.LANCHOR12
 601 009c 00000000 		.word	.LANCHOR13
 602 00a0 00000000 		.word	.LANCHOR4
 603 00a4 04ED00E0 		.word	-536810236
 604              		.cfi_endproc
 605              	.LFE7:
 607              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 608              		.align	1
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu softvfp
 614              	prvAddCurrentTaskToDelayedList:
 615              	.LVL43:
 616              	.LFB51:
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccubydGq.s 			page 83


3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL. */
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	being used for anything else. */
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListI
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/ccubydGq.s 			page 84


3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding	task then it must be the running state task.  Remove
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the	holding task from the ready	list. */
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccubydGq.s 			page 85


3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 86


3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccubydGq.s 			page 87


3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
ARM GAS  /tmp/ccubydGq.s 			page 88


3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 89


4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
ARM GAS  /tmp/ccubydGq.s 			page 90


4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccubydGq.s 			page 91


4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
ARM GAS  /tmp/ccubydGq.s 			page 92


4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - 1;
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccubydGq.s 			page 93


4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
ARM GAS  /tmp/ccubydGq.s 			page 94


4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState == taskWAITING_NOTIFICATION )
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
ARM GAS  /tmp/ccubydGq.s 			page 95


4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccubydGq.s 			page 96


4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 97


4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
ARM GAS  /tmp/ccubydGq.s 			page 98


4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
ARM GAS  /tmp/ccubydGq.s 			page 99


4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccubydGq.s 			page 100


4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 617              		.loc 1 4693 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		.loc 1 4693 1 is_stmt 0 view .LVU182
 622 0000 70B5     		push	{r4, r5, r6, lr}
 623              	.LCFI4:
 624              		.cfi_def_cfa_offset 16
 625              		.cfi_offset 4, -16
 626              		.cfi_offset 5, -12
 627              		.cfi_offset 6, -8
 628              		.cfi_offset 14, -4
 629 0002 0446     		mov	r4, r0
 630 0004 0D46     		mov	r5, r1
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 631              		.loc 1 4694 1 is_stmt 1 view .LVU183
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 632              		.loc 1 4695 1 view .LVU184
 633              		.loc 1 4695 18 is_stmt 0 view .LVU185
 634 0006 1D4B     		ldr	r3, .L49
 635 0008 1E68     		ldr	r6, [r3]
 636              	.LVL44:
ARM GAS  /tmp/ccubydGq.s 			page 101


4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 637              		.loc 1 4708 2 is_stmt 1 view .LVU186
 638              		.loc 1 4708 35 is_stmt 0 view .LVU187
 639 000a 1D4B     		ldr	r3, .L49+4
 640 000c 1868     		ldr	r0, [r3]
 641              	.LVL45:
 642              		.loc 1 4708 6 view .LVU188
 643 000e 0430     		adds	r0, r0, #4
 644 0010 FFF7FEFF 		bl	uxListRemove
 645              	.LVL46:
 646              		.loc 1 4708 4 view .LVU189
 647 0014 50B9     		cbnz	r0, .L43
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 648              		.loc 1 4712 3 is_stmt 1 view .LVU190
 649 0016 1A4B     		ldr	r3, .L49+4
 650 0018 1B68     		ldr	r3, [r3]
 651 001a DA6A     		ldr	r2, [r3, #44]
 652 001c 0123     		movs	r3, #1
 653 001e 03FA02F2 		lsl	r2, r3, r2
 654 0022 1849     		ldr	r1, .L49+8
 655 0024 0B68     		ldr	r3, [r1]
 656 0026 23EA0203 		bic	r3, r3, r2
 657 002a 0B60     		str	r3, [r1]
 658              	.L43:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 659              		.loc 1 4716 27 view .LVU191
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 660              		.loc 1 4721 3 view .LVU192
 661              		.loc 1 4721 5 is_stmt 0 view .LVU193
 662 002c B4F1FF3F 		cmp	r4, #-1
 663 0030 0DD0     		beq	.L48
 664              	.L44:
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
ARM GAS  /tmp/ccubydGq.s 			page 102


4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 665              		.loc 1 4733 4 is_stmt 1 view .LVU194
 666              		.loc 1 4733 16 is_stmt 0 view .LVU195
 667 0032 3444     		add	r4, r4, r6
 668              	.LVL47:
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 669              		.loc 1 4736 4 is_stmt 1 view .LVU196
 670 0034 124B     		ldr	r3, .L49+4
 671 0036 1B68     		ldr	r3, [r3]
 672 0038 5C60     		str	r4, [r3, #4]
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 673              		.loc 1 4738 4 view .LVU197
 674              		.loc 1 4738 6 is_stmt 0 view .LVU198
 675 003a A642     		cmp	r6, r4
 676 003c 10D9     		bls	.L46
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 677              		.loc 1 4742 5 is_stmt 1 view .LVU199
 678 003e 124B     		ldr	r3, .L49+12
 679 0040 1868     		ldr	r0, [r3]
 680              		.loc 1 4742 60 is_stmt 0 view .LVU200
 681 0042 0F4B     		ldr	r3, .L49+4
 682 0044 1968     		ldr	r1, [r3]
 683              		.loc 1 4742 5 view .LVU201
 684 0046 0431     		adds	r1, r1, #4
 685 0048 FFF7FEFF 		bl	vListInsert
 686              	.LVL48:
 687              	.L42:
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccubydGq.s 			page 103


4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 688              		.loc 1 4801 1 view .LVU202
 689 004c 70BD     		pop	{r4, r5, r6, pc}
 690              	.LVL49:
 691              	.L48:
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 692              		.loc 1 4721 41 discriminator 1 view .LVU203
 693 004e 002D     		cmp	r5, #0
 694 0050 EFD0     		beq	.L44
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 695              		.loc 1 4726 4 is_stmt 1 view .LVU204
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 696              		.loc 1 4726 56 is_stmt 0 view .LVU205
 697 0052 0B4B     		ldr	r3, .L49+4
 698 0054 1968     		ldr	r1, [r3]
ARM GAS  /tmp/ccubydGq.s 			page 104


4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 699              		.loc 1 4726 4 view .LVU206
 700 0056 0431     		adds	r1, r1, #4
 701 0058 0C48     		ldr	r0, .L49+16
 702 005a FFF7FEFF 		bl	vListInsertEnd
 703              	.LVL50:
 704 005e F5E7     		b	.L42
 705              	.LVL51:
 706              	.L46:
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 707              		.loc 1 4748 5 is_stmt 1 view .LVU207
 708 0060 0B4B     		ldr	r3, .L49+20
 709 0062 1868     		ldr	r0, [r3]
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 710              		.loc 1 4748 52 is_stmt 0 view .LVU208
 711 0064 064B     		ldr	r3, .L49+4
 712 0066 1968     		ldr	r1, [r3]
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 713              		.loc 1 4748 5 view .LVU209
 714 0068 0431     		adds	r1, r1, #4
 715 006a FFF7FEFF 		bl	vListInsert
 716              	.LVL52:
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 717              		.loc 1 4753 5 is_stmt 1 view .LVU210
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 718              		.loc 1 4753 21 is_stmt 0 view .LVU211
 719 006e 094B     		ldr	r3, .L49+24
 720 0070 1B68     		ldr	r3, [r3]
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 721              		.loc 1 4753 7 view .LVU212
 722 0072 A342     		cmp	r3, r4
 723 0074 EAD9     		bls	.L42
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 724              		.loc 1 4755 6 is_stmt 1 view .LVU213
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 725              		.loc 1 4755 27 is_stmt 0 view .LVU214
 726 0076 074B     		ldr	r3, .L49+24
 727 0078 1C60     		str	r4, [r3]
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 728              		.loc 1 4759 30 is_stmt 1 view .LVU215
 729              		.loc 1 4801 1 is_stmt 0 view .LVU216
 730 007a E7E7     		b	.L42
 731              	.L50:
 732              		.align	2
 733              	.L49:
 734 007c 00000000 		.word	.LANCHOR14
 735 0080 00000000 		.word	.LANCHOR10
 736 0084 00000000 		.word	.LANCHOR13
 737 0088 00000000 		.word	.LANCHOR8
 738 008c 00000000 		.word	.LANCHOR0
 739 0090 00000000 		.word	.LANCHOR2
 740 0094 00000000 		.word	.LANCHOR3
 741              		.cfi_endproc
 742              	.LFE51:
 744              		.section	.text.xTaskCreate,"ax",%progbits
 745              		.align	1
 746              		.global	xTaskCreate
ARM GAS  /tmp/ccubydGq.s 			page 105


 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu softvfp
 752              	xTaskCreate:
 753              	.LVL53:
 754              	.LFB5:
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 755              		.loc 1 682 2 is_stmt 1 view -0
 756              		.cfi_startproc
 757              		@ args = 8, pretend = 0, frame = 0
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 759              		.loc 1 682 2 is_stmt 0 view .LVU218
 760 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 761              	.LCFI5:
 762              		.cfi_def_cfa_offset 28
 763              		.cfi_offset 4, -28
 764              		.cfi_offset 5, -24
 765              		.cfi_offset 6, -20
 766              		.cfi_offset 7, -16
 767              		.cfi_offset 8, -12
 768              		.cfi_offset 9, -8
 769              		.cfi_offset 14, -4
 770 0004 85B0     		sub	sp, sp, #20
 771              	.LCFI6:
 772              		.cfi_def_cfa_offset 48
 773 0006 0746     		mov	r7, r0
 774 0008 8846     		mov	r8, r1
 775 000a 1446     		mov	r4, r2
 776 000c 1E46     		mov	r6, r3
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 777              		.loc 1 683 2 is_stmt 1 view .LVU219
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 778              		.loc 1 684 2 view .LVU220
 779              	.LBB92:
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780              		.loc 1 713 3 view .LVU221
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 781              		.loc 1 716 4 view .LVU222
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 782              		.loc 1 716 32 is_stmt 0 view .LVU223
 783 000e 9000     		lsls	r0, r2, #2
 784              	.LVL54:
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 785              		.loc 1 716 32 view .LVU224
 786 0010 FFF7FEFF 		bl	pvPortMalloc
 787              	.LVL55:
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 788              		.loc 1 718 4 is_stmt 1 view .LVU225
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 789              		.loc 1 718 6 is_stmt 0 view .LVU226
 790 0014 F0B1     		cbz	r0, .L55
 791 0016 8146     		mov	r9, r0
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 792              		.loc 1 721 5 is_stmt 1 view .LVU227
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 106


 793              		.loc 1 721 28 is_stmt 0 view .LVU228
 794 0018 5420     		movs	r0, #84
 795              	.LVL56:
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 796              		.loc 1 721 28 view .LVU229
 797 001a FFF7FEFF 		bl	pvPortMalloc
 798              	.LVL57:
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 799              		.loc 1 723 5 is_stmt 1 view .LVU230
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 800              		.loc 1 723 7 is_stmt 0 view .LVU231
 801 001e 0546     		mov	r5, r0
 802 0020 A0B1     		cbz	r0, .L53
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 803              		.loc 1 726 6 is_stmt 1 view .LVU232
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 804              		.loc 1 726 24 is_stmt 0 view .LVU233
 805 0022 C0F83090 		str	r9, [r0, #48]
 806              	.LVL58:
 807              	.L54:
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 808              		.loc 1 726 24 view .LVU234
 809              	.LBE92:
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 810              		.loc 1 742 3 is_stmt 1 view .LVU235
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 811              		.loc 1 742 5 is_stmt 0 view .LVU236
 812 0026 D5B1     		cbz	r5, .L56
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 813              		.loc 1 752 4 is_stmt 1 view .LVU237
 814 0028 0023     		movs	r3, #0
 815 002a 0393     		str	r3, [sp, #12]
 816 002c 0295     		str	r5, [sp, #8]
 817 002e 0D9B     		ldr	r3, [sp, #52]
 818 0030 0193     		str	r3, [sp, #4]
 819 0032 0C9B     		ldr	r3, [sp, #48]
 820 0034 0093     		str	r3, [sp]
 821 0036 3346     		mov	r3, r6
 822 0038 2246     		mov	r2, r4
 823 003a 4146     		mov	r1, r8
 824 003c 3846     		mov	r0, r7
 825 003e FFF7FEFF 		bl	prvInitialiseNewTask
 826              	.LVL59:
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 827              		.loc 1 753 4 view .LVU238
 828 0042 2846     		mov	r0, r5
 829 0044 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 830              	.LVL60:
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 831              		.loc 1 754 4 view .LVU239
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 832              		.loc 1 754 12 is_stmt 0 view .LVU240
 833 0048 0120     		movs	r0, #1
 834 004a 05E0     		b	.L51
 835              	.LVL61:
 836              	.L53:
 837              	.LBB93:
ARM GAS  /tmp/ccubydGq.s 			page 107


 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 838              		.loc 1 732 6 is_stmt 1 view .LVU241
 839 004c 4846     		mov	r0, r9
 840              	.LVL62:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 841              		.loc 1 732 6 is_stmt 0 view .LVU242
 842 004e FFF7FEFF 		bl	vPortFree
 843              	.LVL63:
 844 0052 E8E7     		b	.L54
 845              	.LVL64:
 846              	.L55:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 847              		.loc 1 732 6 view .LVU243
 848              	.LBE93:
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 849              		.loc 1 758 12 view .LVU244
 850 0054 4FF0FF30 		mov	r0, #-1
 851              	.LVL65:
 852              	.L51:
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 853              		.loc 1 762 2 view .LVU245
 854 0058 05B0     		add	sp, sp, #20
 855              	.LCFI7:
 856              		.cfi_remember_state
 857              		.cfi_def_cfa_offset 28
 858              		@ sp needed
 859 005a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 860              	.LVL66:
 861              	.L56:
 862              	.LCFI8:
 863              		.cfi_restore_state
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 864              		.loc 1 758 12 view .LVU246
 865 005e 4FF0FF30 		mov	r0, #-1
 866              	.LVL67:
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 867              		.loc 1 761 3 is_stmt 1 view .LVU247
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 868              		.loc 1 761 10 is_stmt 0 view .LVU248
 869 0062 F9E7     		b	.L51
 870              		.cfi_endproc
 871              	.LFE5:
 873              		.section	.text.vTaskDelete,"ax",%progbits
 874              		.align	1
 875              		.global	vTaskDelete
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 879              		.fpu softvfp
 881              	vTaskDelete:
 882              	.LVL68:
 883              	.LFB8:
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 884              		.loc 1 1049 2 is_stmt 1 view -0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccubydGq.s 			page 108


1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 888              		.loc 1 1049 2 is_stmt 0 view .LVU250
 889 0000 38B5     		push	{r3, r4, r5, lr}
 890              	.LCFI9:
 891              		.cfi_def_cfa_offset 16
 892              		.cfi_offset 3, -16
 893              		.cfi_offset 4, -12
 894              		.cfi_offset 5, -8
 895              		.cfi_offset 14, -4
 896 0002 0446     		mov	r4, r0
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 897              		.loc 1 1050 2 is_stmt 1 view .LVU251
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 898              		.loc 1 1052 3 view .LVU252
 899 0004 FFF7FEFF 		bl	vPortEnterCritical
 900              	.LVL69:
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 901              		.loc 1 1056 4 view .LVU253
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 902              		.loc 1 1056 12 is_stmt 0 view .LVU254
 903 0008 002C     		cmp	r4, #0
 904 000a 34D0     		beq	.L68
 905              	.LVL70:
 906              	.L59:
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 907              		.loc 1 1059 4 is_stmt 1 discriminator 4 view .LVU255
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 908              		.loc 1 1059 8 is_stmt 0 discriminator 4 view .LVU256
 909 000c 251D     		adds	r5, r4, #4
 910 000e 2846     		mov	r0, r5
 911 0010 FFF7FEFF 		bl	uxListRemove
 912              	.LVL71:
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 913              		.loc 1 1059 6 discriminator 4 view .LVU257
 914 0014 70B9     		cbnz	r0, .L60
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 915              		.loc 1 1061 5 is_stmt 1 view .LVU258
 916 0016 E26A     		ldr	r2, [r4, #44]
 917 0018 02EB8201 		add	r1, r2, r2, lsl #2
 918 001c 264B     		ldr	r3, .L71
 919 001e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 920 0022 3BB9     		cbnz	r3, .L60
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 921              		.loc 1 1061 5 discriminator 1 view .LVU259
 922 0024 0123     		movs	r3, #1
 923 0026 03FA02F2 		lsl	r2, r3, r2
 924 002a 2449     		ldr	r1, .L71+4
 925 002c 0B68     		ldr	r3, [r1]
 926 002e 23EA0203 		bic	r3, r3, r2
 927 0032 0B60     		str	r3, [r1]
 928              	.L60:
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 929              		.loc 1 1065 29 view .LVU260
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 930              		.loc 1 1069 4 view .LVU261
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 931              		.loc 1 1069 8 is_stmt 0 view .LVU262
ARM GAS  /tmp/ccubydGq.s 			page 109


 932 0034 A36A     		ldr	r3, [r4, #40]
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 933              		.loc 1 1069 6 view .LVU263
 934 0036 1BB1     		cbz	r3, .L61
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 935              		.loc 1 1071 5 is_stmt 1 view .LVU264
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 936              		.loc 1 1071 14 is_stmt 0 view .LVU265
 937 0038 04F11800 		add	r0, r4, #24
 938 003c FFF7FEFF 		bl	uxListRemove
 939              	.LVL72:
 940              	.L61:
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 941              		.loc 1 1075 29 is_stmt 1 view .LVU266
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 942              		.loc 1 1082 4 view .LVU267
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 943              		.loc 1 1082 16 is_stmt 0 view .LVU268
 944 0040 1F4A     		ldr	r2, .L71+8
 945 0042 1368     		ldr	r3, [r2]
 946 0044 0133     		adds	r3, r3, #1
 947 0046 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 948              		.loc 1 1084 4 is_stmt 1 view .LVU269
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 949              		.loc 1 1084 14 is_stmt 0 view .LVU270
 950 0048 1E4B     		ldr	r3, .L71+12
 951 004a 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 952              		.loc 1 1084 6 view .LVU271
 953 004c A342     		cmp	r3, r4
 954 004e 15D0     		beq	.L69
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 955              		.loc 1 1107 5 is_stmt 1 view .LVU272
 956 0050 1D4A     		ldr	r2, .L71+16
 957 0052 1368     		ldr	r3, [r2]
 958 0054 013B     		subs	r3, r3, #1
 959 0056 1360     		str	r3, [r2]
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 960              		.loc 1 1108 5 view .LVU273
 961 0058 2046     		mov	r0, r4
 962 005a FFF7FEFF 		bl	prvDeleteTCB
 963              	.LVL73:
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 964              		.loc 1 1112 5 view .LVU274
 965 005e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 966              	.LVL74:
 967              	.L63:
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 968              		.loc 1 1115 29 view .LVU275
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 969              		.loc 1 1117 3 view .LVU276
 970 0062 FFF7FEFF 		bl	vPortExitCritical
 971              	.LVL75:
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 972              		.loc 1 1121 3 view .LVU277
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccubydGq.s 			page 110


 973              		.loc 1 1121 25 is_stmt 0 view .LVU278
 974 0066 194B     		ldr	r3, .L71+20
 975 0068 1B68     		ldr	r3, [r3]
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 976              		.loc 1 1121 5 view .LVU279
 977 006a 1BB1     		cbz	r3, .L58
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 978              		.loc 1 1123 4 is_stmt 1 view .LVU280
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 979              		.loc 1 1123 14 is_stmt 0 view .LVU281
 980 006c 154B     		ldr	r3, .L71+12
 981 006e 1B68     		ldr	r3, [r3]
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 982              		.loc 1 1123 6 view .LVU282
 983 0070 A342     		cmp	r3, r4
 984 0072 0CD0     		beq	.L70
 985              	.L58:
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 986              		.loc 1 1133 2 view .LVU283
 987 0074 38BD     		pop	{r3, r4, r5, pc}
 988              	.LVL76:
 989              	.L68:
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990              		.loc 1 1056 12 discriminator 1 view .LVU284
 991 0076 134B     		ldr	r3, .L71+12
 992 0078 1C68     		ldr	r4, [r3]
 993              	.LVL77:
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994              		.loc 1 1056 12 discriminator 1 view .LVU285
 995 007a C7E7     		b	.L59
 996              	.LVL78:
 997              	.L69:
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 998              		.loc 1 1091 5 is_stmt 1 view .LVU286
 999 007c 2946     		mov	r1, r5
 1000 007e 1448     		ldr	r0, .L71+24
 1001 0080 FFF7FEFF 		bl	vListInsertEnd
 1002              	.LVL79:
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1003              		.loc 1 1096 5 view .LVU287
 1004 0084 134A     		ldr	r2, .L71+28
 1005 0086 1368     		ldr	r3, [r2]
 1006 0088 0133     		adds	r3, r3, #1
 1007 008a 1360     		str	r3, [r2]
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1008              		.loc 1 1103 54 view .LVU288
 1009 008c E9E7     		b	.L63
 1010              	.L70:
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1011              		.loc 1 1125 5 view .LVU289
 1012 008e 124B     		ldr	r3, .L71+32
 1013 0090 1B68     		ldr	r3, [r3]
 1014 0092 43B1     		cbz	r3, .L65
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1015              		.loc 1 1125 5 view .LVU290
 1016              	.LBB94:
 1017              	.LBI94:
ARM GAS  /tmp/ccubydGq.s 			page 111


 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1018              		.loc 2 233 30 view .LVU291
 1019              	.LBB95:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1020              		.loc 2 235 1 view .LVU292
 1021              		.loc 2 237 2 view .LVU293
 1022              		.syntax unified
 1023              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1024 0094 4FF05003 			mov r3, #80												
 1025 0098 83F31188 		msr basepri, r3											
 1026 009c BFF36F8F 		isb														
 1027 00a0 BFF34F8F 		dsb														
 1028              	
 1029              	@ 0 "" 2
 1030              	.LVL80:
 1031              		.thumb
 1032              		.syntax unified
 1033              	.L66:
 1034              		.loc 2 237 2 is_stmt 0 view .LVU294
 1035              	.LBE95:
 1036              	.LBE94:
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1037              		.loc 1 1125 5 is_stmt 1 discriminator 1 view .LVU295
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1038              		.loc 1 1125 5 discriminator 1 view .LVU296
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1039              		.loc 1 1125 5 discriminator 1 view .LVU297
 1040 00a4 FEE7     		b	.L66
 1041              	.L65:
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1042              		.loc 1 1125 46 discriminator 2 view .LVU298
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1043              		.loc 1 1126 5 discriminator 2 view .LVU299
 1044 00a6 0D4B     		ldr	r3, .L71+36
 1045 00a8 4FF08052 		mov	r2, #268435456
 1046 00ac 1A60     		str	r2, [r3]
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1047              		.loc 1 1126 5 discriminator 2 view .LVU300
 1048              		.syntax unified
 1049              	@ 1126 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1050 00ae BFF34F8F 		dsb
 1051              	@ 0 "" 2
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1052              		.loc 1 1126 5 discriminator 2 view .LVU301
 1053              	@ 1126 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1054 00b2 BFF36F8F 		isb
 1055              	@ 0 "" 2
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1056              		.loc 1 1126 27 discriminator 2 view .LVU302
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1057              		.loc 1 1130 29 discriminator 2 view .LVU303
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1058              		.loc 1 1133 2 is_stmt 0 discriminator 2 view .LVU304
 1059              		.thumb
 1060              		.syntax unified
 1061 00b6 DDE7     		b	.L58
 1062              	.L72:
ARM GAS  /tmp/ccubydGq.s 			page 112


 1063              		.align	2
 1064              	.L71:
 1065 00b8 00000000 		.word	.LANCHOR4
 1066 00bc 00000000 		.word	.LANCHOR13
 1067 00c0 00000000 		.word	.LANCHOR12
 1068 00c4 00000000 		.word	.LANCHOR10
 1069 00c8 00000000 		.word	.LANCHOR9
 1070 00cc 00000000 		.word	.LANCHOR11
 1071 00d0 00000000 		.word	.LANCHOR7
 1072 00d4 00000000 		.word	.LANCHOR15
 1073 00d8 00000000 		.word	.LANCHOR16
 1074 00dc 04ED00E0 		.word	-536810236
 1075              		.cfi_endproc
 1076              	.LFE8:
 1078              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1079              		.align	1
 1080              		.global	uxTaskPriorityGet
 1081              		.syntax unified
 1082              		.thumb
 1083              		.thumb_func
 1084              		.fpu softvfp
 1086              	uxTaskPriorityGet:
 1087              	.LVL81:
 1088              	.LFB10:
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1089              		.loc 1 1341 2 is_stmt 1 view -0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1093              		.loc 1 1341 2 is_stmt 0 view .LVU306
 1094 0000 10B5     		push	{r4, lr}
 1095              	.LCFI10:
 1096              		.cfi_def_cfa_offset 8
 1097              		.cfi_offset 4, -8
 1098              		.cfi_offset 14, -4
 1099 0002 0446     		mov	r4, r0
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1100              		.loc 1 1342 2 is_stmt 1 view .LVU307
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1101              		.loc 1 1343 2 view .LVU308
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1102              		.loc 1 1345 3 view .LVU309
 1103 0004 FFF7FEFF 		bl	vPortEnterCritical
 1104              	.LVL82:
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1105              		.loc 1 1349 4 view .LVU310
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1106              		.loc 1 1349 12 is_stmt 0 view .LVU311
 1107 0008 24B1     		cbz	r4, .L76
 1108              	.LVL83:
 1109              	.L74:
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1110              		.loc 1 1350 4 is_stmt 1 discriminator 4 view .LVU312
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1111              		.loc 1 1350 13 is_stmt 0 discriminator 4 view .LVU313
 1112 000a E46A     		ldr	r4, [r4, #44]
ARM GAS  /tmp/ccubydGq.s 			page 113


 1113              	.LVL84:
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1114              		.loc 1 1352 3 is_stmt 1 discriminator 4 view .LVU314
 1115 000c FFF7FEFF 		bl	vPortExitCritical
 1116              	.LVL85:
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1117              		.loc 1 1354 3 discriminator 4 view .LVU315
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1118              		.loc 1 1355 2 is_stmt 0 discriminator 4 view .LVU316
 1119 0010 2046     		mov	r0, r4
 1120 0012 10BD     		pop	{r4, pc}
 1121              	.LVL86:
 1122              	.L76:
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1123              		.loc 1 1349 12 discriminator 1 view .LVU317
 1124 0014 014B     		ldr	r3, .L77
 1125 0016 1C68     		ldr	r4, [r3]
 1126              	.LVL87:
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1127              		.loc 1 1349 12 discriminator 1 view .LVU318
 1128 0018 F7E7     		b	.L74
 1129              	.L78:
 1130 001a 00BF     		.align	2
 1131              	.L77:
 1132 001c 00000000 		.word	.LANCHOR10
 1133              		.cfi_endproc
 1134              	.LFE10:
 1136              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1137              		.align	1
 1138              		.global	uxTaskPriorityGetFromISR
 1139              		.syntax unified
 1140              		.thumb
 1141              		.thumb_func
 1142              		.fpu softvfp
 1144              	uxTaskPriorityGetFromISR:
 1145              	.LVL88:
 1146              	.LFB11:
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1147              		.loc 1 1363 2 is_stmt 1 view -0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1151              		.loc 1 1363 2 is_stmt 0 view .LVU320
 1152 0000 10B5     		push	{r4, lr}
 1153              	.LCFI11:
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 4, -8
 1156              		.cfi_offset 14, -4
 1157 0002 0446     		mov	r4, r0
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1158              		.loc 1 1364 2 is_stmt 1 view .LVU321
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1159              		.loc 1 1365 2 view .LVU322
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1160              		.loc 1 1383 3 view .LVU323
 1161 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
ARM GAS  /tmp/ccubydGq.s 			page 114


 1162              	.LVL89:
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1163              		.loc 1 1385 3 view .LVU324
 1164              	.LBB96:
 1165              	.LBI96:
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n"	\
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1166              		.loc 2 249 34 view .LVU325
 1167              	.LBB97:
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1168              		.loc 2 251 1 view .LVU326
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1169              		.loc 2 253 2 view .LVU327
 1170              		.syntax unified
 1171              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1172 0008 EFF31183 			mrs r3, basepri											
 1173 000c 4FF05002 		mov r2, #80												
 1174 0010 82F31188 		msr basepri, r2											
 1175 0014 BFF36F8F 		isb														
 1176 0018 BFF34F8F 		dsb														
 1177              	
 1178              	@ 0 "" 2
 1179              	.LVL90:
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n"	\
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 1180              		.loc 2 265 2 view .LVU328
 1181              		.loc 2 265 2 is_stmt 0 view .LVU329
 1182              		.thumb
 1183              		.syntax unified
 1184              	.LBE97:
 1185              	.LBE96:
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1186              		.loc 1 1389 4 is_stmt 1 view .LVU330
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1187              		.loc 1 1389 12 is_stmt 0 view .LVU331
ARM GAS  /tmp/ccubydGq.s 			page 115


 1188 001c 1CB1     		cbz	r4, .L82
 1189              	.LVL91:
 1190              	.L80:
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1191              		.loc 1 1390 4 is_stmt 1 discriminator 4 view .LVU332
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1192              		.loc 1 1390 13 is_stmt 0 discriminator 4 view .LVU333
 1193 001e E06A     		ldr	r0, [r4, #44]
 1194              	.LVL92:
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1195              		.loc 1 1392 3 is_stmt 1 discriminator 4 view .LVU334
 1196              	.LBB98:
 1197              	.LBI98:
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1198              		.loc 2 269 30 discriminator 4 view .LVU335
 1199              	.LBB99:
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1200              		.loc 2 271 2 discriminator 4 view .LVU336
 1201              		.syntax unified
 1202              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1203 0020 83F31188 			msr basepri, r3	
 1204              	@ 0 "" 2
 1205              	.LVL93:
 1206              		.loc 2 271 2 is_stmt 0 discriminator 4 view .LVU337
 1207              		.thumb
 1208              		.syntax unified
 1209              	.LBE99:
 1210              	.LBE98:
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1211              		.loc 1 1394 3 is_stmt 1 discriminator 4 view .LVU338
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1212              		.loc 1 1395 2 is_stmt 0 discriminator 4 view .LVU339
 1213 0024 10BD     		pop	{r4, pc}
 1214              	.LVL94:
 1215              	.L82:
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1216              		.loc 1 1389 12 discriminator 1 view .LVU340
 1217 0026 014A     		ldr	r2, .L83
 1218 0028 1468     		ldr	r4, [r2]
 1219              	.LVL95:
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1220              		.loc 1 1389 12 discriminator 1 view .LVU341
 1221 002a F8E7     		b	.L80
 1222              	.L84:
 1223              		.align	2
 1224              	.L83:
 1225 002c 00000000 		.word	.LANCHOR10
 1226              		.cfi_endproc
 1227              	.LFE11:
 1229              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1230              		.align	1
 1231              		.global	vTaskPrioritySet
 1232              		.syntax unified
ARM GAS  /tmp/ccubydGq.s 			page 116


 1233              		.thumb
 1234              		.thumb_func
 1235              		.fpu softvfp
 1237              	vTaskPrioritySet:
 1238              	.LVL96:
 1239              	.LFB12:
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1240              		.loc 1 1403 2 is_stmt 1 view -0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1244              		.loc 1 1403 2 is_stmt 0 view .LVU343
 1245 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1246              	.LCFI12:
 1247              		.cfi_def_cfa_offset 24
 1248              		.cfi_offset 3, -24
 1249              		.cfi_offset 4, -20
 1250              		.cfi_offset 5, -16
 1251              		.cfi_offset 6, -12
 1252              		.cfi_offset 7, -8
 1253              		.cfi_offset 14, -4
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1254              		.loc 1 1404 2 is_stmt 1 view .LVU344
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1255              		.loc 1 1405 2 view .LVU345
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1256              		.loc 1 1406 2 view .LVU346
 1257              	.LVL97:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1258              		.loc 1 1408 3 view .LVU347
 1259 0002 0629     		cmp	r1, #6
 1260 0004 08D9     		bls	.L86
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1261              		.loc 1 1408 3 view .LVU348
 1262              	.LBB100:
 1263              	.LBI100:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1264              		.loc 2 233 30 view .LVU349
 1265              	.LBB101:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1266              		.loc 2 235 1 view .LVU350
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1267              		.loc 2 237 2 view .LVU351
 1268              		.syntax unified
 1269              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1270 0006 4FF05003 			mov r3, #80												
 1271 000a 83F31188 		msr basepri, r3											
 1272 000e BFF36F8F 		isb														
 1273 0012 BFF34F8F 		dsb														
 1274              	
 1275              	@ 0 "" 2
 1276              	.LVL98:
 1277              		.thumb
 1278              		.syntax unified
 1279              	.L87:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
ARM GAS  /tmp/ccubydGq.s 			page 117


 1280              		.loc 2 237 2 is_stmt 0 view .LVU352
 1281              	.LBE101:
 1282              	.LBE100:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1283              		.loc 1 1408 3 is_stmt 1 discriminator 1 view .LVU353
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1284              		.loc 1 1408 3 discriminator 1 view .LVU354
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1285              		.loc 1 1408 3 discriminator 1 view .LVU355
 1286 0016 FEE7     		b	.L87
 1287              	.L86:
 1288 0018 0446     		mov	r4, r0
 1289 001a 0D46     		mov	r5, r1
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1290              		.loc 1 1408 59 view .LVU356
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1291              		.loc 1 1411 3 view .LVU357
 1292              	.LVL99:
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1293              		.loc 1 1417 28 view .LVU358
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1294              		.loc 1 1420 3 view .LVU359
 1295 001c FFF7FEFF 		bl	vPortEnterCritical
 1296              	.LVL100:
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1297              		.loc 1 1424 4 view .LVU360
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1298              		.loc 1 1424 12 is_stmt 0 view .LVU361
 1299 0020 74B1     		cbz	r4, .L100
 1300              	.LVL101:
 1301              	.L88:
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1302              		.loc 1 1426 50 is_stmt 1 discriminator 4 view .LVU362
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1303              		.loc 1 1430 5 discriminator 4 view .LVU363
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1304              		.loc 1 1430 27 is_stmt 0 discriminator 4 view .LVU364
 1305 0022 636C     		ldr	r3, [r4, #68]
 1306              	.LVL102:
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1307              		.loc 1 1438 4 is_stmt 1 discriminator 4 view .LVU365
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1308              		.loc 1 1438 6 is_stmt 0 discriminator 4 view .LVU366
 1309 0024 9D42     		cmp	r5, r3
 1310 0026 2ED0     		beq	.L89
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1311              		.loc 1 1442 5 is_stmt 1 view .LVU367
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1312              		.loc 1 1442 7 is_stmt 0 view .LVU368
 1313 0028 0DD9     		bls	.L90
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1314              		.loc 1 1444 6 is_stmt 1 view .LVU369
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1315              		.loc 1 1444 16 is_stmt 0 view .LVU370
 1316 002a 2B4A     		ldr	r2, .L103
 1317 002c 1268     		ldr	r2, [r2]
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccubydGq.s 			page 118


 1318              		.loc 1 1444 8 view .LVU371
 1319 002e A242     		cmp	r2, r4
 1320 0030 2CD0     		beq	.L96
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1321              		.loc 1 1449 7 is_stmt 1 view .LVU372
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1322              		.loc 1 1449 40 is_stmt 0 view .LVU373
 1323 0032 294A     		ldr	r2, .L103
 1324 0034 1268     		ldr	r2, [r2]
 1325 0036 D26A     		ldr	r2, [r2, #44]
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1326              		.loc 1 1449 9 view .LVU374
 1327 0038 AA42     		cmp	r2, r5
 1328 003a 29D9     		bls	.L97
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1329              		.loc 1 1406 13 view .LVU375
 1330 003c 0026     		movs	r6, #0
 1331 003e 07E0     		b	.L91
 1332              	.LVL103:
 1333              	.L100:
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1334              		.loc 1 1424 12 discriminator 1 view .LVU376
 1335 0040 254B     		ldr	r3, .L103
 1336 0042 1C68     		ldr	r4, [r3]
 1337              	.LVL104:
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1338              		.loc 1 1424 12 discriminator 1 view .LVU377
 1339 0044 EDE7     		b	.L88
 1340              	.LVL105:
 1341              	.L90:
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1342              		.loc 1 1465 10 is_stmt 1 view .LVU378
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1343              		.loc 1 1465 20 is_stmt 0 view .LVU379
 1344 0046 244A     		ldr	r2, .L103
 1345 0048 1268     		ldr	r2, [r2]
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1346              		.loc 1 1465 12 view .LVU380
 1347 004a A242     		cmp	r2, r4
 1348 004c 22D0     		beq	.L98
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1349              		.loc 1 1406 13 view .LVU381
 1350 004e 0026     		movs	r6, #0
 1351              	.L91:
 1352              	.LVL106:
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1353              		.loc 1 1477 5 is_stmt 1 view .LVU382
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1354              		.loc 1 1482 5 view .LVU383
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1355              		.loc 1 1482 27 is_stmt 0 view .LVU384
 1356 0050 E76A     		ldr	r7, [r4, #44]
 1357              	.LVL107:
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1358              		.loc 1 1488 6 is_stmt 1 view .LVU385
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1359              		.loc 1 1488 8 is_stmt 0 view .LVU386
ARM GAS  /tmp/ccubydGq.s 			page 119


 1360 0052 BB42     		cmp	r3, r7
 1361 0054 20D0     		beq	.L101
 1362              	.L92:
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1363              		.loc 1 1494 31 is_stmt 1 view .LVU387
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1364              		.loc 1 1498 6 view .LVU388
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1365              		.loc 1 1498 28 is_stmt 0 view .LVU389
 1366 0056 6564     		str	r5, [r4, #68]
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1367              		.loc 1 1508 5 is_stmt 1 view .LVU390
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1368              		.loc 1 1508 11 is_stmt 0 view .LVU391
 1369 0058 A369     		ldr	r3, [r4, #24]
 1370              	.LVL108:
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1371              		.loc 1 1508 7 view .LVU392
 1372 005a 002B     		cmp	r3, #0
 1373 005c 02DB     		blt	.L93
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1374              		.loc 1 1510 6 is_stmt 1 view .LVU393
 1375 005e C5F10705 		rsb	r5, r5, #7
 1376              	.LVL109:
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1377              		.loc 1 1510 6 is_stmt 0 view .LVU394
 1378 0062 A561     		str	r5, [r4, #24]
 1379              	.L93:
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1380              		.loc 1 1514 30 is_stmt 1 view .LVU395
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1381              		.loc 1 1521 5 view .LVU396
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1382              		.loc 1 1521 9 is_stmt 0 view .LVU397
 1383 0064 6169     		ldr	r1, [r4, #20]
 1384 0066 07EB8702 		add	r2, r7, r7, lsl #2
 1385 006a 1C4B     		ldr	r3, .L103+4
 1386 006c 03EB8203 		add	r3, r3, r2, lsl #2
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1387              		.loc 1 1521 112 view .LVU398
 1388 0070 9942     		cmp	r1, r3
 1389 0072 13D0     		beq	.L102
 1390              	.LVL110:
 1391              	.L94:
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1392              		.loc 1 1541 30 is_stmt 1 view .LVU399
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1393              		.loc 1 1544 5 view .LVU400
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1394              		.loc 1 1544 7 is_stmt 0 view .LVU401
 1395 0074 3EB1     		cbz	r6, .L89
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1396              		.loc 1 1546 6 is_stmt 1 view .LVU402
 1397 0076 1A4B     		ldr	r3, .L103+8
 1398 0078 4FF08052 		mov	r2, #268435456
 1399 007c 1A60     		str	r2, [r3]
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccubydGq.s 			page 120


 1400              		.loc 1 1546 6 view .LVU403
 1401              		.syntax unified
 1402              	@ 1546 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1403 007e BFF34F8F 		dsb
 1404              	@ 0 "" 2
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1405              		.loc 1 1546 6 view .LVU404
 1406              	@ 1546 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1407 0082 BFF36F8F 		isb
 1408              	@ 0 "" 2
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1409              		.loc 1 1546 37 view .LVU405
 1410              	.LVL111:
 1411              		.thumb
 1412              		.syntax unified
 1413              	.L89:
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1414              		.loc 1 1550 30 view .LVU406
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1415              		.loc 1 1555 5 view .LVU407
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1416              		.loc 1 1558 3 view .LVU408
 1417 0086 FFF7FEFF 		bl	vPortExitCritical
 1418              	.LVL112:
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1419              		.loc 1 1559 2 is_stmt 0 view .LVU409
 1420 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1421              	.LVL113:
 1422              	.L96:
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1423              		.loc 1 1406 13 view .LVU410
 1424 008c 0026     		movs	r6, #0
 1425 008e DFE7     		b	.L91
 1426              	.L97:
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1427              		.loc 1 1451 23 view .LVU411
 1428 0090 0126     		movs	r6, #1
 1429 0092 DDE7     		b	.L91
 1430              	.L98:
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1431              		.loc 1 1470 21 view .LVU412
 1432 0094 0126     		movs	r6, #1
 1433 0096 DBE7     		b	.L91
 1434              	.LVL114:
 1435              	.L101:
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1436              		.loc 1 1490 7 is_stmt 1 view .LVU413
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1437              		.loc 1 1490 25 is_stmt 0 view .LVU414
 1438 0098 E562     		str	r5, [r4, #44]
 1439 009a DCE7     		b	.L92
 1440              	.LVL115:
 1441              	.L102:
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1442              		.loc 1 1526 6 is_stmt 1 view .LVU415
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1443              		.loc 1 1526 10 is_stmt 0 view .LVU416
ARM GAS  /tmp/ccubydGq.s 			page 121


 1444 009c 251D     		adds	r5, r4, #4
 1445 009e 2846     		mov	r0, r5
 1446 00a0 FFF7FEFF 		bl	uxListRemove
 1447              	.LVL116:
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1448              		.loc 1 1526 8 view .LVU417
 1449 00a4 38B9     		cbnz	r0, .L95
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1450              		.loc 1 1531 7 is_stmt 1 view .LVU418
 1451 00a6 0123     		movs	r3, #1
 1452 00a8 03FA07F7 		lsl	r7, r3, r7
 1453              	.LVL117:
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1454              		.loc 1 1531 7 is_stmt 0 view .LVU419
 1455 00ac 0D4A     		ldr	r2, .L103+12
 1456 00ae 1368     		ldr	r3, [r2]
 1457 00b0 23EA0703 		bic	r3, r3, r7
 1458 00b4 1360     		str	r3, [r2]
 1459              	.L95:
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1460              		.loc 1 1535 31 is_stmt 1 view .LVU420
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1461              		.loc 1 1537 6 view .LVU421
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1462              		.loc 1 1537 6 view .LVU422
 1463 00b6 E06A     		ldr	r0, [r4, #44]
 1464 00b8 0123     		movs	r3, #1
 1465 00ba 8340     		lsls	r3, r3, r0
 1466 00bc 094A     		ldr	r2, .L103+12
 1467 00be 1168     		ldr	r1, [r2]
 1468 00c0 0B43     		orrs	r3, r3, r1
 1469 00c2 1360     		str	r3, [r2]
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1470              		.loc 1 1537 6 view .LVU423
 1471 00c4 00EB8000 		add	r0, r0, r0, lsl #2
 1472 00c8 2946     		mov	r1, r5
 1473 00ca 044B     		ldr	r3, .L103+4
 1474 00cc 03EB8000 		add	r0, r3, r0, lsl #2
 1475 00d0 FFF7FEFF 		bl	vListInsertEnd
 1476              	.LVL118:
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1477              		.loc 1 1537 36 view .LVU424
 1478 00d4 CEE7     		b	.L94
 1479              	.L104:
 1480 00d6 00BF     		.align	2
 1481              	.L103:
 1482 00d8 00000000 		.word	.LANCHOR10
 1483 00dc 00000000 		.word	.LANCHOR4
 1484 00e0 04ED00E0 		.word	-536810236
 1485 00e4 00000000 		.word	.LANCHOR13
 1486              		.cfi_endproc
 1487              	.LFE12:
 1489              		.section	.text.vTaskResume,"ax",%progbits
 1490              		.align	1
 1491              		.global	vTaskResume
 1492              		.syntax unified
 1493              		.thumb
ARM GAS  /tmp/ccubydGq.s 			page 122


 1494              		.thumb_func
 1495              		.fpu softvfp
 1497              	vTaskResume:
 1498              	.LVL119:
 1499              	.LFB15:
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1500              		.loc 1 1703 2 view -0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1504              		.loc 1 1703 2 is_stmt 0 view .LVU426
 1505 0000 38B5     		push	{r3, r4, r5, lr}
 1506              	.LCFI13:
 1507              		.cfi_def_cfa_offset 16
 1508              		.cfi_offset 3, -16
 1509              		.cfi_offset 4, -12
 1510              		.cfi_offset 5, -8
 1511              		.cfi_offset 14, -4
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1512              		.loc 1 1704 2 is_stmt 1 view .LVU427
 1513              	.LVL120:
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1514              		.loc 1 1707 3 view .LVU428
 1515 0002 68B1     		cbz	r0, .L111
 1516 0004 0446     		mov	r4, r0
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1517              		.loc 1 1707 32 discriminator 1 view .LVU429
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1518              		.loc 1 1711 3 discriminator 1 view .LVU430
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1519              		.loc 1 1711 36 is_stmt 0 discriminator 1 view .LVU431
 1520 0006 1C4B     		ldr	r3, .L113
 1521 0008 1B68     		ldr	r3, [r3]
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1522              		.loc 1 1711 25 discriminator 1 view .LVU432
 1523 000a 8342     		cmp	r3, r0
 1524 000c 07D0     		beq	.L105
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1525              		.loc 1 1713 4 is_stmt 1 view .LVU433
 1526 000e FFF7FEFF 		bl	vPortEnterCritical
 1527              	.LVL121:
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1528              		.loc 1 1715 5 view .LVU434
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1529              		.loc 1 1715 9 is_stmt 0 view .LVU435
 1530 0012 2046     		mov	r0, r4
 1531 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1532              	.LVL122:
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1533              		.loc 1 1715 7 view .LVU436
 1534 0018 58B9     		cbnz	r0, .L112
 1535              	.L109:
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1536              		.loc 1 1739 30 is_stmt 1 view .LVU437
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1537              		.loc 1 1742 4 view .LVU438
ARM GAS  /tmp/ccubydGq.s 			page 123


 1538 001a FFF7FEFF 		bl	vPortExitCritical
 1539              	.LVL123:
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1540              		.loc 1 1746 28 view .LVU439
 1541              	.L105:
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1542              		.loc 1 1748 2 is_stmt 0 view .LVU440
 1543 001e 38BD     		pop	{r3, r4, r5, pc}
 1544              	.LVL124:
 1545              	.L111:
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1546              		.loc 1 1707 3 is_stmt 1 view .LVU441
 1547              	.LBB102:
 1548              	.LBI102:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1549              		.loc 2 233 30 view .LVU442
 1550              	.LBB103:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1551              		.loc 2 235 1 view .LVU443
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1552              		.loc 2 237 2 view .LVU444
 1553              		.syntax unified
 1554              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1555 0020 4FF05003 			mov r3, #80												
 1556 0024 83F31188 		msr basepri, r3											
 1557 0028 BFF36F8F 		isb														
 1558 002c BFF34F8F 		dsb														
 1559              	
 1560              	@ 0 "" 2
 1561              	.LVL125:
 1562              		.thumb
 1563              		.syntax unified
 1564              	.L107:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1565              		.loc 2 237 2 is_stmt 0 view .LVU445
 1566              	.LBE103:
 1567              	.LBE102:
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1568              		.loc 1 1707 3 is_stmt 1 discriminator 1 view .LVU446
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1569              		.loc 1 1707 3 discriminator 1 view .LVU447
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1570              		.loc 1 1707 3 discriminator 1 view .LVU448
 1571 0030 FEE7     		b	.L107
 1572              	.LVL126:
 1573              	.L112:
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1574              		.loc 1 1717 31 view .LVU449
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1575              		.loc 1 1721 6 view .LVU450
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1576              		.loc 1 1721 15 is_stmt 0 view .LVU451
 1577 0032 251D     		adds	r5, r4, #4
 1578 0034 2846     		mov	r0, r5
 1579 0036 FFF7FEFF 		bl	uxListRemove
 1580              	.LVL127:
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 124


 1581              		.loc 1 1722 6 is_stmt 1 view .LVU452
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1582              		.loc 1 1722 6 view .LVU453
 1583 003a E06A     		ldr	r0, [r4, #44]
 1584 003c 0123     		movs	r3, #1
 1585 003e 8340     		lsls	r3, r3, r0
 1586 0040 0E4A     		ldr	r2, .L113+4
 1587 0042 1168     		ldr	r1, [r2]
 1588 0044 0B43     		orrs	r3, r3, r1
 1589 0046 1360     		str	r3, [r2]
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1590              		.loc 1 1722 6 view .LVU454
 1591 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1592 004c 2946     		mov	r1, r5
 1593 004e 0C4B     		ldr	r3, .L113+8
 1594 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1595 0054 FFF7FEFF 		bl	vListInsertEnd
 1596              	.LVL128:
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1597              		.loc 1 1722 36 view .LVU455
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1598              		.loc 1 1725 6 view .LVU456
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1599              		.loc 1 1725 15 is_stmt 0 view .LVU457
 1600 0058 E26A     		ldr	r2, [r4, #44]
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1601              		.loc 1 1725 43 view .LVU458
 1602 005a 074B     		ldr	r3, .L113
 1603 005c 1B68     		ldr	r3, [r3]
 1604 005e DB6A     		ldr	r3, [r3, #44]
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1605              		.loc 1 1725 8 view .LVU459
 1606 0060 9A42     		cmp	r2, r3
 1607 0062 DAD3     		bcc	.L109
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1608              		.loc 1 1730 7 is_stmt 1 view .LVU460
 1609 0064 074B     		ldr	r3, .L113+12
 1610 0066 4FF08052 		mov	r2, #268435456
 1611 006a 1A60     		str	r2, [r3]
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1612              		.loc 1 1730 7 view .LVU461
 1613              		.syntax unified
 1614              	@ 1730 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1615 006c BFF34F8F 		dsb
 1616              	@ 0 "" 2
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1617              		.loc 1 1730 7 view .LVU462
 1618              	@ 1730 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1619 0070 BFF36F8F 		isb
 1620              	@ 0 "" 2
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1621              		.loc 1 1730 38 view .LVU463
 1622              		.thumb
 1623              		.syntax unified
 1624 0074 D1E7     		b	.L109
 1625              	.L114:
 1626 0076 00BF     		.align	2
ARM GAS  /tmp/ccubydGq.s 			page 125


 1627              	.L113:
 1628 0078 00000000 		.word	.LANCHOR10
 1629 007c 00000000 		.word	.LANCHOR13
 1630 0080 00000000 		.word	.LANCHOR4
 1631 0084 04ED00E0 		.word	-536810236
 1632              		.cfi_endproc
 1633              	.LFE15:
 1635              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1636              		.align	1
 1637              		.global	xTaskResumeFromISR
 1638              		.syntax unified
 1639              		.thumb
 1640              		.thumb_func
 1641              		.fpu softvfp
 1643              	xTaskResumeFromISR:
 1644              	.LVL129:
 1645              	.LFB16:
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1646              		.loc 1 1757 2 view -0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 0
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1650              		.loc 1 1757 2 is_stmt 0 view .LVU465
 1651 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1652              	.LCFI14:
 1653              		.cfi_def_cfa_offset 24
 1654              		.cfi_offset 3, -24
 1655              		.cfi_offset 4, -20
 1656              		.cfi_offset 5, -16
 1657              		.cfi_offset 6, -12
 1658              		.cfi_offset 7, -8
 1659              		.cfi_offset 14, -4
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1660              		.loc 1 1758 2 is_stmt 1 view .LVU466
 1661              	.LVL130:
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1662              		.loc 1 1759 2 view .LVU467
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1663              		.loc 1 1760 2 view .LVU468
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1664              		.loc 1 1762 3 view .LVU469
 1665 0002 90B3     		cbz	r0, .L123
 1666 0004 0446     		mov	r4, r0
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1667              		.loc 1 1762 32 discriminator 2 view .LVU470
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1668              		.loc 1 1780 3 discriminator 2 view .LVU471
 1669 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1670              	.LVL131:
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1671              		.loc 1 1782 3 discriminator 2 view .LVU472
 1672              	.LBB104:
 1673              	.LBI104:
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1674              		.loc 2 249 34 discriminator 2 view .LVU473
 1675              	.LBB105:
ARM GAS  /tmp/ccubydGq.s 			page 126


 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1676              		.loc 2 251 1 discriminator 2 view .LVU474
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1677              		.loc 2 253 2 discriminator 2 view .LVU475
 1678              		.syntax unified
 1679              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1680 000a EFF31187 			mrs r7, basepri											
 1681 000e 4FF05003 		mov r3, #80												
 1682 0012 83F31188 		msr basepri, r3											
 1683 0016 BFF36F8F 		isb														
 1684 001a BFF34F8F 		dsb														
 1685              	
 1686              	@ 0 "" 2
 1687              	.LVL132:
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1688              		.loc 2 265 2 discriminator 2 view .LVU476
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1689              		.loc 2 265 2 is_stmt 0 discriminator 2 view .LVU477
 1690              		.thumb
 1691              		.syntax unified
 1692              	.LBE105:
 1693              	.LBE104:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1694              		.loc 1 1784 4 is_stmt 1 discriminator 2 view .LVU478
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1695              		.loc 1 1784 8 is_stmt 0 discriminator 2 view .LVU479
 1696 001e 2046     		mov	r0, r4
 1697 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1698              	.LVL133:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1699              		.loc 1 1784 6 discriminator 2 view .LVU480
 1700 0024 0546     		mov	r5, r0
 1701 0026 E0B1     		cbz	r0, .L118
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1702              		.loc 1 1786 39 is_stmt 1 view .LVU481
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1703              		.loc 1 1789 5 view .LVU482
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1704              		.loc 1 1789 30 is_stmt 0 view .LVU483
 1705 0028 194B     		ldr	r3, .L124
 1706 002a 1B68     		ldr	r3, [r3]
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1707              		.loc 1 1789 7 view .LVU484
 1708 002c 43BB     		cbnz	r3, .L119
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1709              		.loc 1 1793 6 is_stmt 1 view .LVU485
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1710              		.loc 1 1793 15 is_stmt 0 view .LVU486
 1711 002e E26A     		ldr	r2, [r4, #44]
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1712              		.loc 1 1793 43 view .LVU487
 1713 0030 184B     		ldr	r3, .L124+4
 1714 0032 1B68     		ldr	r3, [r3]
 1715 0034 DB6A     		ldr	r3, [r3, #44]
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1716              		.loc 1 1793 8 view .LVU488
 1717 0036 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccubydGq.s 			page 127


 1718 0038 20D2     		bcs	.L121
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1719              		.loc 1 1758 13 view .LVU489
 1720 003a 0025     		movs	r5, #0
 1721              	.L120:
 1722              	.LVL134:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1723              		.loc 1 1799 31 is_stmt 1 view .LVU490
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1724              		.loc 1 1802 6 view .LVU491
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1725              		.loc 1 1802 15 is_stmt 0 view .LVU492
 1726 003c 261D     		adds	r6, r4, #4
 1727 003e 3046     		mov	r0, r6
 1728 0040 FFF7FEFF 		bl	uxListRemove
 1729              	.LVL135:
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1730              		.loc 1 1803 6 is_stmt 1 view .LVU493
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1731              		.loc 1 1803 6 view .LVU494
 1732 0044 E06A     		ldr	r0, [r4, #44]
 1733 0046 0123     		movs	r3, #1
 1734 0048 8340     		lsls	r3, r3, r0
 1735 004a 134A     		ldr	r2, .L124+8
 1736 004c 1168     		ldr	r1, [r2]
 1737 004e 0B43     		orrs	r3, r3, r1
 1738 0050 1360     		str	r3, [r2]
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1739              		.loc 1 1803 6 view .LVU495
 1740 0052 00EB8000 		add	r0, r0, r0, lsl #2
 1741 0056 3146     		mov	r1, r6
 1742 0058 104B     		ldr	r3, .L124+12
 1743 005a 03EB8000 		add	r0, r3, r0, lsl #2
 1744 005e FFF7FEFF 		bl	vListInsertEnd
 1745              	.LVL136:
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1746              		.loc 1 1803 36 view .LVU496
 1747              	.L118:
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1748              		.loc 1 1815 29 view .LVU497
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1749              		.loc 1 1818 3 view .LVU498
 1750              	.LBB106:
 1751              	.LBI106:
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1752              		.loc 2 269 30 view .LVU499
 1753              	.LBB107:
 1754              		.loc 2 271 2 view .LVU500
 1755              		.syntax unified
 1756              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1757 0062 87F31188 			msr basepri, r7	
 1758              	@ 0 "" 2
 1759              	.LVL137:
 1760              		.loc 2 271 2 is_stmt 0 view .LVU501
 1761              		.thumb
 1762              		.syntax unified
 1763              	.LBE107:
ARM GAS  /tmp/ccubydGq.s 			page 128


 1764              	.LBE106:
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1765              		.loc 1 1820 3 is_stmt 1 view .LVU502
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1766              		.loc 1 1821 2 is_stmt 0 view .LVU503
 1767 0066 2846     		mov	r0, r5
 1768 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1769              	.LVL138:
 1770              	.L123:
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1771              		.loc 1 1762 3 is_stmt 1 view .LVU504
 1772              	.LBB108:
 1773              	.LBI108:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1774              		.loc 2 233 30 view .LVU505
 1775              	.LBB109:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1776              		.loc 2 235 1 view .LVU506
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1777              		.loc 2 237 2 view .LVU507
 1778              		.syntax unified
 1779              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1780 006a 4FF05003 			mov r3, #80												
 1781 006e 83F31188 		msr basepri, r3											
 1782 0072 BFF36F8F 		isb														
 1783 0076 BFF34F8F 		dsb														
 1784              	
 1785              	@ 0 "" 2
 1786              	.LVL139:
 1787              		.thumb
 1788              		.syntax unified
 1789              	.L117:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1790              		.loc 2 237 2 is_stmt 0 view .LVU508
 1791              	.LBE109:
 1792              	.LBE108:
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1793              		.loc 1 1762 3 is_stmt 1 discriminator 1 view .LVU509
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1794              		.loc 1 1762 3 discriminator 1 view .LVU510
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1795              		.loc 1 1762 3 discriminator 1 view .LVU511
 1796 007a FEE7     		b	.L117
 1797              	.LVL140:
 1798              	.L121:
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1799              		.loc 1 1795 22 is_stmt 0 view .LVU512
 1800 007c 0125     		movs	r5, #1
 1801 007e DDE7     		b	.L120
 1802              	.L119:
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1803              		.loc 1 1810 6 is_stmt 1 view .LVU513
 1804 0080 04F11801 		add	r1, r4, #24
 1805 0084 0648     		ldr	r0, .L124+16
 1806 0086 FFF7FEFF 		bl	vListInsertEnd
 1807              	.LVL141:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
ARM GAS  /tmp/ccubydGq.s 			page 129


 1808              		.loc 1 1758 13 is_stmt 0 view .LVU514
 1809 008a 0025     		movs	r5, #0
 1810 008c E9E7     		b	.L118
 1811              	.L125:
 1812 008e 00BF     		.align	2
 1813              	.L124:
 1814 0090 00000000 		.word	.LANCHOR16
 1815 0094 00000000 		.word	.LANCHOR10
 1816 0098 00000000 		.word	.LANCHOR13
 1817 009c 00000000 		.word	.LANCHOR4
 1818 00a0 00000000 		.word	.LANCHOR1
 1819              		.cfi_endproc
 1820              	.LFE16:
 1822              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 1823              		.align	2
 1824              	.LC0:
 1825 0000 49444C45 		.ascii	"IDLE\000"
 1825      00
 1826              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1827              		.align	1
 1828              		.global	vTaskStartScheduler
 1829              		.syntax unified
 1830              		.thumb
 1831              		.thumb_func
 1832              		.fpu softvfp
 1834              	vTaskStartScheduler:
 1835              	.LFB17:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 1836              		.loc 1 1827 1 is_stmt 1 view -0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
 1840 0000 00B5     		push	{lr}
 1841              	.LCFI15:
 1842              		.cfi_def_cfa_offset 4
 1843              		.cfi_offset 14, -4
 1844 0002 83B0     		sub	sp, sp, #12
 1845              	.LCFI16:
 1846              		.cfi_def_cfa_offset 16
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1847              		.loc 1 1828 1 view .LVU516
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1848              		.loc 1 1860 3 view .LVU517
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1849              		.loc 1 1860 13 is_stmt 0 view .LVU518
 1850 0004 174B     		ldr	r3, .L133
 1851 0006 0193     		str	r3, [sp, #4]
 1852 0008 0023     		movs	r3, #0
 1853 000a 0093     		str	r3, [sp]
 1854 000c 8022     		movs	r2, #128
 1855 000e 1649     		ldr	r1, .L133+4
 1856 0010 1648     		ldr	r0, .L133+8
 1857 0012 FFF7FEFF 		bl	xTaskCreate
 1858              	.LVL142:
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1859              		.loc 1 1881 2 is_stmt 1 view .LVU519
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccubydGq.s 			page 130


 1860              		.loc 1 1881 4 is_stmt 0 view .LVU520
 1861 0016 0128     		cmp	r0, #1
 1862 0018 05D0     		beq	.L131
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1863              		.loc 1 1924 3 is_stmt 1 view .LVU521
 1864 001a B0F1FF3F 		cmp	r0, #-1
 1865 001e 17D0     		beq	.L132
 1866              	.LVL143:
 1867              	.L126:
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1868              		.loc 1 1930 1 is_stmt 0 view .LVU522
 1869 0020 03B0     		add	sp, sp, #12
 1870              	.LCFI17:
 1871              		.cfi_remember_state
 1872              		.cfi_def_cfa_offset 4
 1873              		@ sp needed
 1874 0022 5DF804FB 		ldr	pc, [sp], #4
 1875              	.LVL144:
 1876              	.L131:
 1877              	.LCFI18:
 1878              		.cfi_restore_state
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1879              		.loc 1 1888 3 is_stmt 1 view .LVU523
 1880              	.LBB110:
 1881              	.LBI110:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1882              		.loc 2 233 30 view .LVU524
 1883              	.LBB111:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1884              		.loc 2 235 1 view .LVU525
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1885              		.loc 2 237 2 view .LVU526
 1886              		.syntax unified
 1887              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1888 0026 4FF05003 			mov r3, #80												
 1889 002a 83F31188 		msr basepri, r3											
 1890 002e BFF36F8F 		isb														
 1891 0032 BFF34F8F 		dsb														
 1892              	
 1893              	@ 0 "" 2
 1894              		.thumb
 1895              		.syntax unified
 1896              	.LBE111:
 1897              	.LBE110:
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1898              		.loc 1 1898 3 view .LVU527
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1899              		.loc 1 1898 24 is_stmt 0 view .LVU528
 1900 0036 0E4B     		ldr	r3, .L133+12
 1901 0038 4FF0FF32 		mov	r2, #-1
 1902 003c 1A60     		str	r2, [r3]
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1903              		.loc 1 1899 3 is_stmt 1 view .LVU529
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1904              		.loc 1 1899 21 is_stmt 0 view .LVU530
 1905 003e 0D4B     		ldr	r3, .L133+16
 1906 0040 0122     		movs	r2, #1
ARM GAS  /tmp/ccubydGq.s 			page 131


 1907 0042 1A60     		str	r2, [r3]
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1908              		.loc 1 1900 3 is_stmt 1 view .LVU531
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1909              		.loc 1 1900 14 is_stmt 0 view .LVU532
 1910 0044 0C4B     		ldr	r3, .L133+20
 1911 0046 0022     		movs	r2, #0
 1912 0048 1A60     		str	r2, [r3]
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1913              		.loc 1 1905 43 is_stmt 1 view .LVU533
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1914              		.loc 1 1909 3 view .LVU534
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1915              		.loc 1 1909 7 is_stmt 0 view .LVU535
 1916 004a FFF7FEFF 		bl	xPortStartScheduler
 1917              	.LVL145:
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1918              		.loc 1 1909 7 view .LVU536
 1919 004e E7E7     		b	.L126
 1920              	.LVL146:
 1921              	.L132:
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1922              		.loc 1 1924 3 is_stmt 1 view .LVU537
 1923              	.LBB112:
 1924              	.LBI112:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1925              		.loc 2 233 30 view .LVU538
 1926              	.LBB113:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1927              		.loc 2 235 1 view .LVU539
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1928              		.loc 2 237 2 view .LVU540
 1929              		.syntax unified
 1930              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1931 0050 4FF05003 			mov r3, #80												
 1932 0054 83F31188 		msr basepri, r3											
 1933 0058 BFF36F8F 		isb														
 1934 005c BFF34F8F 		dsb														
 1935              	
 1936              	@ 0 "" 2
 1937              	.LVL147:
 1938              		.thumb
 1939              		.syntax unified
 1940              	.L129:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1941              		.loc 2 237 2 is_stmt 0 view .LVU541
 1942              	.LBE113:
 1943              	.LBE112:
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1944              		.loc 1 1924 3 is_stmt 1 discriminator 2 view .LVU542
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1945              		.loc 1 1924 3 discriminator 2 view .LVU543
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1946              		.loc 1 1924 3 discriminator 2 view .LVU544
 1947 0060 FEE7     		b	.L129
 1948              	.L134:
 1949 0062 00BF     		.align	2
ARM GAS  /tmp/ccubydGq.s 			page 132


 1950              	.L133:
 1951 0064 00000000 		.word	.LANCHOR17
 1952 0068 00000000 		.word	.LC0
 1953 006c 00000000 		.word	prvIdleTask
 1954 0070 00000000 		.word	.LANCHOR3
 1955 0074 00000000 		.word	.LANCHOR11
 1956 0078 00000000 		.word	.LANCHOR14
 1957              		.cfi_endproc
 1958              	.LFE17:
 1960              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1961              		.align	1
 1962              		.global	vTaskEndScheduler
 1963              		.syntax unified
 1964              		.thumb
 1965              		.thumb_func
 1966              		.fpu softvfp
 1968              	vTaskEndScheduler:
 1969              	.LFB18:
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1970              		.loc 1 1934 1 view -0
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 0
 1973              		@ frame_needed = 0, uses_anonymous_args = 0
 1974 0000 08B5     		push	{r3, lr}
 1975              	.LCFI19:
 1976              		.cfi_def_cfa_offset 8
 1977              		.cfi_offset 3, -8
 1978              		.cfi_offset 14, -4
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1979              		.loc 1 1938 2 view .LVU546
 1980              	.LBB114:
 1981              	.LBI114:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1982              		.loc 2 233 30 view .LVU547
 1983              	.LBB115:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1984              		.loc 2 235 1 view .LVU548
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1985              		.loc 2 237 2 view .LVU549
 1986              		.syntax unified
 1987              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1988 0002 4FF05003 			mov r3, #80												
 1989 0006 83F31188 		msr basepri, r3											
 1990 000a BFF36F8F 		isb														
 1991 000e BFF34F8F 		dsb														
 1992              	
 1993              	@ 0 "" 2
 1994              		.thumb
 1995              		.syntax unified
 1996              	.LBE115:
 1997              	.LBE114:
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1998              		.loc 1 1939 2 view .LVU550
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1999              		.loc 1 1939 20 is_stmt 0 view .LVU551
 2000 0012 034B     		ldr	r3, .L137
 2001 0014 0022     		movs	r2, #0
ARM GAS  /tmp/ccubydGq.s 			page 133


 2002 0016 1A60     		str	r2, [r3]
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2003              		.loc 1 1940 2 is_stmt 1 view .LVU552
 2004 0018 FFF7FEFF 		bl	vPortEndScheduler
 2005              	.LVL148:
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2006              		.loc 1 1941 1 is_stmt 0 view .LVU553
 2007 001c 08BD     		pop	{r3, pc}
 2008              	.L138:
 2009 001e 00BF     		.align	2
 2010              	.L137:
 2011 0020 00000000 		.word	.LANCHOR11
 2012              		.cfi_endproc
 2013              	.LFE18:
 2015              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2016              		.align	1
 2017              		.global	vTaskSuspendAll
 2018              		.syntax unified
 2019              		.thumb
 2020              		.thumb_func
 2021              		.fpu softvfp
 2023              	vTaskSuspendAll:
 2024              	.LFB19:
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2025              		.loc 1 1945 1 is_stmt 1 view -0
 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 2029              		@ link register save eliminated.
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2030              		.loc 1 1950 2 view .LVU555
 2031 0000 024A     		ldr	r2, .L140
 2032 0002 1368     		ldr	r3, [r2]
 2033 0004 0133     		adds	r3, r3, #1
 2034 0006 1360     		str	r3, [r2]
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2035              		.loc 1 1951 1 is_stmt 0 view .LVU556
 2036 0008 7047     		bx	lr
 2037              	.L141:
 2038 000a 00BF     		.align	2
 2039              	.L140:
 2040 000c 00000000 		.word	.LANCHOR16
 2041              		.cfi_endproc
 2042              	.LFE19:
 2044              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2045              		.align	1
 2046              		.global	xTaskGetTickCount
 2047              		.syntax unified
 2048              		.thumb
 2049              		.thumb_func
 2050              		.fpu softvfp
 2052              	xTaskGetTickCount:
 2053              	.LFB21:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2054              		.loc 1 2128 1 is_stmt 1 view -0
 2055              		.cfi_startproc
 2056              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccubydGq.s 			page 134


 2057              		@ frame_needed = 0, uses_anonymous_args = 0
 2058              		@ link register save eliminated.
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2059              		.loc 1 2129 1 view .LVU558
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2060              		.loc 1 2132 32 view .LVU559
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2061              		.loc 1 2134 3 view .LVU560
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2062              		.loc 1 2134 10 is_stmt 0 view .LVU561
 2063 0000 014B     		ldr	r3, .L143
 2064 0002 1868     		ldr	r0, [r3]
 2065              	.LVL149:
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2066              		.loc 1 2136 31 is_stmt 1 view .LVU562
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2067              		.loc 1 2138 2 view .LVU563
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2068              		.loc 1 2139 1 is_stmt 0 view .LVU564
 2069 0004 7047     		bx	lr
 2070              	.L144:
 2071 0006 00BF     		.align	2
 2072              	.L143:
 2073 0008 00000000 		.word	.LANCHOR14
 2074              		.cfi_endproc
 2075              	.LFE21:
 2077              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2078              		.align	1
 2079              		.global	xTaskGetTickCountFromISR
 2080              		.syntax unified
 2081              		.thumb
 2082              		.thumb_func
 2083              		.fpu softvfp
 2085              	xTaskGetTickCountFromISR:
 2086              	.LFB22:
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2087              		.loc 1 2143 1 is_stmt 1 view -0
 2088              		.cfi_startproc
 2089              		@ args = 0, pretend = 0, frame = 0
 2090              		@ frame_needed = 0, uses_anonymous_args = 0
 2091 0000 08B5     		push	{r3, lr}
 2092              	.LCFI20:
 2093              		.cfi_def_cfa_offset 8
 2094              		.cfi_offset 3, -8
 2095              		.cfi_offset 14, -4
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2096              		.loc 1 2144 1 view .LVU566
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2097              		.loc 1 2145 1 view .LVU567
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2098              		.loc 1 2161 2 view .LVU568
 2099 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2100              	.LVL150:
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2101              		.loc 1 2163 2 view .LVU569
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2102              		.loc 1 2165 3 view .LVU570
ARM GAS  /tmp/ccubydGq.s 			page 135


2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2103              		.loc 1 2165 11 is_stmt 0 view .LVU571
 2104 0006 014B     		ldr	r3, .L147
 2105 0008 1868     		ldr	r0, [r3]
 2106              	.LVL151:
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2107              		.loc 1 2167 2 is_stmt 1 view .LVU572
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2108              		.loc 1 2169 2 view .LVU573
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2109              		.loc 1 2170 1 is_stmt 0 view .LVU574
 2110 000a 08BD     		pop	{r3, pc}
 2111              	.L148:
 2112              		.align	2
 2113              	.L147:
 2114 000c 00000000 		.word	.LANCHOR14
 2115              		.cfi_endproc
 2116              	.LFE22:
 2118              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2119              		.align	1
 2120              		.global	uxTaskGetNumberOfTasks
 2121              		.syntax unified
 2122              		.thumb
 2123              		.thumb_func
 2124              		.fpu softvfp
 2126              	uxTaskGetNumberOfTasks:
 2127              	.LFB23:
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2128              		.loc 1 2174 1 is_stmt 1 view -0
 2129              		.cfi_startproc
 2130              		@ args = 0, pretend = 0, frame = 0
 2131              		@ frame_needed = 0, uses_anonymous_args = 0
 2132              		@ link register save eliminated.
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2133              		.loc 1 2177 2 view .LVU576
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2134              		.loc 1 2177 9 is_stmt 0 view .LVU577
 2135 0000 014B     		ldr	r3, .L150
 2136 0002 1868     		ldr	r0, [r3]
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2137              		.loc 1 2178 1 view .LVU578
 2138 0004 7047     		bx	lr
 2139              	.L151:
 2140 0006 00BF     		.align	2
 2141              	.L150:
 2142 0008 00000000 		.word	.LANCHOR9
 2143              		.cfi_endproc
 2144              	.LFE23:
 2146              		.section	.text.pcTaskGetName,"ax",%progbits
 2147              		.align	1
 2148              		.global	pcTaskGetName
 2149              		.syntax unified
 2150              		.thumb
 2151              		.thumb_func
 2152              		.fpu softvfp
 2154              	pcTaskGetName:
 2155              	.LVL152:
ARM GAS  /tmp/ccubydGq.s 			page 136


 2156              	.LFB24:
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2157              		.loc 1 2182 1 is_stmt 1 view -0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161              		@ link register save eliminated.
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2162              		.loc 1 2183 1 view .LVU580
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2163              		.loc 1 2187 2 view .LVU581
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2164              		.loc 1 2187 10 is_stmt 0 view .LVU582
 2165 0000 0346     		mov	r3, r0
 2166 0002 18B1     		cbz	r0, .L156
 2167              	.LVL153:
 2168              	.L153:
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2169              		.loc 1 2188 2 is_stmt 1 discriminator 4 view .LVU583
 2170 0004 2BB1     		cbz	r3, .L157
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2171              		.loc 1 2188 23 discriminator 2 view .LVU584
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2172              		.loc 1 2189 2 discriminator 2 view .LVU585
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2173              		.loc 1 2190 1 is_stmt 0 discriminator 2 view .LVU586
 2174 0006 03F13400 		add	r0, r3, #52
 2175 000a 7047     		bx	lr
 2176              	.LVL154:
 2177              	.L156:
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2178              		.loc 1 2187 10 discriminator 1 view .LVU587
 2179 000c 054B     		ldr	r3, .L158
 2180 000e 1B68     		ldr	r3, [r3]
 2181              	.LVL155:
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2182              		.loc 1 2187 10 discriminator 1 view .LVU588
 2183 0010 F8E7     		b	.L153
 2184              	.LVL156:
 2185              	.L157:
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2186              		.loc 1 2188 2 is_stmt 1 view .LVU589
 2187              	.LBB116:
 2188              	.LBI116:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2189              		.loc 2 233 30 view .LVU590
 2190              	.LBB117:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2191              		.loc 2 235 1 view .LVU591
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2192              		.loc 2 237 2 view .LVU592
 2193              		.syntax unified
 2194              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2195 0012 4FF05003 			mov r3, #80												
 2196 0016 83F31188 		msr basepri, r3											
 2197 001a BFF36F8F 		isb														
 2198 001e BFF34F8F 		dsb														
ARM GAS  /tmp/ccubydGq.s 			page 137


 2199              	
 2200              	@ 0 "" 2
 2201              	.LVL157:
 2202              		.thumb
 2203              		.syntax unified
 2204              	.L155:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2205              		.loc 2 237 2 is_stmt 0 view .LVU593
 2206              	.LBE117:
 2207              	.LBE116:
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2208              		.loc 1 2188 2 is_stmt 1 discriminator 1 view .LVU594
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2209              		.loc 1 2188 2 discriminator 1 view .LVU595
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2210              		.loc 1 2188 2 discriminator 1 view .LVU596
 2211 0022 FEE7     		b	.L155
 2212              	.L159:
 2213              		.align	2
 2214              	.L158:
 2215 0024 00000000 		.word	.LANCHOR10
 2216              		.cfi_endproc
 2217              	.LFE24:
 2219              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2220              		.align	1
 2221              		.global	xTaskIncrementTick
 2222              		.syntax unified
 2223              		.thumb
 2224              		.thumb_func
 2225              		.fpu softvfp
 2227              	xTaskIncrementTick:
 2228              	.LFB25:
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2229              		.loc 1 2500 1 view -0
 2230              		.cfi_startproc
 2231              		@ args = 0, pretend = 0, frame = 0
 2232              		@ frame_needed = 0, uses_anonymous_args = 0
 2233 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2234              	.LCFI21:
 2235              		.cfi_def_cfa_offset 24
 2236              		.cfi_offset 3, -24
 2237              		.cfi_offset 4, -20
 2238              		.cfi_offset 5, -16
 2239              		.cfi_offset 6, -12
 2240              		.cfi_offset 7, -8
 2241              		.cfi_offset 14, -4
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2242              		.loc 1 2501 1 view .LVU598
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2243              		.loc 1 2502 1 view .LVU599
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2244              		.loc 1 2503 1 view .LVU600
 2245              	.LVL158:
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2246              		.loc 1 2508 40 view .LVU601
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2247              		.loc 1 2509 2 view .LVU602
ARM GAS  /tmp/ccubydGq.s 			page 138


2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2248              		.loc 1 2509 27 is_stmt 0 view .LVU603
 2249 0002 3A4B     		ldr	r3, .L181
 2250 0004 1B68     		ldr	r3, [r3]
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2251              		.loc 1 2509 4 view .LVU604
 2252 0006 002B     		cmp	r3, #0
 2253 0008 64D1     		bne	.L161
 2254              	.LBB118:
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2255              		.loc 1 2513 3 is_stmt 1 view .LVU605
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2256              		.loc 1 2513 49 is_stmt 0 view .LVU606
 2257 000a 394B     		ldr	r3, .L181+4
 2258 000c 1D68     		ldr	r5, [r3]
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2259              		.loc 1 2513 20 view .LVU607
 2260 000e 0135     		adds	r5, r5, #1
 2261              	.LVL159:
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2262              		.loc 1 2517 3 is_stmt 1 view .LVU608
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2263              		.loc 1 2517 14 is_stmt 0 view .LVU609
 2264 0010 1D60     		str	r5, [r3]
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2265              		.loc 1 2519 3 is_stmt 1 view .LVU610
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2266              		.loc 1 2519 5 is_stmt 0 view .LVU611
 2267 0012 C5B9     		cbnz	r5, .L162
 2268              	.LBB119:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2269              		.loc 1 2521 4 is_stmt 1 view .LVU612
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2270              		.loc 1 2521 4 view .LVU613
 2271 0014 374B     		ldr	r3, .L181+8
 2272 0016 1B68     		ldr	r3, [r3]
 2273 0018 1B68     		ldr	r3, [r3]
 2274 001a 43B1     		cbz	r3, .L163
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2275              		.loc 1 2521 4 view .LVU614
 2276              	.LBB120:
 2277              	.LBI120:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2278              		.loc 2 233 30 view .LVU615
 2279              	.LBB121:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2280              		.loc 2 235 1 view .LVU616
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2281              		.loc 2 237 2 view .LVU617
 2282              		.syntax unified
 2283              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2284 001c 4FF05003 			mov r3, #80												
 2285 0020 83F31188 		msr basepri, r3											
 2286 0024 BFF36F8F 		isb														
 2287 0028 BFF34F8F 		dsb														
 2288              	
 2289              	@ 0 "" 2
ARM GAS  /tmp/ccubydGq.s 			page 139


 2290              	.LVL160:
 2291              		.thumb
 2292              		.syntax unified
 2293              	.L164:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2294              		.loc 2 237 2 is_stmt 0 view .LVU618
 2295              	.LBE121:
 2296              	.LBE120:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2297              		.loc 1 2521 4 is_stmt 1 discriminator 1 view .LVU619
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2298              		.loc 1 2521 4 discriminator 1 view .LVU620
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2299              		.loc 1 2521 4 discriminator 1 view .LVU621
 2300 002c FEE7     		b	.L164
 2301              	.L163:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2302              		.loc 1 2521 4 discriminator 2 view .LVU622
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2303              		.loc 1 2521 4 discriminator 2 view .LVU623
 2304 002e 314A     		ldr	r2, .L181+8
 2305 0030 1168     		ldr	r1, [r2]
 2306              	.LVL161:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2307              		.loc 1 2521 4 discriminator 2 view .LVU624
 2308 0032 314B     		ldr	r3, .L181+12
 2309 0034 1868     		ldr	r0, [r3]
 2310 0036 1060     		str	r0, [r2]
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2311              		.loc 1 2521 4 discriminator 2 view .LVU625
 2312 0038 1960     		str	r1, [r3]
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2313              		.loc 1 2521 4 discriminator 2 view .LVU626
 2314 003a 304A     		ldr	r2, .L181+16
 2315 003c 1368     		ldr	r3, [r2]
 2316 003e 0133     		adds	r3, r3, #1
 2317 0040 1360     		str	r3, [r2]
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2318              		.loc 1 2521 4 discriminator 2 view .LVU627
 2319 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2320              	.LVL162:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2321              		.loc 1 2521 4 is_stmt 0 discriminator 2 view .LVU628
 2322              	.LBE119:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2323              		.loc 1 2521 30 is_stmt 1 discriminator 2 view .LVU629
 2324              	.L162:
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2325              		.loc 1 2525 28 view .LVU630
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2326              		.loc 1 2532 3 view .LVU631
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2327              		.loc 1 2532 23 is_stmt 0 view .LVU632
 2328 0046 2E4B     		ldr	r3, .L181+20
 2329 0048 1B68     		ldr	r3, [r3]
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2330              		.loc 1 2532 5 view .LVU633
ARM GAS  /tmp/ccubydGq.s 			page 140


 2331 004a AB42     		cmp	r3, r5
 2332 004c 38D9     		bls	.L174
 2333              	.LBE118:
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2334              		.loc 1 2503 12 view .LVU634
 2335 004e 0024     		movs	r4, #0
 2336              	.LVL163:
 2337              	.L166:
 2338              	.LBB122:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2339              		.loc 1 2615 4 is_stmt 1 view .LVU635
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2340              		.loc 1 2615 8 is_stmt 0 view .LVU636
 2341 0050 2C4B     		ldr	r3, .L181+24
 2342 0052 1B68     		ldr	r3, [r3]
 2343 0054 DB6A     		ldr	r3, [r3, #44]
 2344 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2345 005a 9A00     		lsls	r2, r3, #2
 2346 005c 2A4B     		ldr	r3, .L181+28
 2347 005e 9B58     		ldr	r3, [r3, r2]
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2348              		.loc 1 2615 6 view .LVU637
 2349 0060 012B     		cmp	r3, #1
 2350 0062 3CD9     		bls	.L172
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2351              		.loc 1 2617 21 view .LVU638
 2352 0064 0124     		movs	r4, #1
 2353              	.LVL164:
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2354              		.loc 1 2617 21 view .LVU639
 2355 0066 3AE0     		b	.L172
 2356              	.LVL165:
 2357              	.L175:
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2358              		.loc 1 2598 24 view .LVU640
 2359 0068 0124     		movs	r4, #1
 2360              	.LVL166:
 2361              	.L165:
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2362              		.loc 1 2534 4 is_stmt 1 view .LVU641
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2363              		.loc 1 2536 5 view .LVU642
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2364              		.loc 1 2536 9 is_stmt 0 view .LVU643
 2365 006a 224B     		ldr	r3, .L181+8
 2366 006c 1B68     		ldr	r3, [r3]
 2367 006e 1B68     		ldr	r3, [r3]
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2368              		.loc 1 2536 48 view .LVU644
 2369 0070 43B3     		cbz	r3, .L179
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2370              		.loc 1 2552 6 is_stmt 1 view .LVU645
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2371              		.loc 1 2552 26 is_stmt 0 view .LVU646
 2372 0072 204B     		ldr	r3, .L181+8
 2373 0074 1B68     		ldr	r3, [r3]
 2374 0076 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccubydGq.s 			page 141


2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2375              		.loc 1 2552 12 view .LVU647
 2376 0078 DE68     		ldr	r6, [r3, #12]
 2377              	.LVL167:
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2378              		.loc 1 2553 6 is_stmt 1 view .LVU648
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2379              		.loc 1 2553 17 is_stmt 0 view .LVU649
 2380 007a 7368     		ldr	r3, [r6, #4]
 2381              	.LVL168:
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2382              		.loc 1 2555 6 is_stmt 1 view .LVU650
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2383              		.loc 1 2555 8 is_stmt 0 view .LVU651
 2384 007c 9D42     		cmp	r5, r3
 2385 007e 26D3     		bcc	.L180
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2386              		.loc 1 2567 31 is_stmt 1 view .LVU652
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2387              		.loc 1 2571 6 view .LVU653
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2388              		.loc 1 2571 15 is_stmt 0 view .LVU654
 2389 0080 371D     		adds	r7, r6, #4
 2390 0082 3846     		mov	r0, r7
 2391 0084 FFF7FEFF 		bl	uxListRemove
 2392              	.LVL169:
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2393              		.loc 1 2575 6 is_stmt 1 view .LVU655
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2394              		.loc 1 2575 10 is_stmt 0 view .LVU656
 2395 0088 B36A     		ldr	r3, [r6, #40]
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2396              		.loc 1 2575 8 view .LVU657
 2397 008a 1BB1     		cbz	r3, .L169
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2398              		.loc 1 2577 7 is_stmt 1 view .LVU658
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2399              		.loc 1 2577 16 is_stmt 0 view .LVU659
 2400 008c 06F11800 		add	r0, r6, #24
 2401 0090 FFF7FEFF 		bl	uxListRemove
 2402              	.LVL170:
 2403              	.L169:
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2404              		.loc 1 2581 31 is_stmt 1 view .LVU660
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2405              		.loc 1 2586 6 view .LVU661
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2406              		.loc 1 2586 6 view .LVU662
 2407 0094 F36A     		ldr	r3, [r6, #44]
 2408 0096 0122     		movs	r2, #1
 2409 0098 9A40     		lsls	r2, r2, r3
 2410 009a 1C49     		ldr	r1, .L181+32
 2411 009c 0868     		ldr	r0, [r1]
 2412 009e 0243     		orrs	r2, r2, r0
 2413 00a0 0A60     		str	r2, [r1]
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2414              		.loc 1 2586 6 view .LVU663
ARM GAS  /tmp/ccubydGq.s 			page 142


 2415 00a2 03EB8303 		add	r3, r3, r3, lsl #2
 2416 00a6 9A00     		lsls	r2, r3, #2
 2417 00a8 3946     		mov	r1, r7
 2418 00aa 1748     		ldr	r0, .L181+28
 2419 00ac 1044     		add	r0, r0, r2
 2420 00ae FFF7FEFF 		bl	vListInsertEnd
 2421              	.LVL171:
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2422              		.loc 1 2586 36 view .LVU664
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2423              		.loc 1 2596 7 view .LVU665
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2424              		.loc 1 2596 16 is_stmt 0 view .LVU666
 2425 00b2 F26A     		ldr	r2, [r6, #44]
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2426              		.loc 1 2596 44 view .LVU667
 2427 00b4 134B     		ldr	r3, .L181+24
 2428 00b6 1B68     		ldr	r3, [r3]
 2429 00b8 DB6A     		ldr	r3, [r3, #44]
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2430              		.loc 1 2596 9 view .LVU668
 2431 00ba 9A42     		cmp	r2, r3
 2432 00bc D4D2     		bcs	.L175
 2433 00be D4E7     		b	.L165
 2434              	.LVL172:
 2435              	.L174:
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2436              		.loc 1 2596 9 view .LVU669
 2437              	.LBE122:
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2438              		.loc 1 2503 12 view .LVU670
 2439 00c0 0024     		movs	r4, #0
 2440 00c2 D2E7     		b	.L165
 2441              	.LVL173:
 2442              	.L179:
 2443              	.LBB123:
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2444              		.loc 1 2543 6 is_stmt 1 view .LVU671
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2445              		.loc 1 2543 27 is_stmt 0 view .LVU672
 2446 00c4 0E4B     		ldr	r3, .L181+20
 2447 00c6 4FF0FF32 		mov	r2, #-1
 2448 00ca 1A60     		str	r2, [r3]
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2449              		.loc 1 2544 6 is_stmt 1 view .LVU673
 2450 00cc C0E7     		b	.L166
 2451              	.LVL174:
 2452              	.L180:
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2453              		.loc 1 2562 7 view .LVU674
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2454              		.loc 1 2562 28 is_stmt 0 view .LVU675
 2455 00ce 0C4A     		ldr	r2, .L181+20
 2456 00d0 1360     		str	r3, [r2]
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2457              		.loc 1 2563 7 is_stmt 1 view .LVU676
 2458 00d2 BDE7     		b	.L166
ARM GAS  /tmp/ccubydGq.s 			page 143


 2459              	.LVL175:
 2460              	.L161:
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2461              		.loc 1 2563 7 is_stmt 0 view .LVU677
 2462              	.LBE123:
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2463              		.loc 1 2643 3 is_stmt 1 view .LVU678
 2464 00d4 0E4A     		ldr	r2, .L181+36
 2465 00d6 1368     		ldr	r3, [r2]
 2466 00d8 0133     		adds	r3, r3, #1
 2467 00da 1360     		str	r3, [r2]
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2468              		.loc 1 2503 12 is_stmt 0 view .LVU679
 2469 00dc 0024     		movs	r4, #0
 2470              	.LVL176:
 2471              	.L172:
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2472              		.loc 1 2656 3 is_stmt 1 view .LVU680
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2473              		.loc 1 2656 21 is_stmt 0 view .LVU681
 2474 00de 0D4B     		ldr	r3, .L181+40
 2475 00e0 1B68     		ldr	r3, [r3]
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2476              		.loc 1 2656 5 view .LVU682
 2477 00e2 03B1     		cbz	r3, .L160
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2478              		.loc 1 2658 20 view .LVU683
 2479 00e4 0124     		movs	r4, #1
 2480              	.LVL177:
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2481              		.loc 1 2662 28 is_stmt 1 view .LVU684
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2482              		.loc 1 2667 2 view .LVU685
 2483              	.L160:
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2484              		.loc 1 2668 1 is_stmt 0 view .LVU686
 2485 00e6 2046     		mov	r0, r4
 2486 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2487              	.L182:
 2488 00ea 00BF     		.align	2
 2489              	.L181:
 2490 00ec 00000000 		.word	.LANCHOR16
 2491 00f0 00000000 		.word	.LANCHOR14
 2492 00f4 00000000 		.word	.LANCHOR2
 2493 00f8 00000000 		.word	.LANCHOR8
 2494 00fc 00000000 		.word	.LANCHOR18
 2495 0100 00000000 		.word	.LANCHOR3
 2496 0104 00000000 		.word	.LANCHOR10
 2497 0108 00000000 		.word	.LANCHOR4
 2498 010c 00000000 		.word	.LANCHOR13
 2499 0110 00000000 		.word	.LANCHOR19
 2500 0114 00000000 		.word	.LANCHOR20
 2501              		.cfi_endproc
 2502              	.LFE25:
 2504              		.section	.text.xTaskResumeAll,"ax",%progbits
 2505              		.align	1
 2506              		.global	xTaskResumeAll
ARM GAS  /tmp/ccubydGq.s 			page 144


 2507              		.syntax unified
 2508              		.thumb
 2509              		.thumb_func
 2510              		.fpu softvfp
 2512              	xTaskResumeAll:
 2513              	.LFB20:
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2514              		.loc 1 2018 1 is_stmt 1 view -0
 2515              		.cfi_startproc
 2516              		@ args = 0, pretend = 0, frame = 0
 2517              		@ frame_needed = 0, uses_anonymous_args = 0
 2518 0000 38B5     		push	{r3, r4, r5, lr}
 2519              	.LCFI22:
 2520              		.cfi_def_cfa_offset 16
 2521              		.cfi_offset 3, -16
 2522              		.cfi_offset 4, -12
 2523              		.cfi_offset 5, -8
 2524              		.cfi_offset 14, -4
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2525              		.loc 1 2019 1 view .LVU688
 2526              	.LVL178:
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2527              		.loc 1 2020 1 view .LVU689
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2528              		.loc 1 2024 2 view .LVU690
 2529 0002 344B     		ldr	r3, .L199
 2530 0004 1B68     		ldr	r3, [r3]
 2531 0006 43B9     		cbnz	r3, .L184
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2532              		.loc 1 2024 2 view .LVU691
 2533              	.LBB124:
 2534              	.LBI124:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2535              		.loc 2 233 30 view .LVU692
 2536              	.LBB125:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2537              		.loc 2 235 1 view .LVU693
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2538              		.loc 2 237 2 view .LVU694
 2539              		.syntax unified
 2540              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2541 0008 4FF05003 			mov r3, #80												
 2542 000c 83F31188 		msr basepri, r3											
 2543 0010 BFF36F8F 		isb														
 2544 0014 BFF34F8F 		dsb														
 2545              	
 2546              	@ 0 "" 2
 2547              	.LVL179:
 2548              		.thumb
 2549              		.syntax unified
 2550              	.L185:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2551              		.loc 2 237 2 is_stmt 0 view .LVU695
 2552              	.LBE125:
 2553              	.LBE124:
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2554              		.loc 1 2024 2 is_stmt 1 discriminator 1 view .LVU696
ARM GAS  /tmp/ccubydGq.s 			page 145


2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2555              		.loc 1 2024 2 discriminator 1 view .LVU697
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2556              		.loc 1 2024 2 discriminator 1 view .LVU698
 2557 0018 FEE7     		b	.L185
 2558              	.L184:
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2559              		.loc 1 2024 38 discriminator 2 view .LVU699
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2560              		.loc 1 2031 2 discriminator 2 view .LVU700
 2561 001a FFF7FEFF 		bl	vPortEnterCritical
 2562              	.LVL180:
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2563              		.loc 1 2033 3 discriminator 2 view .LVU701
 2564 001e 2D4B     		ldr	r3, .L199
 2565 0020 1A68     		ldr	r2, [r3]
 2566 0022 013A     		subs	r2, r2, #1
 2567 0024 1A60     		str	r2, [r3]
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2568              		.loc 1 2035 3 discriminator 2 view .LVU702
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2569              		.loc 1 2035 28 is_stmt 0 discriminator 2 view .LVU703
 2570 0026 1B68     		ldr	r3, [r3]
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2571              		.loc 1 2035 5 discriminator 2 view .LVU704
 2572 0028 002B     		cmp	r3, #0
 2573 002a 4DD1     		bne	.L194
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2574              		.loc 1 2037 4 is_stmt 1 view .LVU705
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2575              		.loc 1 2037 31 is_stmt 0 view .LVU706
 2576 002c 2A4B     		ldr	r3, .L199+4
 2577 002e 1B68     		ldr	r3, [r3]
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2578              		.loc 1 2037 6 view .LVU707
 2579 0030 0BB9     		cbnz	r3, .L195
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2580              		.loc 1 2020 12 view .LVU708
 2581 0032 0024     		movs	r4, #0
 2582 0034 49E0     		b	.L186
 2583              	.L195:
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2584              		.loc 1 2019 8 view .LVU709
 2585 0036 0024     		movs	r4, #0
 2586              	.LVL181:
 2587              	.L187:
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2588              		.loc 1 2056 31 is_stmt 1 view .LVU710
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2589              		.loc 1 2041 10 view .LVU711
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2590              		.loc 1 2041 12 is_stmt 0 view .LVU712
 2591 0038 284B     		ldr	r3, .L199+8
 2592 003a 1B68     		ldr	r3, [r3]
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2593              		.loc 1 2041 10 view .LVU713
 2594 003c 1BB3     		cbz	r3, .L197
ARM GAS  /tmp/ccubydGq.s 			page 146


2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2595              		.loc 1 2043 6 is_stmt 1 view .LVU714
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2596              		.loc 1 2043 26 is_stmt 0 view .LVU715
 2597 003e 274B     		ldr	r3, .L199+8
 2598 0040 DB68     		ldr	r3, [r3, #12]
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2599              		.loc 1 2043 12 view .LVU716
 2600 0042 DC68     		ldr	r4, [r3, #12]
 2601              	.LVL182:
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2602              		.loc 1 2044 6 is_stmt 1 view .LVU717
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2603              		.loc 1 2044 15 is_stmt 0 view .LVU718
 2604 0044 04F11800 		add	r0, r4, #24
 2605 0048 FFF7FEFF 		bl	uxListRemove
 2606              	.LVL183:
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2607              		.loc 1 2045 6 is_stmt 1 view .LVU719
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2608              		.loc 1 2045 15 is_stmt 0 view .LVU720
 2609 004c 251D     		adds	r5, r4, #4
 2610 004e 2846     		mov	r0, r5
 2611 0050 FFF7FEFF 		bl	uxListRemove
 2612              	.LVL184:
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2613              		.loc 1 2046 6 is_stmt 1 view .LVU721
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2614              		.loc 1 2046 6 view .LVU722
 2615 0054 E06A     		ldr	r0, [r4, #44]
 2616 0056 0123     		movs	r3, #1
 2617 0058 8340     		lsls	r3, r3, r0
 2618 005a 214A     		ldr	r2, .L199+12
 2619 005c 1168     		ldr	r1, [r2]
 2620 005e 0B43     		orrs	r3, r3, r1
 2621 0060 1360     		str	r3, [r2]
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2622              		.loc 1 2046 6 view .LVU723
 2623 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2624 0066 2946     		mov	r1, r5
 2625 0068 1E4B     		ldr	r3, .L199+16
 2626 006a 03EB8000 		add	r0, r3, r0, lsl #2
 2627 006e FFF7FEFF 		bl	vListInsertEnd
 2628              	.LVL185:
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2629              		.loc 1 2046 36 view .LVU724
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2630              		.loc 1 2050 6 view .LVU725
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2631              		.loc 1 2050 15 is_stmt 0 view .LVU726
 2632 0072 E26A     		ldr	r2, [r4, #44]
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2633              		.loc 1 2050 43 view .LVU727
 2634 0074 1C4B     		ldr	r3, .L199+20
 2635 0076 1B68     		ldr	r3, [r3]
 2636 0078 DB6A     		ldr	r3, [r3, #44]
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccubydGq.s 			page 147


 2637              		.loc 1 2050 8 view .LVU728
 2638 007a 9A42     		cmp	r2, r3
 2639 007c DCD3     		bcc	.L187
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2640              		.loc 1 2052 7 is_stmt 1 view .LVU729
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2641              		.loc 1 2052 21 is_stmt 0 view .LVU730
 2642 007e 1B4B     		ldr	r3, .L199+24
 2643 0080 0122     		movs	r2, #1
 2644 0082 1A60     		str	r2, [r3]
 2645 0084 D8E7     		b	.L187
 2646              	.L197:
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2647              		.loc 1 2060 5 is_stmt 1 view .LVU731
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2648              		.loc 1 2060 7 is_stmt 0 view .LVU732
 2649 0086 0CB1     		cbz	r4, .L190
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2650              		.loc 1 2068 6 is_stmt 1 view .LVU733
 2651 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2652              	.LVL186:
 2653              	.L190:
 2654              	.LBB126:
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2655              		.loc 1 2076 6 view .LVU734
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2656              		.loc 1 2076 18 is_stmt 0 view .LVU735
 2657 008c 184B     		ldr	r3, .L199+28
 2658 008e 1C68     		ldr	r4, [r3]
 2659              	.LVL187:
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2660              		.loc 1 2078 6 is_stmt 1 view .LVU736
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2661              		.loc 1 2078 8 is_stmt 0 view .LVU737
 2662 0090 74B9     		cbnz	r4, .L193
 2663              	.L191:
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2664              		.loc 1 2097 31 is_stmt 1 view .LVU738
 2665              	.LBE126:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2666              		.loc 1 2101 5 view .LVU739
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2667              		.loc 1 2101 23 is_stmt 0 view .LVU740
 2668 0092 164B     		ldr	r3, .L199+24
 2669 0094 1C68     		ldr	r4, [r3]
 2670              	.LVL188:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2671              		.loc 1 2101 7 view .LVU741
 2672 0096 C4B1     		cbz	r4, .L186
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2673              		.loc 1 2105 7 is_stmt 1 view .LVU742
 2674              	.LVL189:
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2675              		.loc 1 2108 6 view .LVU743
 2676 0098 164B     		ldr	r3, .L199+32
 2677 009a 4FF08052 		mov	r2, #268435456
 2678 009e 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccubydGq.s 			page 148


2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2679              		.loc 1 2108 6 view .LVU744
 2680              		.syntax unified
 2681              	@ 2108 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2682 00a0 BFF34F8F 		dsb
 2683              	@ 0 "" 2
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2684              		.loc 1 2108 6 view .LVU745
 2685              	@ 2108 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2686 00a4 BFF36F8F 		isb
 2687              	@ 0 "" 2
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2688              		.loc 1 2108 37 view .LVU746
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2689              		.loc 1 2105 23 is_stmt 0 view .LVU747
 2690              		.thumb
 2691              		.syntax unified
 2692 00a8 0124     		movs	r4, #1
 2693 00aa 0EE0     		b	.L186
 2694              	.LVL190:
 2695              	.L192:
 2696              	.LBB127:
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2697              		.loc 1 2088 33 is_stmt 1 view .LVU748
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 2698              		.loc 1 2090 8 view .LVU749
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2699              		.loc 1 2091 14 view .LVU750
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2700              		.loc 1 2091 7 is_stmt 0 view .LVU751
 2701 00ac 013C     		subs	r4, r4, #1
 2702              	.LVL191:
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2703              		.loc 1 2091 7 view .LVU752
 2704 00ae 07D0     		beq	.L198
 2705              	.L193:
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2706              		.loc 1 2080 7 is_stmt 1 view .LVU753
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2707              		.loc 1 2082 8 view .LVU754
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2708              		.loc 1 2082 12 is_stmt 0 view .LVU755
 2709 00b0 FFF7FEFF 		bl	xTaskIncrementTick
 2710              	.LVL192:
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2711              		.loc 1 2082 10 view .LVU756
 2712 00b4 0028     		cmp	r0, #0
 2713 00b6 F9D0     		beq	.L192
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2714              		.loc 1 2084 9 is_stmt 1 view .LVU757
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2715              		.loc 1 2084 23 is_stmt 0 view .LVU758
 2716 00b8 0C4B     		ldr	r3, .L199+24
 2717 00ba 0122     		movs	r2, #1
 2718 00bc 1A60     		str	r2, [r3]
 2719 00be F5E7     		b	.L192
 2720              	.L198:
ARM GAS  /tmp/ccubydGq.s 			page 149


2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2721              		.loc 1 2093 7 is_stmt 1 view .LVU759
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2722              		.loc 1 2093 21 is_stmt 0 view .LVU760
 2723 00c0 0B4B     		ldr	r3, .L199+28
 2724 00c2 0022     		movs	r2, #0
 2725 00c4 1A60     		str	r2, [r3]
 2726 00c6 E4E7     		b	.L191
 2727              	.LVL193:
 2728              	.L194:
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2729              		.loc 1 2093 21 view .LVU761
 2730              	.LBE127:
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2731              		.loc 1 2020 12 view .LVU762
 2732 00c8 0024     		movs	r4, #0
 2733              	.LVL194:
 2734              	.L186:
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2735              		.loc 1 2118 28 is_stmt 1 view .LVU763
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2736              		.loc 1 2121 2 view .LVU764
 2737 00ca FFF7FEFF 		bl	vPortExitCritical
 2738              	.LVL195:
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2739              		.loc 1 2123 2 view .LVU765
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2740              		.loc 1 2124 1 is_stmt 0 view .LVU766
 2741 00ce 2046     		mov	r0, r4
 2742 00d0 38BD     		pop	{r3, r4, r5, pc}
 2743              	.LVL196:
 2744              	.L200:
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2745              		.loc 1 2124 1 view .LVU767
 2746 00d2 00BF     		.align	2
 2747              	.L199:
 2748 00d4 00000000 		.word	.LANCHOR16
 2749 00d8 00000000 		.word	.LANCHOR9
 2750 00dc 00000000 		.word	.LANCHOR1
 2751 00e0 00000000 		.word	.LANCHOR13
 2752 00e4 00000000 		.word	.LANCHOR4
 2753 00e8 00000000 		.word	.LANCHOR10
 2754 00ec 00000000 		.word	.LANCHOR20
 2755 00f0 00000000 		.word	.LANCHOR19
 2756 00f4 04ED00E0 		.word	-536810236
 2757              		.cfi_endproc
 2758              	.LFE20:
 2760              		.section	.text.vTaskDelay,"ax",%progbits
 2761              		.align	1
 2762              		.global	vTaskDelay
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2766              		.fpu softvfp
 2768              	vTaskDelay:
 2769              	.LVL197:
 2770              	.LFB9:
ARM GAS  /tmp/ccubydGq.s 			page 150


1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2771              		.loc 1 1225 2 is_stmt 1 view -0
 2772              		.cfi_startproc
 2773              		@ args = 0, pretend = 0, frame = 0
 2774              		@ frame_needed = 0, uses_anonymous_args = 0
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2775              		.loc 1 1225 2 is_stmt 0 view .LVU769
 2776 0000 10B5     		push	{r4, lr}
 2777              	.LCFI23:
 2778              		.cfi_def_cfa_offset 8
 2779              		.cfi_offset 4, -8
 2780              		.cfi_offset 14, -4
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2781              		.loc 1 1226 2 is_stmt 1 view .LVU770
 2782              	.LVL198:
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2783              		.loc 1 1229 3 view .LVU771
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2784              		.loc 1 1229 5 is_stmt 0 view .LVU772
 2785 0002 A8B1     		cbz	r0, .L202
 2786 0004 0446     		mov	r4, r0
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2787              		.loc 1 1231 4 is_stmt 1 view .LVU773
 2788 0006 0F4B     		ldr	r3, .L207
 2789 0008 1B68     		ldr	r3, [r3]
 2790 000a 43B1     		cbz	r3, .L203
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2791              		.loc 1 1231 4 view .LVU774
 2792              	.LBB128:
 2793              	.LBI128:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2794              		.loc 2 233 30 view .LVU775
 2795              	.LBB129:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2796              		.loc 2 235 1 view .LVU776
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2797              		.loc 2 237 2 view .LVU777
 2798              		.syntax unified
 2799              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2800 000c 4FF05003 			mov r3, #80												
 2801 0010 83F31188 		msr basepri, r3											
 2802 0014 BFF36F8F 		isb														
 2803 0018 BFF34F8F 		dsb														
 2804              	
 2805              	@ 0 "" 2
 2806              	.LVL199:
 2807              		.thumb
 2808              		.syntax unified
 2809              	.L204:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2810              		.loc 2 237 2 is_stmt 0 view .LVU778
 2811              	.LBE129:
 2812              	.LBE128:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2813              		.loc 1 1231 4 is_stmt 1 discriminator 1 view .LVU779
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2814              		.loc 1 1231 4 discriminator 1 view .LVU780
ARM GAS  /tmp/ccubydGq.s 			page 151


1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2815              		.loc 1 1231 4 discriminator 1 view .LVU781
 2816 001c FEE7     		b	.L204
 2817              	.L203:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2818              		.loc 1 1231 45 discriminator 2 view .LVU782
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2819              		.loc 1 1232 4 discriminator 2 view .LVU783
 2820 001e FFF7FEFF 		bl	vTaskSuspendAll
 2821              	.LVL200:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2822              		.loc 1 1234 22 discriminator 2 view .LVU784
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2823              		.loc 1 1243 5 discriminator 2 view .LVU785
 2824 0022 0021     		movs	r1, #0
 2825 0024 2046     		mov	r0, r4
 2826 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2827              	.LVL201:
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2828              		.loc 1 1245 4 discriminator 2 view .LVU786
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2829              		.loc 1 1245 22 is_stmt 0 discriminator 2 view .LVU787
 2830 002a FFF7FEFF 		bl	xTaskResumeAll
 2831              	.LVL202:
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2832              		.loc 1 1249 28 is_stmt 1 discriminator 2 view .LVU788
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2833              		.loc 1 1254 3 discriminator 2 view .LVU789
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2834              		.loc 1 1254 5 is_stmt 0 discriminator 2 view .LVU790
 2835 002e 38B9     		cbnz	r0, .L201
 2836              	.LVL203:
 2837              	.L202:
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2838              		.loc 1 1256 4 is_stmt 1 view .LVU791
 2839 0030 054B     		ldr	r3, .L207+4
 2840 0032 4FF08052 		mov	r2, #268435456
 2841 0036 1A60     		str	r2, [r3]
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2842              		.loc 1 1256 4 view .LVU792
 2843              		.syntax unified
 2844              	@ 1256 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2845 0038 BFF34F8F 		dsb
 2846              	@ 0 "" 2
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2847              		.loc 1 1256 4 view .LVU793
 2848              	@ 1256 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2849 003c BFF36F8F 		isb
 2850              	@ 0 "" 2
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2851              		.loc 1 1256 26 view .LVU794
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2852              		.loc 1 1260 28 view .LVU795
 2853              		.thumb
 2854              		.syntax unified
 2855              	.L201:
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 152


 2856              		.loc 1 1262 2 is_stmt 0 view .LVU796
 2857 0040 10BD     		pop	{r4, pc}
 2858              	.L208:
 2859 0042 00BF     		.align	2
 2860              	.L207:
 2861 0044 00000000 		.word	.LANCHOR16
 2862 0048 04ED00E0 		.word	-536810236
 2863              		.cfi_endproc
 2864              	.LFE9:
 2866              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 2867              		.align	1
 2868              		.syntax unified
 2869              		.thumb
 2870              		.thumb_func
 2871              		.fpu softvfp
 2873              	prvCheckTasksWaitingTermination:
 2874              	.LFB36:
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2875              		.loc 1 3366 1 is_stmt 1 view -0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 0
 2878              		@ frame_needed = 0, uses_anonymous_args = 0
 2879              	.LBB130:
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2880              		.loc 1 3372 3 view .LVU798
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2881              		.loc 1 3376 3 view .LVU799
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2882              		.loc 1 3401 29 view .LVU800
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2883              		.loc 1 3376 8 view .LVU801
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2884              		.loc 1 3376 39 is_stmt 0 view .LVU802
 2885 0000 134B     		ldr	r3, .L218
 2886 0002 1B68     		ldr	r3, [r3]
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2887              		.loc 1 3376 8 view .LVU803
 2888 0004 13B3     		cbz	r3, .L216
 2889              	.LBE130:
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2890              		.loc 1 3366 1 view .LVU804
 2891 0006 10B5     		push	{r4, lr}
 2892              	.LCFI24:
 2893              		.cfi_def_cfa_offset 8
 2894              		.cfi_offset 4, -8
 2895              		.cfi_offset 14, -4
 2896              	.L212:
 2897              	.LBB132:
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2898              		.loc 1 3378 4 is_stmt 1 view .LVU805
 2899 0008 FFF7FEFF 		bl	vTaskSuspendAll
 2900              	.LVL204:
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2901              		.loc 1 3380 5 view .LVU806
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2902              		.loc 1 3380 20 is_stmt 0 view .LVU807
 2903 000c 114B     		ldr	r3, .L218+4
ARM GAS  /tmp/ccubydGq.s 			page 153


 2904 000e 1C68     		ldr	r4, [r3]
 2905              	.LVL205:
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2906              		.loc 1 3382 4 is_stmt 1 view .LVU808
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2907              		.loc 1 3382 13 is_stmt 0 view .LVU809
 2908 0010 FFF7FEFF 		bl	xTaskResumeAll
 2909              	.LVL206:
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2910              		.loc 1 3384 4 is_stmt 1 view .LVU810
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2911              		.loc 1 3384 6 is_stmt 0 view .LVU811
 2912 0014 24B9     		cbnz	r4, .L217
 2913              	.LVL207:
 2914              	.L211:
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2915              		.loc 1 3401 29 is_stmt 1 view .LVU812
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2916              		.loc 1 3376 8 view .LVU813
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2917              		.loc 1 3376 39 is_stmt 0 view .LVU814
 2918 0016 0E4B     		ldr	r3, .L218
 2919 0018 1B68     		ldr	r3, [r3]
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2920              		.loc 1 3376 8 view .LVU815
 2921 001a 002B     		cmp	r3, #0
 2922 001c F4D1     		bne	.L212
 2923              	.LBE132:
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2924              		.loc 1 3406 1 view .LVU816
 2925 001e 10BD     		pop	{r4, pc}
 2926              	.LVL208:
 2927              	.L217:
 2928              	.LBB133:
 2929              	.LBB131:
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2930              		.loc 1 3386 5 is_stmt 1 view .LVU817
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2931              		.loc 1 3388 5 view .LVU818
 2932 0020 FFF7FEFF 		bl	vPortEnterCritical
 2933              	.LVL209:
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2934              		.loc 1 3390 6 view .LVU819
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2935              		.loc 1 3390 26 is_stmt 0 view .LVU820
 2936 0024 0B4B     		ldr	r3, .L218+4
 2937 0026 DB68     		ldr	r3, [r3, #12]
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2938              		.loc 1 3390 12 view .LVU821
 2939 0028 DC68     		ldr	r4, [r3, #12]
 2940              	.LVL210:
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2941              		.loc 1 3391 6 is_stmt 1 view .LVU822
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2942              		.loc 1 3391 15 is_stmt 0 view .LVU823
 2943 002a 201D     		adds	r0, r4, #4
 2944 002c FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccubydGq.s 			page 154


 2945              	.LVL211:
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
 2946              		.loc 1 3392 6 is_stmt 1 view .LVU824
 2947 0030 094A     		ldr	r2, .L218+8
 2948 0032 1368     		ldr	r3, [r2]
 2949 0034 013B     		subs	r3, r3, #1
 2950 0036 1360     		str	r3, [r2]
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2951              		.loc 1 3393 6 view .LVU825
 2952 0038 054A     		ldr	r2, .L218
 2953 003a 1368     		ldr	r3, [r2]
 2954 003c 013B     		subs	r3, r3, #1
 2955 003e 1360     		str	r3, [r2]
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2956              		.loc 1 3395 5 view .LVU826
 2957 0040 FFF7FEFF 		bl	vPortExitCritical
 2958              	.LVL212:
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2959              		.loc 1 3397 5 view .LVU827
 2960 0044 2046     		mov	r0, r4
 2961 0046 FFF7FEFF 		bl	prvDeleteTCB
 2962              	.LVL213:
 2963              	.LBE131:
 2964 004a E4E7     		b	.L211
 2965              	.LVL214:
 2966              	.L216:
 2967              	.LCFI25:
 2968              		.cfi_def_cfa_offset 0
 2969              		.cfi_restore 4
 2970              		.cfi_restore 14
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2971              		.loc 1 3397 5 is_stmt 0 view .LVU828
 2972 004c 7047     		bx	lr
 2973              	.L219:
 2974 004e 00BF     		.align	2
 2975              	.L218:
 2976 0050 00000000 		.word	.LANCHOR15
 2977 0054 00000000 		.word	.LANCHOR7
 2978 0058 00000000 		.word	.LANCHOR9
 2979              	.LBE133:
 2980              		.cfi_endproc
 2981              	.LFE36:
 2983              		.section	.text.prvIdleTask,"ax",%progbits
 2984              		.align	1
 2985              		.syntax unified
 2986              		.thumb
 2987              		.thumb_func
 2988              		.fpu softvfp
 2990              	prvIdleTask:
 2991              	.LFB34:
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 2992              		.loc 1 3132 1 is_stmt 1 view -0
 2993              		.cfi_startproc
 2994              		@ Volatile: function does not return.
 2995              		@ args = 0, pretend = 0, frame = 0
 2996              		@ frame_needed = 0, uses_anonymous_args = 0
 2997              	.LVL215:
ARM GAS  /tmp/ccubydGq.s 			page 155


3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 2998              		.loc 1 3132 1 is_stmt 0 view .LVU830
 2999 0000 08B5     		push	{r3, lr}
 3000              	.LCFI26:
 3001              		.cfi_def_cfa_offset 8
 3002              		.cfi_offset 3, -8
 3003              		.cfi_offset 14, -4
 3004              	.LVL216:
 3005              	.L221:
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3006              		.loc 1 3134 2 is_stmt 1 view .LVU831
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3007              		.loc 1 3139 2 view .LVU832
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3008              		.loc 1 3143 3 view .LVU833
 3009 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 3010              	.LVL217:
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3011              		.loc 1 3166 4 view .LVU834
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3012              		.loc 1 3166 8 is_stmt 0 view .LVU835
 3013 0006 064B     		ldr	r3, .L224
 3014 0008 1B68     		ldr	r3, [r3]
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3015              		.loc 1 3166 6 view .LVU836
 3016 000a 012B     		cmp	r3, #1
 3017 000c F9D9     		bls	.L221
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3018              		.loc 1 3168 5 is_stmt 1 view .LVU837
 3019 000e 054B     		ldr	r3, .L224+4
 3020 0010 4FF08052 		mov	r2, #268435456
 3021 0014 1A60     		str	r2, [r3]
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3022              		.loc 1 3168 5 view .LVU838
 3023              		.syntax unified
 3024              	@ 3168 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3025 0016 BFF34F8F 		dsb
 3026              	@ 0 "" 2
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3027              		.loc 1 3168 5 view .LVU839
 3028              	@ 3168 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3029 001a BFF36F8F 		isb
 3030              	@ 0 "" 2
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3031              		.loc 1 3168 16 view .LVU840
 3032              		.thumb
 3033              		.syntax unified
 3034 001e F0E7     		b	.L221
 3035              	.L225:
 3036              		.align	2
 3037              	.L224:
 3038 0020 00000000 		.word	.LANCHOR4
 3039 0024 04ED00E0 		.word	-536810236
 3040              		.cfi_endproc
 3041              	.LFE34:
 3043              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3044              		.align	1
ARM GAS  /tmp/ccubydGq.s 			page 156


 3045              		.global	vTaskSwitchContext
 3046              		.syntax unified
 3047              		.thumb
 3048              		.thumb_func
 3049              		.fpu softvfp
 3051              	vTaskSwitchContext:
 3052              	.LFB26:
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3053              		.loc 1 2762 1 view -0
 3054              		.cfi_startproc
 3055              		@ args = 0, pretend = 0, frame = 0
 3056              		@ frame_needed = 0, uses_anonymous_args = 0
 3057              		@ link register save eliminated.
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3058              		.loc 1 2763 2 view .LVU842
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3059              		.loc 1 2763 27 is_stmt 0 view .LVU843
 3060 0000 204B     		ldr	r3, .L236
 3061 0002 1B68     		ldr	r3, [r3]
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3062              		.loc 1 2763 4 view .LVU844
 3063 0004 1BB1     		cbz	r3, .L227
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3064              		.loc 1 2767 3 is_stmt 1 view .LVU845
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3065              		.loc 1 2767 17 is_stmt 0 view .LVU846
 3066 0006 204B     		ldr	r3, .L236+4
 3067 0008 0122     		movs	r2, #1
 3068 000a 1A60     		str	r2, [r3]
 3069 000c 7047     		bx	lr
 3070              	.L227:
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3071              		.loc 1 2771 3 is_stmt 1 view .LVU847
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3072              		.loc 1 2771 17 is_stmt 0 view .LVU848
 3073 000e 1E4B     		ldr	r3, .L236+4
 3074 0010 0022     		movs	r2, #0
 3075 0012 1A60     		str	r2, [r3]
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3076              		.loc 1 2772 27 is_stmt 1 view .LVU849
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3077              		.loc 1 2802 33 view .LVU850
 3078              	.LBB134:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3079              		.loc 1 2806 3 view .LVU851
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3080              		.loc 1 2806 3 view .LVU852
 3081 0014 1D4B     		ldr	r3, .L236+8
 3082 0016 1B68     		ldr	r3, [r3]
 3083              	.LVL218:
 3084              	.LBB135:
 3085              	.LBI135:
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 3086              		.loc 2 172 59 view .LVU853
 3087              	.LBB136:
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3088              		.loc 2 174 2 view .LVU854
ARM GAS  /tmp/ccubydGq.s 			page 157


 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 3089              		.loc 2 176 3 view .LVU855
 3090              		.syntax unified
 3091              	@ 176 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3092 0018 B3FA83F3 		clz r3, r3
 3093              	@ 0 "" 2
 3094              	.LVL219:
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 3095              		.loc 2 176 3 is_stmt 0 view .LVU856
 3096              		.thumb
 3097              		.syntax unified
 3098 001c DBB2     		uxtb	r3, r3
 3099              	.LVL220:
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 3100              		.loc 2 177 3 is_stmt 1 view .LVU857
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 3101              		.loc 2 177 3 is_stmt 0 view .LVU858
 3102              	.LBE136:
 3103              	.LBE135:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3104              		.loc 1 2806 3 view .LVU859
 3105 001e C3F11F03 		rsb	r3, r3, #31
 3106              	.LVL221:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3107              		.loc 1 2806 3 is_stmt 1 view .LVU860
 3108 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3109 0026 8A00     		lsls	r2, r1, #2
 3110 0028 1949     		ldr	r1, .L236+12
 3111 002a 8A58     		ldr	r2, [r1, r2]
 3112 002c 42B9     		cbnz	r2, .L229
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3113              		.loc 1 2806 3 view .LVU861
 3114              	.LBB137:
 3115              	.LBI137:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3116              		.loc 2 233 30 view .LVU862
 3117              	.LBB138:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3118              		.loc 2 235 1 view .LVU863
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3119              		.loc 2 237 2 view .LVU864
 3120              		.syntax unified
 3121              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3122 002e 4FF05003 			mov r3, #80												
 3123 0032 83F31188 		msr basepri, r3											
 3124 0036 BFF36F8F 		isb														
 3125 003a BFF34F8F 		dsb														
 3126              	
 3127              	@ 0 "" 2
 3128              	.LVL222:
 3129              		.thumb
 3130              		.syntax unified
 3131              	.L230:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3132              		.loc 2 237 2 is_stmt 0 view .LVU865
 3133              	.LBE138:
 3134              	.LBE137:
ARM GAS  /tmp/ccubydGq.s 			page 158


2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3135              		.loc 1 2806 3 is_stmt 1 discriminator 1 view .LVU866
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3136              		.loc 1 2806 3 discriminator 1 view .LVU867
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3137              		.loc 1 2806 3 discriminator 1 view .LVU868
 3138 003e FEE7     		b	.L230
 3139              	.LVL223:
 3140              	.L229:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3141              		.loc 1 2806 3 is_stmt 0 discriminator 1 view .LVU869
 3142              	.LBE134:
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3143              		.loc 1 2762 1 discriminator 2 view .LVU870
 3144 0040 10B4     		push	{r4}
 3145              	.LCFI27:
 3146              		.cfi_def_cfa_offset 4
 3147              		.cfi_offset 4, -4
 3148              	.LBB141:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3149              		.loc 1 2806 3 is_stmt 1 discriminator 2 view .LVU871
 3150              	.LBB139:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3151              		.loc 1 2806 3 discriminator 2 view .LVU872
 3152              	.LVL224:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3153              		.loc 1 2806 3 discriminator 2 view .LVU873
 3154 0042 1349     		ldr	r1, .L236+12
 3155 0044 03EB8300 		add	r0, r3, r3, lsl #2
 3156 0048 8200     		lsls	r2, r0, #2
 3157 004a 0A44     		add	r2, r2, r1
 3158 004c 5068     		ldr	r0, [r2, #4]
 3159 004e 4068     		ldr	r0, [r0, #4]
 3160 0050 5060     		str	r0, [r2, #4]
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3161              		.loc 1 2806 3 discriminator 2 view .LVU874
 3162 0052 03EB8304 		add	r4, r3, r3, lsl #2
 3163 0056 A200     		lsls	r2, r4, #2
 3164 0058 1446     		mov	r4, r2
 3165 005a 0832     		adds	r2, r2, #8
 3166 005c 1144     		add	r1, r1, r2
 3167 005e 8842     		cmp	r0, r1
 3168 0060 0AD0     		beq	.L235
 3169              	.L231:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3170              		.loc 1 2806 3 discriminator 6 view .LVU875
 3171 0062 03EB8303 		add	r3, r3, r3, lsl #2
 3172              	.LVL225:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3173              		.loc 1 2806 3 is_stmt 0 discriminator 6 view .LVU876
 3174 0066 9A00     		lsls	r2, r3, #2
 3175 0068 094B     		ldr	r3, .L236+12
 3176 006a 1344     		add	r3, r3, r2
 3177 006c 5B68     		ldr	r3, [r3, #4]
 3178 006e DA68     		ldr	r2, [r3, #12]
 3179 0070 084B     		ldr	r3, .L236+16
 3180 0072 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccubydGq.s 			page 159


 3181              	.LBE139:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3182              		.loc 1 2806 3 is_stmt 1 discriminator 6 view .LVU877
 3183              	.LBE141:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3184              		.loc 1 2806 37 discriminator 6 view .LVU878
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3185              		.loc 1 2807 26 discriminator 6 view .LVU879
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3186              		.loc 1 2817 1 is_stmt 0 discriminator 6 view .LVU880
 3187 0074 10BC     		pop	{r4}
 3188              	.LCFI28:
 3189              		.cfi_remember_state
 3190              		.cfi_restore 4
 3191              		.cfi_def_cfa_offset 0
 3192 0076 7047     		bx	lr
 3193              	.LVL226:
 3194              	.L235:
 3195              	.LCFI29:
 3196              		.cfi_restore_state
 3197              	.LBB142:
 3198              	.LBB140:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3199              		.loc 1 2806 3 is_stmt 1 discriminator 4 view .LVU881
 3200 0078 4068     		ldr	r0, [r0, #4]
 3201 007a 054A     		ldr	r2, .L236+12
 3202 007c 2244     		add	r2, r2, r4
 3203 007e 5060     		str	r0, [r2, #4]
 3204 0080 EFE7     		b	.L231
 3205              	.L237:
 3206 0082 00BF     		.align	2
 3207              	.L236:
 3208 0084 00000000 		.word	.LANCHOR16
 3209 0088 00000000 		.word	.LANCHOR20
 3210 008c 00000000 		.word	.LANCHOR13
 3211 0090 00000000 		.word	.LANCHOR4
 3212 0094 00000000 		.word	.LANCHOR10
 3213              	.LBE140:
 3214              	.LBE142:
 3215              		.cfi_endproc
 3216              	.LFE26:
 3218              		.section	.text.vTaskSuspend,"ax",%progbits
 3219              		.align	1
 3220              		.global	vTaskSuspend
 3221              		.syntax unified
 3222              		.thumb
 3223              		.thumb_func
 3224              		.fpu softvfp
 3226              	vTaskSuspend:
 3227              	.LVL227:
 3228              	.LFB13:
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3229              		.loc 1 1567 2 view -0
 3230              		.cfi_startproc
 3231              		@ args = 0, pretend = 0, frame = 0
 3232              		@ frame_needed = 0, uses_anonymous_args = 0
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/ccubydGq.s 			page 160


 3233              		.loc 1 1567 2 is_stmt 0 view .LVU883
 3234 0000 38B5     		push	{r3, r4, r5, lr}
 3235              	.LCFI30:
 3236              		.cfi_def_cfa_offset 16
 3237              		.cfi_offset 3, -16
 3238              		.cfi_offset 4, -12
 3239              		.cfi_offset 5, -8
 3240              		.cfi_offset 14, -4
 3241 0002 0446     		mov	r4, r0
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3242              		.loc 1 1568 2 is_stmt 1 view .LVU884
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3243              		.loc 1 1570 3 view .LVU885
 3244 0004 FFF7FEFF 		bl	vPortEnterCritical
 3245              	.LVL228:
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3246              		.loc 1 1574 4 view .LVU886
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3247              		.loc 1 1574 12 is_stmt 0 view .LVU887
 3248 0008 3CB3     		cbz	r4, .L249
 3249              	.LVL229:
 3250              	.L239:
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3251              		.loc 1 1576 30 is_stmt 1 discriminator 4 view .LVU888
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3252              		.loc 1 1580 4 discriminator 4 view .LVU889
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3253              		.loc 1 1580 8 is_stmt 0 discriminator 4 view .LVU890
 3254 000a 251D     		adds	r5, r4, #4
 3255 000c 2846     		mov	r0, r5
 3256 000e FFF7FEFF 		bl	uxListRemove
 3257              	.LVL230:
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3258              		.loc 1 1580 6 discriminator 4 view .LVU891
 3259 0012 70B9     		cbnz	r0, .L240
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3260              		.loc 1 1582 5 is_stmt 1 view .LVU892
 3261 0014 E26A     		ldr	r2, [r4, #44]
 3262 0016 02EB8201 		add	r1, r2, r2, lsl #2
 3263 001a 274B     		ldr	r3, .L252
 3264 001c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 3265 0020 3BB9     		cbnz	r3, .L240
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3266              		.loc 1 1582 5 discriminator 1 view .LVU893
 3267 0022 0123     		movs	r3, #1
 3268 0024 03FA02F2 		lsl	r2, r3, r2
 3269 0028 2449     		ldr	r1, .L252+4
 3270 002a 0B68     		ldr	r3, [r1]
 3271 002c 23EA0203 		bic	r3, r3, r2
 3272 0030 0B60     		str	r3, [r1]
 3273              	.L240:
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3274              		.loc 1 1586 29 view .LVU894
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3275              		.loc 1 1590 4 view .LVU895
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3276              		.loc 1 1590 8 is_stmt 0 view .LVU896
ARM GAS  /tmp/ccubydGq.s 			page 161


 3277 0032 A36A     		ldr	r3, [r4, #40]
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3278              		.loc 1 1590 6 view .LVU897
 3279 0034 1BB1     		cbz	r3, .L241
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3280              		.loc 1 1592 5 is_stmt 1 view .LVU898
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3281              		.loc 1 1592 14 is_stmt 0 view .LVU899
 3282 0036 04F11800 		add	r0, r4, #24
 3283 003a FFF7FEFF 		bl	uxListRemove
 3284              	.LVL231:
 3285              	.L241:
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3286              		.loc 1 1596 29 is_stmt 1 view .LVU900
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3287              		.loc 1 1599 4 view .LVU901
 3288 003e 2946     		mov	r1, r5
 3289 0040 1F48     		ldr	r0, .L252+8
 3290 0042 FFF7FEFF 		bl	vListInsertEnd
 3291              	.LVL232:
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3292              		.loc 1 1601 3 view .LVU902
 3293 0046 FFF7FEFF 		bl	vPortExitCritical
 3294              	.LVL233:
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3295              		.loc 1 1603 3 view .LVU903
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3296              		.loc 1 1603 25 is_stmt 0 view .LVU904
 3297 004a 1E4B     		ldr	r3, .L252+12
 3298 004c 1B68     		ldr	r3, [r3]
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3299              		.loc 1 1603 5 view .LVU905
 3300 004e 3BB9     		cbnz	r3, .L250
 3301              	.L242:
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3302              		.loc 1 1615 28 is_stmt 1 view .LVU906
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3303              		.loc 1 1618 3 view .LVU907
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3304              		.loc 1 1618 13 is_stmt 0 view .LVU908
 3305 0050 1D4B     		ldr	r3, .L252+16
 3306 0052 1B68     		ldr	r3, [r3]
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3307              		.loc 1 1618 5 view .LVU909
 3308 0054 A342     		cmp	r3, r4
 3309 0056 0AD0     		beq	.L251
 3310              	.L238:
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3311              		.loc 1 1649 2 view .LVU910
 3312 0058 38BD     		pop	{r3, r4, r5, pc}
 3313              	.LVL234:
 3314              	.L249:
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3315              		.loc 1 1574 12 discriminator 1 view .LVU911
 3316 005a 1B4B     		ldr	r3, .L252+16
 3317 005c 1C68     		ldr	r4, [r3]
 3318              	.LVL235:
ARM GAS  /tmp/ccubydGq.s 			page 162


1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3319              		.loc 1 1574 12 discriminator 1 view .LVU912
 3320 005e D4E7     		b	.L239
 3321              	.LVL236:
 3322              	.L250:
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3323              		.loc 1 1607 4 is_stmt 1 view .LVU913
 3324 0060 FFF7FEFF 		bl	vPortEnterCritical
 3325              	.LVL237:
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3326              		.loc 1 1609 5 view .LVU914
 3327 0064 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3328              	.LVL238:
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3329              		.loc 1 1611 4 view .LVU915
 3330 0068 FFF7FEFF 		bl	vPortExitCritical
 3331              	.LVL239:
 3332 006c F0E7     		b	.L242
 3333              	.L251:
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3334              		.loc 1 1620 4 view .LVU916
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3335              		.loc 1 1620 26 is_stmt 0 view .LVU917
 3336 006e 154B     		ldr	r3, .L252+12
 3337 0070 1B68     		ldr	r3, [r3]
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3338              		.loc 1 1620 6 view .LVU918
 3339 0072 A3B1     		cbz	r3, .L244
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3340              		.loc 1 1623 5 is_stmt 1 view .LVU919
 3341 0074 154B     		ldr	r3, .L252+20
 3342 0076 1B68     		ldr	r3, [r3]
 3343 0078 43B1     		cbz	r3, .L245
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3344              		.loc 1 1623 5 view .LVU920
 3345              	.LBB143:
 3346              	.LBI143:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3347              		.loc 2 233 30 view .LVU921
 3348              	.LBB144:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3349              		.loc 2 235 1 view .LVU922
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3350              		.loc 2 237 2 view .LVU923
 3351              		.syntax unified
 3352              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3353 007a 4FF05003 			mov r3, #80												
 3354 007e 83F31188 		msr basepri, r3											
 3355 0082 BFF36F8F 		isb														
 3356 0086 BFF34F8F 		dsb														
 3357              	
 3358              	@ 0 "" 2
 3359              	.LVL240:
 3360              		.thumb
 3361              		.syntax unified
 3362              	.L246:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
ARM GAS  /tmp/ccubydGq.s 			page 163


 3363              		.loc 2 237 2 is_stmt 0 view .LVU924
 3364              	.LBE144:
 3365              	.LBE143:
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3366              		.loc 1 1623 5 is_stmt 1 discriminator 1 view .LVU925
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3367              		.loc 1 1623 5 discriminator 1 view .LVU926
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3368              		.loc 1 1623 5 discriminator 1 view .LVU927
 3369 008a FEE7     		b	.L246
 3370              	.L245:
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3371              		.loc 1 1623 46 discriminator 2 view .LVU928
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3372              		.loc 1 1624 5 discriminator 2 view .LVU929
 3373 008c 104B     		ldr	r3, .L252+24
 3374 008e 4FF08052 		mov	r2, #268435456
 3375 0092 1A60     		str	r2, [r3]
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3376              		.loc 1 1624 5 discriminator 2 view .LVU930
 3377              		.syntax unified
 3378              	@ 1624 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3379 0094 BFF34F8F 		dsb
 3380              	@ 0 "" 2
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3381              		.loc 1 1624 5 discriminator 2 view .LVU931
 3382              	@ 1624 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3383 0098 BFF36F8F 		isb
 3384              	@ 0 "" 2
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3385              		.loc 1 1624 27 discriminator 2 view .LVU932
 3386              		.thumb
 3387              		.syntax unified
 3388 009c DCE7     		b	.L238
 3389              	.L244:
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3390              		.loc 1 1631 5 view .LVU933
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3391              		.loc 1 1631 9 is_stmt 0 view .LVU934
 3392 009e 084B     		ldr	r3, .L252+8
 3393 00a0 1A68     		ldr	r2, [r3]
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3394              		.loc 1 1631 56 view .LVU935
 3395 00a2 0C4B     		ldr	r3, .L252+28
 3396 00a4 1B68     		ldr	r3, [r3]
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3397              		.loc 1 1631 7 view .LVU936
 3398 00a6 9A42     		cmp	r2, r3
 3399 00a8 03D1     		bne	.L247
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3400              		.loc 1 1637 6 is_stmt 1 view .LVU937
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3401              		.loc 1 1637 19 is_stmt 0 view .LVU938
 3402 00aa 074B     		ldr	r3, .L252+16
 3403 00ac 0022     		movs	r2, #0
 3404 00ae 1A60     		str	r2, [r3]
 3405 00b0 D2E7     		b	.L238
ARM GAS  /tmp/ccubydGq.s 			page 164


 3406              	.L247:
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3407              		.loc 1 1641 6 is_stmt 1 view .LVU939
 3408 00b2 FFF7FEFF 		bl	vTaskSwitchContext
 3409              	.LVL241:
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3410              		.loc 1 1647 28 view .LVU940
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3411              		.loc 1 1649 2 is_stmt 0 view .LVU941
 3412 00b6 CFE7     		b	.L238
 3413              	.L253:
 3414              		.align	2
 3415              	.L252:
 3416 00b8 00000000 		.word	.LANCHOR4
 3417 00bc 00000000 		.word	.LANCHOR13
 3418 00c0 00000000 		.word	.LANCHOR0
 3419 00c4 00000000 		.word	.LANCHOR11
 3420 00c8 00000000 		.word	.LANCHOR10
 3421 00cc 00000000 		.word	.LANCHOR16
 3422 00d0 04ED00E0 		.word	-536810236
 3423 00d4 00000000 		.word	.LANCHOR9
 3424              		.cfi_endproc
 3425              	.LFE13:
 3427              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3428              		.align	1
 3429              		.global	vTaskPlaceOnEventList
 3430              		.syntax unified
 3431              		.thumb
 3432              		.thumb_func
 3433              		.fpu softvfp
 3435              	vTaskPlaceOnEventList:
 3436              	.LVL242:
 3437              	.LFB27:
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3438              		.loc 1 2821 1 is_stmt 1 view -0
 3439              		.cfi_startproc
 3440              		@ args = 0, pretend = 0, frame = 0
 3441              		@ frame_needed = 0, uses_anonymous_args = 0
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3442              		.loc 1 2822 2 view .LVU943
 3443 0000 58B1     		cbz	r0, .L259
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3444              		.loc 1 2821 1 is_stmt 0 discriminator 2 view .LVU944
 3445 0002 10B5     		push	{r4, lr}
 3446              	.LCFI31:
 3447              		.cfi_def_cfa_offset 8
 3448              		.cfi_offset 4, -8
 3449              		.cfi_offset 14, -4
 3450 0004 0C46     		mov	r4, r1
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3451              		.loc 1 2822 29 is_stmt 1 discriminator 2 view .LVU945
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3452              		.loc 1 2831 2 discriminator 2 view .LVU946
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3453              		.loc 1 2831 43 is_stmt 0 discriminator 2 view .LVU947
 3454 0006 094B     		ldr	r3, .L260
 3455 0008 1968     		ldr	r1, [r3]
ARM GAS  /tmp/ccubydGq.s 			page 165


 3456              	.LVL243:
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3457              		.loc 1 2831 2 discriminator 2 view .LVU948
 3458 000a 1831     		adds	r1, r1, #24
 3459 000c FFF7FEFF 		bl	vListInsert
 3460              	.LVL244:
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3461              		.loc 1 2833 2 is_stmt 1 discriminator 2 view .LVU949
 3462 0010 0121     		movs	r1, #1
 3463 0012 2046     		mov	r0, r4
 3464 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3465              	.LVL245:
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3466              		.loc 1 2834 1 is_stmt 0 discriminator 2 view .LVU950
 3467 0018 10BD     		pop	{r4, pc}
 3468              	.LVL246:
 3469              	.L259:
 3470              	.LCFI32:
 3471              		.cfi_def_cfa_offset 0
 3472              		.cfi_restore 4
 3473              		.cfi_restore 14
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3474              		.loc 1 2822 2 is_stmt 1 view .LVU951
 3475              	.LBB145:
 3476              	.LBI145:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3477              		.loc 2 233 30 view .LVU952
 3478              	.LBB146:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3479              		.loc 2 235 1 view .LVU953
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3480              		.loc 2 237 2 view .LVU954
 3481              		.syntax unified
 3482              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3483 001a 4FF05003 			mov r3, #80												
 3484 001e 83F31188 		msr basepri, r3											
 3485 0022 BFF36F8F 		isb														
 3486 0026 BFF34F8F 		dsb														
 3487              	
 3488              	@ 0 "" 2
 3489              	.LVL247:
 3490              		.thumb
 3491              		.syntax unified
 3492              	.L256:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3493              		.loc 2 237 2 is_stmt 0 view .LVU955
 3494              	.LBE146:
 3495              	.LBE145:
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3496              		.loc 1 2822 2 is_stmt 1 discriminator 1 view .LVU956
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3497              		.loc 1 2822 2 discriminator 1 view .LVU957
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3498              		.loc 1 2822 2 discriminator 1 view .LVU958
 3499 002a FEE7     		b	.L256
 3500              	.L261:
 3501              		.align	2
ARM GAS  /tmp/ccubydGq.s 			page 166


 3502              	.L260:
 3503 002c 00000000 		.word	.LANCHOR10
 3504              		.cfi_endproc
 3505              	.LFE27:
 3507              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3508              		.align	1
 3509              		.global	vTaskPlaceOnUnorderedEventList
 3510              		.syntax unified
 3511              		.thumb
 3512              		.thumb_func
 3513              		.fpu softvfp
 3515              	vTaskPlaceOnUnorderedEventList:
 3516              	.LVL248:
 3517              	.LFB28:
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3518              		.loc 1 2838 1 view -0
 3519              		.cfi_startproc
 3520              		@ args = 0, pretend = 0, frame = 0
 3521              		@ frame_needed = 0, uses_anonymous_args = 0
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3522              		.loc 1 2838 1 is_stmt 0 view .LVU960
 3523 0000 38B5     		push	{r3, r4, r5, lr}
 3524              	.LCFI33:
 3525              		.cfi_def_cfa_offset 16
 3526              		.cfi_offset 3, -16
 3527              		.cfi_offset 4, -12
 3528              		.cfi_offset 5, -8
 3529              		.cfi_offset 14, -4
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3530              		.loc 1 2839 2 is_stmt 1 view .LVU961
 3531 0002 68B1     		cbz	r0, .L268
 3532 0004 0B46     		mov	r3, r1
 3533 0006 1446     		mov	r4, r2
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3534              		.loc 1 2839 29 discriminator 2 view .LVU962
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3535              		.loc 1 2843 2 discriminator 2 view .LVU963
 3536 0008 114A     		ldr	r2, .L269
 3537              	.LVL249:
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3538              		.loc 1 2843 2 is_stmt 0 discriminator 2 view .LVU964
 3539 000a 1268     		ldr	r2, [r2]
 3540 000c 8AB9     		cbnz	r2, .L265
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3541              		.loc 1 2843 2 is_stmt 1 view .LVU965
 3542              	.LBB147:
 3543              	.LBI147:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3544              		.loc 2 233 30 view .LVU966
 3545              	.LBB148:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3546              		.loc 2 235 1 view .LVU967
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3547              		.loc 2 237 2 view .LVU968
 3548              		.syntax unified
 3549              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3550 000e 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccubydGq.s 			page 167


 3551 0012 83F31188 		msr basepri, r3											
 3552 0016 BFF36F8F 		isb														
 3553 001a BFF34F8F 		dsb														
 3554              	
 3555              	@ 0 "" 2
 3556              	.LVL250:
 3557              		.thumb
 3558              		.syntax unified
 3559              	.L266:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3560              		.loc 2 237 2 is_stmt 0 view .LVU969
 3561              	.LBE148:
 3562              	.LBE147:
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3563              		.loc 1 2843 2 is_stmt 1 discriminator 2 view .LVU970
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3564              		.loc 1 2843 2 discriminator 2 view .LVU971
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3565              		.loc 1 2843 2 discriminator 2 view .LVU972
 3566 001e FEE7     		b	.L266
 3567              	.LVL251:
 3568              	.L268:
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3569              		.loc 1 2839 2 view .LVU973
 3570              	.LBB149:
 3571              	.LBI149:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3572              		.loc 2 233 30 view .LVU974
 3573              	.LBB150:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3574              		.loc 2 235 1 view .LVU975
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3575              		.loc 2 237 2 view .LVU976
 3576              		.syntax unified
 3577              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3578 0020 4FF05003 			mov r3, #80												
 3579 0024 83F31188 		msr basepri, r3											
 3580 0028 BFF36F8F 		isb														
 3581 002c BFF34F8F 		dsb														
 3582              	
 3583              	@ 0 "" 2
 3584              	.LVL252:
 3585              		.thumb
 3586              		.syntax unified
 3587              	.L264:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3588              		.loc 2 237 2 is_stmt 0 view .LVU977
 3589              	.LBE150:
 3590              	.LBE149:
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3591              		.loc 1 2839 2 is_stmt 1 discriminator 1 view .LVU978
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3592              		.loc 1 2839 2 discriminator 1 view .LVU979
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3593              		.loc 1 2839 2 discriminator 1 view .LVU980
 3594 0030 FEE7     		b	.L264
 3595              	.LVL253:
ARM GAS  /tmp/ccubydGq.s 			page 168


 3596              	.L265:
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3597              		.loc 1 2843 43 discriminator 2 view .LVU981
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3598              		.loc 1 2848 2 discriminator 2 view .LVU982
 3599 0032 084A     		ldr	r2, .L269+4
 3600 0034 1168     		ldr	r1, [r2]
 3601              	.LVL254:
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3602              		.loc 1 2848 2 is_stmt 0 discriminator 2 view .LVU983
 3603 0036 43F00043 		orr	r3, r3, #-2147483648
 3604              	.LVL255:
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3605              		.loc 1 2848 2 discriminator 2 view .LVU984
 3606 003a 8B61     		str	r3, [r1, #24]
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3607              		.loc 1 2855 2 is_stmt 1 discriminator 2 view .LVU985
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3608              		.loc 1 2855 46 is_stmt 0 discriminator 2 view .LVU986
 3609 003c 1168     		ldr	r1, [r2]
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3610              		.loc 1 2855 2 discriminator 2 view .LVU987
 3611 003e 1831     		adds	r1, r1, #24
 3612 0040 FFF7FEFF 		bl	vListInsertEnd
 3613              	.LVL256:
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3614              		.loc 1 2857 2 is_stmt 1 discriminator 2 view .LVU988
 3615 0044 0121     		movs	r1, #1
 3616 0046 2046     		mov	r0, r4
 3617 0048 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3618              	.LVL257:
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3619              		.loc 1 2858 1 is_stmt 0 discriminator 2 view .LVU989
 3620 004c 38BD     		pop	{r3, r4, r5, pc}
 3621              	.LVL258:
 3622              	.L270:
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3623              		.loc 1 2858 1 discriminator 2 view .LVU990
 3624 004e 00BF     		.align	2
 3625              	.L269:
 3626 0050 00000000 		.word	.LANCHOR16
 3627 0054 00000000 		.word	.LANCHOR10
 3628              		.cfi_endproc
 3629              	.LFE28:
 3631              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3632              		.align	1
 3633              		.global	xTaskRemoveFromEventList
 3634              		.syntax unified
 3635              		.thumb
 3636              		.thumb_func
 3637              		.fpu softvfp
 3639              	xTaskRemoveFromEventList:
 3640              	.LVL259:
 3641              	.LFB29:
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3642              		.loc 1 2895 1 is_stmt 1 view -0
 3643              		.cfi_startproc
ARM GAS  /tmp/ccubydGq.s 			page 169


 3644              		@ args = 0, pretend = 0, frame = 0
 3645              		@ frame_needed = 0, uses_anonymous_args = 0
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3646              		.loc 1 2895 1 is_stmt 0 view .LVU992
 3647 0000 38B5     		push	{r3, r4, r5, lr}
 3648              	.LCFI34:
 3649              		.cfi_def_cfa_offset 16
 3650              		.cfi_offset 3, -16
 3651              		.cfi_offset 4, -12
 3652              		.cfi_offset 5, -8
 3653              		.cfi_offset 14, -4
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3654              		.loc 1 2896 1 is_stmt 1 view .LVU993
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3655              		.loc 1 2897 1 view .LVU994
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3656              		.loc 1 2912 2 view .LVU995
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3657              		.loc 1 2912 31 is_stmt 0 view .LVU996
 3658 0002 C368     		ldr	r3, [r0, #12]
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3659              		.loc 1 2912 17 view .LVU997
 3660 0004 DC68     		ldr	r4, [r3, #12]
 3661              	.LVL260:
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3662              		.loc 1 2913 2 is_stmt 1 view .LVU998
 3663 0006 24B3     		cbz	r4, .L279
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3664              		.loc 1 2913 32 discriminator 2 view .LVU999
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3665              		.loc 1 2914 2 discriminator 2 view .LVU1000
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3666              		.loc 1 2914 11 is_stmt 0 discriminator 2 view .LVU1001
 3667 0008 04F11805 		add	r5, r4, #24
 3668 000c 2846     		mov	r0, r5
 3669              	.LVL261:
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3670              		.loc 1 2914 11 discriminator 2 view .LVU1002
 3671 000e FFF7FEFF 		bl	uxListRemove
 3672              	.LVL262:
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3673              		.loc 1 2916 2 is_stmt 1 discriminator 2 view .LVU1003
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3674              		.loc 1 2916 27 is_stmt 0 discriminator 2 view .LVU1004
 3675 0012 184B     		ldr	r3, .L280
 3676 0014 1B68     		ldr	r3, [r3]
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3677              		.loc 1 2916 4 discriminator 2 view .LVU1005
 3678 0016 2BBB     		cbnz	r3, .L274
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3679              		.loc 1 2918 3 is_stmt 1 view .LVU1006
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3680              		.loc 1 2918 12 is_stmt 0 view .LVU1007
 3681 0018 251D     		adds	r5, r4, #4
 3682 001a 2846     		mov	r0, r5
 3683 001c FFF7FEFF 		bl	uxListRemove
 3684              	.LVL263:
ARM GAS  /tmp/ccubydGq.s 			page 170


2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3685              		.loc 1 2919 3 is_stmt 1 view .LVU1008
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3686              		.loc 1 2919 3 view .LVU1009
 3687 0020 E06A     		ldr	r0, [r4, #44]
 3688 0022 0123     		movs	r3, #1
 3689 0024 8340     		lsls	r3, r3, r0
 3690 0026 144A     		ldr	r2, .L280+4
 3691 0028 1168     		ldr	r1, [r2]
 3692 002a 0B43     		orrs	r3, r3, r1
 3693 002c 1360     		str	r3, [r2]
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3694              		.loc 1 2919 3 view .LVU1010
 3695 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3696 0032 2946     		mov	r1, r5
 3697 0034 114B     		ldr	r3, .L280+8
 3698 0036 03EB8000 		add	r0, r3, r0, lsl #2
 3699 003a FFF7FEFF 		bl	vListInsertEnd
 3700              	.LVL264:
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3701              		.loc 1 2919 42 view .LVU1011
 3702              	.L275:
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3703              		.loc 1 2928 2 view .LVU1012
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3704              		.loc 1 2928 20 is_stmt 0 view .LVU1013
 3705 003e E26A     		ldr	r2, [r4, #44]
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3706              		.loc 1 2928 47 view .LVU1014
 3707 0040 0F4B     		ldr	r3, .L280+12
 3708 0042 1B68     		ldr	r3, [r3]
 3709 0044 DB6A     		ldr	r3, [r3, #44]
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3710              		.loc 1 2928 4 view .LVU1015
 3711 0046 9A42     		cmp	r2, r3
 3712 0048 11D9     		bls	.L277
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3713              		.loc 1 2933 3 is_stmt 1 view .LVU1016
 3714              	.LVL265:
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3715              		.loc 1 2937 3 view .LVU1017
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3716              		.loc 1 2937 17 is_stmt 0 view .LVU1018
 3717 004a 0120     		movs	r0, #1
 3718 004c 0D4B     		ldr	r3, .L280+16
 3719 004e 1860     		str	r0, [r3]
 3720 0050 0EE0     		b	.L271
 3721              	.LVL266:
 3722              	.L279:
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3723              		.loc 1 2913 2 is_stmt 1 view .LVU1019
 3724              	.LBB151:
 3725              	.LBI151:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3726              		.loc 2 233 30 view .LVU1020
 3727              	.LBB152:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccubydGq.s 			page 171


 3728              		.loc 2 235 1 view .LVU1021
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3729              		.loc 2 237 2 view .LVU1022
 3730              		.syntax unified
 3731              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3732 0052 4FF05003 			mov r3, #80												
 3733 0056 83F31188 		msr basepri, r3											
 3734 005a BFF36F8F 		isb														
 3735 005e BFF34F8F 		dsb														
 3736              	
 3737              	@ 0 "" 2
 3738              	.LVL267:
 3739              		.thumb
 3740              		.syntax unified
 3741              	.L273:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3742              		.loc 2 237 2 is_stmt 0 view .LVU1023
 3743              	.LBE152:
 3744              	.LBE151:
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3745              		.loc 1 2913 2 is_stmt 1 discriminator 1 view .LVU1024
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3746              		.loc 1 2913 2 discriminator 1 view .LVU1025
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3747              		.loc 1 2913 2 discriminator 1 view .LVU1026
 3748 0062 FEE7     		b	.L273
 3749              	.LVL268:
 3750              	.L274:
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3751              		.loc 1 2925 3 view .LVU1027
 3752 0064 2946     		mov	r1, r5
 3753 0066 0848     		ldr	r0, .L280+20
 3754 0068 FFF7FEFF 		bl	vListInsertEnd
 3755              	.LVL269:
 3756 006c E7E7     		b	.L275
 3757              	.L277:
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3758              		.loc 1 2941 11 is_stmt 0 view .LVU1028
 3759 006e 0020     		movs	r0, #0
 3760              	.LVL270:
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3761              		.loc 1 2958 2 is_stmt 1 view .LVU1029
 3762              	.L271:
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3763              		.loc 1 2959 1 is_stmt 0 view .LVU1030
 3764 0070 38BD     		pop	{r3, r4, r5, pc}
 3765              	.LVL271:
 3766              	.L281:
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3767              		.loc 1 2959 1 view .LVU1031
 3768 0072 00BF     		.align	2
 3769              	.L280:
 3770 0074 00000000 		.word	.LANCHOR16
 3771 0078 00000000 		.word	.LANCHOR13
 3772 007c 00000000 		.word	.LANCHOR4
 3773 0080 00000000 		.word	.LANCHOR10
 3774 0084 00000000 		.word	.LANCHOR20
ARM GAS  /tmp/ccubydGq.s 			page 172


 3775 0088 00000000 		.word	.LANCHOR1
 3776              		.cfi_endproc
 3777              	.LFE29:
 3779              		.section	.text.xTaskRemoveFromUnorderedEventList,"ax",%progbits
 3780              		.align	1
 3781              		.global	xTaskRemoveFromUnorderedEventList
 3782              		.syntax unified
 3783              		.thumb
 3784              		.thumb_func
 3785              		.fpu softvfp
 3787              	xTaskRemoveFromUnorderedEventList:
 3788              	.LVL272:
 3789              	.LFB30:
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3790              		.loc 1 2963 1 is_stmt 1 view -0
 3791              		.cfi_startproc
 3792              		@ args = 0, pretend = 0, frame = 0
 3793              		@ frame_needed = 0, uses_anonymous_args = 0
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3794              		.loc 1 2963 1 is_stmt 0 view .LVU1033
 3795 0000 38B5     		push	{r3, r4, r5, lr}
 3796              	.LCFI35:
 3797              		.cfi_def_cfa_offset 16
 3798              		.cfi_offset 3, -16
 3799              		.cfi_offset 4, -12
 3800              		.cfi_offset 5, -8
 3801              		.cfi_offset 14, -4
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3802              		.loc 1 2964 1 is_stmt 1 view .LVU1034
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3803              		.loc 1 2965 1 view .LVU1035
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3804              		.loc 1 2969 2 view .LVU1036
 3805 0002 1D4A     		ldr	r2, .L291
 3806 0004 1268     		ldr	r2, [r2]
 3807 0006 42B9     		cbnz	r2, .L283
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3808              		.loc 1 2969 2 view .LVU1037
 3809              	.LBB153:
 3810              	.LBI153:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3811              		.loc 2 233 30 view .LVU1038
 3812              	.LBB154:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3813              		.loc 2 235 1 view .LVU1039
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3814              		.loc 2 237 2 view .LVU1040
 3815              		.syntax unified
 3816              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3817 0008 4FF05003 			mov r3, #80												
 3818 000c 83F31188 		msr basepri, r3											
 3819 0010 BFF36F8F 		isb														
 3820 0014 BFF34F8F 		dsb														
 3821              	
 3822              	@ 0 "" 2
 3823              	.LVL273:
 3824              		.thumb
ARM GAS  /tmp/ccubydGq.s 			page 173


 3825              		.syntax unified
 3826              	.L284:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3827              		.loc 2 237 2 is_stmt 0 view .LVU1041
 3828              	.LBE154:
 3829              	.LBE153:
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3830              		.loc 1 2969 2 is_stmt 1 discriminator 1 view .LVU1042
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3831              		.loc 1 2969 2 discriminator 1 view .LVU1043
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3832              		.loc 1 2969 2 discriminator 1 view .LVU1044
 3833 0018 FEE7     		b	.L284
 3834              	.L283:
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3835              		.loc 1 2969 49 discriminator 2 view .LVU1045
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3836              		.loc 1 2972 2 discriminator 2 view .LVU1046
 3837 001a 41F00043 		orr	r3, r1, #-2147483648
 3838 001e 0360     		str	r3, [r0]
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3839              		.loc 1 2976 2 discriminator 2 view .LVU1047
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3840              		.loc 1 2976 17 is_stmt 0 discriminator 2 view .LVU1048
 3841 0020 C468     		ldr	r4, [r0, #12]
 3842              	.LVL274:
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3843              		.loc 1 2977 2 is_stmt 1 discriminator 2 view .LVU1049
 3844 0022 F4B1     		cbz	r4, .L290
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3845              		.loc 1 2977 32 discriminator 2 view .LVU1050
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3846              		.loc 1 2978 2 discriminator 2 view .LVU1051
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3847              		.loc 1 2978 11 is_stmt 0 discriminator 2 view .LVU1052
 3848 0024 FFF7FEFF 		bl	uxListRemove
 3849              	.LVL275:
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3850              		.loc 1 2983 2 is_stmt 1 discriminator 2 view .LVU1053
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3851              		.loc 1 2983 11 is_stmt 0 discriminator 2 view .LVU1054
 3852 0028 251D     		adds	r5, r4, #4
 3853 002a 2846     		mov	r0, r5
 3854 002c FFF7FEFF 		bl	uxListRemove
 3855              	.LVL276:
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3856              		.loc 1 2984 2 is_stmt 1 discriminator 2 view .LVU1055
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3857              		.loc 1 2984 2 discriminator 2 view .LVU1056
 3858 0030 E06A     		ldr	r0, [r4, #44]
 3859 0032 0123     		movs	r3, #1
 3860 0034 8340     		lsls	r3, r3, r0
 3861 0036 114A     		ldr	r2, .L291+4
 3862 0038 1168     		ldr	r1, [r2]
 3863 003a 0B43     		orrs	r3, r3, r1
 3864 003c 1360     		str	r3, [r2]
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 174


 3865              		.loc 1 2984 2 discriminator 2 view .LVU1057
 3866 003e 00EB8000 		add	r0, r0, r0, lsl #2
 3867 0042 2946     		mov	r1, r5
 3868 0044 0E4B     		ldr	r3, .L291+8
 3869 0046 03EB8000 		add	r0, r3, r0, lsl #2
 3870 004a FFF7FEFF 		bl	vListInsertEnd
 3871              	.LVL277:
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3872              		.loc 1 2984 41 discriminator 2 view .LVU1058
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3873              		.loc 1 2986 2 discriminator 2 view .LVU1059
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3874              		.loc 1 2986 20 is_stmt 0 discriminator 2 view .LVU1060
 3875 004e E26A     		ldr	r2, [r4, #44]
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3876              		.loc 1 2986 47 discriminator 2 view .LVU1061
 3877 0050 0C4B     		ldr	r3, .L291+12
 3878 0052 1B68     		ldr	r3, [r3]
 3879 0054 DB6A     		ldr	r3, [r3, #44]
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3880              		.loc 1 2986 4 discriminator 2 view .LVU1062
 3881 0056 9A42     		cmp	r2, r3
 3882 0058 0CD9     		bls	.L288
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3883              		.loc 1 2992 3 is_stmt 1 view .LVU1063
 3884              	.LVL278:
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3885              		.loc 1 2996 3 view .LVU1064
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3886              		.loc 1 2996 17 is_stmt 0 view .LVU1065
 3887 005a 0120     		movs	r0, #1
 3888 005c 0A4B     		ldr	r3, .L291+16
 3889 005e 1860     		str	r0, [r3]
 3890 0060 09E0     		b	.L282
 3891              	.LVL279:
 3892              	.L290:
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3893              		.loc 1 2977 2 is_stmt 1 view .LVU1066
 3894              	.LBB155:
 3895              	.LBI155:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3896              		.loc 2 233 30 view .LVU1067
 3897              	.LBB156:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3898              		.loc 2 235 1 view .LVU1068
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3899              		.loc 2 237 2 view .LVU1069
 3900              		.syntax unified
 3901              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3902 0062 4FF05003 			mov r3, #80												
 3903 0066 83F31188 		msr basepri, r3											
 3904 006a BFF36F8F 		isb														
 3905 006e BFF34F8F 		dsb														
 3906              	
 3907              	@ 0 "" 2
 3908              	.LVL280:
 3909              		.thumb
ARM GAS  /tmp/ccubydGq.s 			page 175


 3910              		.syntax unified
 3911              	.L286:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3912              		.loc 2 237 2 is_stmt 0 view .LVU1070
 3913              	.LBE156:
 3914              	.LBE155:
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3915              		.loc 1 2977 2 is_stmt 1 discriminator 2 view .LVU1071
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3916              		.loc 1 2977 2 discriminator 2 view .LVU1072
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3917              		.loc 1 2977 2 discriminator 2 view .LVU1073
 3918 0072 FEE7     		b	.L286
 3919              	.LVL281:
 3920              	.L288:
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3921              		.loc 1 3000 11 is_stmt 0 view .LVU1074
 3922 0074 0020     		movs	r0, #0
 3923              	.LVL282:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3924              		.loc 1 3003 2 is_stmt 1 view .LVU1075
 3925              	.L282:
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3926              		.loc 1 3004 1 is_stmt 0 view .LVU1076
 3927 0076 38BD     		pop	{r3, r4, r5, pc}
 3928              	.LVL283:
 3929              	.L292:
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3930              		.loc 1 3004 1 view .LVU1077
 3931              		.align	2
 3932              	.L291:
 3933 0078 00000000 		.word	.LANCHOR16
 3934 007c 00000000 		.word	.LANCHOR13
 3935 0080 00000000 		.word	.LANCHOR4
 3936 0084 00000000 		.word	.LANCHOR10
 3937 0088 00000000 		.word	.LANCHOR20
 3938              		.cfi_endproc
 3939              	.LFE30:
 3941              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3942              		.align	1
 3943              		.global	vTaskSetTimeOutState
 3944              		.syntax unified
 3945              		.thumb
 3946              		.thumb_func
 3947              		.fpu softvfp
 3949              	vTaskSetTimeOutState:
 3950              	.LVL284:
 3951              	.LFB31:
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3952              		.loc 1 3008 1 is_stmt 1 view -0
 3953              		.cfi_startproc
 3954              		@ args = 0, pretend = 0, frame = 0
 3955              		@ frame_needed = 0, uses_anonymous_args = 0
 3956              		@ link register save eliminated.
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3957              		.loc 1 3009 2 view .LVU1079
 3958 0000 30B1     		cbz	r0, .L296
ARM GAS  /tmp/ccubydGq.s 			page 176


3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3959              		.loc 1 3009 27 discriminator 2 view .LVU1080
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3960              		.loc 1 3010 2 discriminator 2 view .LVU1081
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3961              		.loc 1 3010 28 is_stmt 0 discriminator 2 view .LVU1082
 3962 0002 084A     		ldr	r2, .L297
 3963 0004 1268     		ldr	r2, [r2]
 3964 0006 0260     		str	r2, [r0]
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3965              		.loc 1 3011 2 is_stmt 1 discriminator 2 view .LVU1083
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3966              		.loc 1 3011 29 is_stmt 0 discriminator 2 view .LVU1084
 3967 0008 074A     		ldr	r2, .L297+4
 3968 000a 1268     		ldr	r2, [r2]
 3969 000c 4260     		str	r2, [r0, #4]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3970              		.loc 1 3012 1 discriminator 2 view .LVU1085
 3971 000e 7047     		bx	lr
 3972              	.L296:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3973              		.loc 1 3009 2 is_stmt 1 view .LVU1086
 3974              	.LBB157:
 3975              	.LBI157:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3976              		.loc 2 233 30 view .LVU1087
 3977              	.LBB158:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3978              		.loc 2 235 1 view .LVU1088
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3979              		.loc 2 237 2 view .LVU1089
 3980              		.syntax unified
 3981              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3982 0010 4FF05003 			mov r3, #80												
 3983 0014 83F31188 		msr basepri, r3											
 3984 0018 BFF36F8F 		isb														
 3985 001c BFF34F8F 		dsb														
 3986              	
 3987              	@ 0 "" 2
 3988              	.LVL285:
 3989              		.thumb
 3990              		.syntax unified
 3991              	.L295:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3992              		.loc 2 237 2 is_stmt 0 view .LVU1090
 3993              	.LBE158:
 3994              	.LBE157:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3995              		.loc 1 3009 2 is_stmt 1 discriminator 1 view .LVU1091
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3996              		.loc 1 3009 2 discriminator 1 view .LVU1092
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3997              		.loc 1 3009 2 discriminator 1 view .LVU1093
 3998 0020 FEE7     		b	.L295
 3999              	.L298:
 4000 0022 00BF     		.align	2
 4001              	.L297:
ARM GAS  /tmp/ccubydGq.s 			page 177


 4002 0024 00000000 		.word	.LANCHOR18
 4003 0028 00000000 		.word	.LANCHOR14
 4004              		.cfi_endproc
 4005              	.LFE31:
 4007              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4008              		.align	1
 4009              		.global	xTaskCheckForTimeOut
 4010              		.syntax unified
 4011              		.thumb
 4012              		.thumb_func
 4013              		.fpu softvfp
 4015              	xTaskCheckForTimeOut:
 4016              	.LVL286:
 4017              	.LFB32:
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4018              		.loc 1 3016 1 view -0
 4019              		.cfi_startproc
 4020              		@ args = 0, pretend = 0, frame = 0
 4021              		@ frame_needed = 0, uses_anonymous_args = 0
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4022              		.loc 1 3016 1 is_stmt 0 view .LVU1095
 4023 0000 38B5     		push	{r3, r4, r5, lr}
 4024              	.LCFI36:
 4025              		.cfi_def_cfa_offset 16
 4026              		.cfi_offset 3, -16
 4027              		.cfi_offset 4, -12
 4028              		.cfi_offset 5, -8
 4029              		.cfi_offset 14, -4
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4030              		.loc 1 3017 1 is_stmt 1 view .LVU1096
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4031              		.loc 1 3019 2 view .LVU1097
 4032 0002 C0B1     		cbz	r0, .L310
 4033 0004 0C46     		mov	r4, r1
 4034 0006 0546     		mov	r5, r0
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4035              		.loc 1 3019 27 discriminator 2 view .LVU1098
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4036              		.loc 1 3020 2 discriminator 2 view .LVU1099
 4037 0008 F1B1     		cbz	r1, .L311
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4038              		.loc 1 3020 31 discriminator 2 view .LVU1100
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4039              		.loc 1 3022 2 discriminator 2 view .LVU1101
 4040 000a FFF7FEFF 		bl	vPortEnterCritical
 4041              	.LVL287:
 4042              	.LBB159:
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4043              		.loc 1 3025 3 discriminator 2 view .LVU1102
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4044              		.loc 1 3025 20 is_stmt 0 discriminator 2 view .LVU1103
 4045 000e 1A4B     		ldr	r3, .L313
 4046 0010 1968     		ldr	r1, [r3]
 4047              	.LVL288:
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4048              		.loc 1 3039 4 is_stmt 1 discriminator 2 view .LVU1104
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccubydGq.s 			page 178


 4049              		.loc 1 3039 8 is_stmt 0 discriminator 2 view .LVU1105
 4050 0012 2268     		ldr	r2, [r4]
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4051              		.loc 1 3039 6 discriminator 2 view .LVU1106
 4052 0014 B2F1FF3F 		cmp	r2, #-1
 4053 0018 27D0     		beq	.L306
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4054              		.loc 1 3049 3 is_stmt 1 view .LVU1107
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4055              		.loc 1 3049 37 is_stmt 0 view .LVU1108
 4056 001a 2868     		ldr	r0, [r5]
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4057              		.loc 1 3049 25 view .LVU1109
 4058 001c 174B     		ldr	r3, .L313+4
 4059 001e 1B68     		ldr	r3, [r3]
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4060              		.loc 1 3049 5 view .LVU1110
 4061 0020 9842     		cmp	r0, r3
 4062 0022 02D0     		beq	.L305
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4063              		.loc 1 3049 89 discriminator 1 view .LVU1111
 4064 0024 6B68     		ldr	r3, [r5, #4]
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4065              		.loc 1 3049 56 discriminator 1 view .LVU1112
 4066 0026 8B42     		cmp	r3, r1
 4067 0028 24D9     		bls	.L307
 4068              	.L305:
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4069              		.loc 1 3058 8 is_stmt 1 view .LVU1113
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4070              		.loc 1 3058 58 is_stmt 0 view .LVU1114
 4071 002a 6B68     		ldr	r3, [r5, #4]
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4072              		.loc 1 3058 14 view .LVU1115
 4073 002c C81A     		subs	r0, r1, r3
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4074              		.loc 1 3058 10 view .LVU1116
 4075 002e 8242     		cmp	r2, r0
 4076 0030 13D8     		bhi	.L312
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4077              		.loc 1 3067 12 view .LVU1117
 4078 0032 0124     		movs	r4, #1
 4079              	.LVL289:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4080              		.loc 1 3067 12 view .LVU1118
 4081 0034 1AE0     		b	.L304
 4082              	.LVL290:
 4083              	.L310:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4084              		.loc 1 3067 12 view .LVU1119
 4085              	.LBE159:
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4086              		.loc 1 3019 2 is_stmt 1 view .LVU1120
 4087              	.LBB160:
 4088              	.LBI160:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4089              		.loc 2 233 30 view .LVU1121
ARM GAS  /tmp/ccubydGq.s 			page 179


 4090              	.LBB161:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4091              		.loc 2 235 1 view .LVU1122
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4092              		.loc 2 237 2 view .LVU1123
 4093              		.syntax unified
 4094              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4095 0036 4FF05003 			mov r3, #80												
 4096 003a 83F31188 		msr basepri, r3											
 4097 003e BFF36F8F 		isb														
 4098 0042 BFF34F8F 		dsb														
 4099              	
 4100              	@ 0 "" 2
 4101              	.LVL291:
 4102              		.thumb
 4103              		.syntax unified
 4104              	.L301:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4105              		.loc 2 237 2 is_stmt 0 view .LVU1124
 4106              	.LBE161:
 4107              	.LBE160:
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4108              		.loc 1 3019 2 is_stmt 1 discriminator 1 view .LVU1125
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4109              		.loc 1 3019 2 discriminator 1 view .LVU1126
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4110              		.loc 1 3019 2 discriminator 1 view .LVU1127
 4111 0046 FEE7     		b	.L301
 4112              	.L311:
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4113              		.loc 1 3020 2 view .LVU1128
 4114              	.LBB162:
 4115              	.LBI162:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4116              		.loc 2 233 30 view .LVU1129
 4117              	.LBB163:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4118              		.loc 2 235 1 view .LVU1130
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4119              		.loc 2 237 2 view .LVU1131
 4120              		.syntax unified
 4121              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4122 0048 4FF05003 			mov r3, #80												
 4123 004c 83F31188 		msr basepri, r3											
 4124 0050 BFF36F8F 		isb														
 4125 0054 BFF34F8F 		dsb														
 4126              	
 4127              	@ 0 "" 2
 4128              	.LVL292:
 4129              		.thumb
 4130              		.syntax unified
 4131              	.L303:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4132              		.loc 2 237 2 is_stmt 0 view .LVU1132
 4133              	.LBE163:
 4134              	.LBE162:
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 180


 4135              		.loc 1 3020 2 is_stmt 1 discriminator 2 view .LVU1133
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4136              		.loc 1 3020 2 discriminator 2 view .LVU1134
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4137              		.loc 1 3020 2 discriminator 2 view .LVU1135
 4138 0058 FEE7     		b	.L303
 4139              	.LVL293:
 4140              	.L312:
 4141              	.LBB164:
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 4142              		.loc 1 3061 4 view .LVU1136
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 4143              		.loc 1 3061 19 is_stmt 0 view .LVU1137
 4144 005a 5B1A     		subs	r3, r3, r1
 4145 005c 1344     		add	r3, r3, r2
 4146 005e 2360     		str	r3, [r4]
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4147              		.loc 1 3062 4 is_stmt 1 view .LVU1138
 4148 0060 2846     		mov	r0, r5
 4149 0062 FFF7FEFF 		bl	vTaskSetTimeOutState
 4150              	.LVL294:
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4151              		.loc 1 3063 4 view .LVU1139
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4152              		.loc 1 3063 12 is_stmt 0 view .LVU1140
 4153 0066 0024     		movs	r4, #0
 4154              	.LVL295:
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4155              		.loc 1 3063 12 view .LVU1141
 4156 0068 00E0     		b	.L304
 4157              	.LVL296:
 4158              	.L306:
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4159              		.loc 1 3044 13 view .LVU1142
 4160 006a 0024     		movs	r4, #0
 4161              	.LVL297:
 4162              	.L304:
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4163              		.loc 1 3044 13 view .LVU1143
 4164              	.LBE164:
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4165              		.loc 1 3070 2 is_stmt 1 view .LVU1144
 4166 006c FFF7FEFF 		bl	vPortExitCritical
 4167              	.LVL298:
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4168              		.loc 1 3072 2 view .LVU1145
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4169              		.loc 1 3073 1 is_stmt 0 view .LVU1146
 4170 0070 2046     		mov	r0, r4
 4171 0072 38BD     		pop	{r3, r4, r5, pc}
 4172              	.LVL299:
 4173              	.L307:
 4174              	.LBB165:
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4175              		.loc 1 3056 12 view .LVU1147
 4176 0074 0124     		movs	r4, #1
 4177              	.LVL300:
ARM GAS  /tmp/ccubydGq.s 			page 181


3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4178              		.loc 1 3056 12 view .LVU1148
 4179 0076 F9E7     		b	.L304
 4180              	.L314:
 4181              		.align	2
 4182              	.L313:
 4183 0078 00000000 		.word	.LANCHOR14
 4184 007c 00000000 		.word	.LANCHOR18
 4185              	.LBE165:
 4186              		.cfi_endproc
 4187              	.LFE32:
 4189              		.section	.text.vTaskMissedYield,"ax",%progbits
 4190              		.align	1
 4191              		.global	vTaskMissedYield
 4192              		.syntax unified
 4193              		.thumb
 4194              		.thumb_func
 4195              		.fpu softvfp
 4197              	vTaskMissedYield:
 4198              	.LFB33:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4199              		.loc 1 3077 1 is_stmt 1 view -0
 4200              		.cfi_startproc
 4201              		@ args = 0, pretend = 0, frame = 0
 4202              		@ frame_needed = 0, uses_anonymous_args = 0
 4203              		@ link register save eliminated.
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4204              		.loc 1 3078 2 view .LVU1150
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4205              		.loc 1 3078 16 is_stmt 0 view .LVU1151
 4206 0000 014B     		ldr	r3, .L316
 4207 0002 0122     		movs	r2, #1
 4208 0004 1A60     		str	r2, [r3]
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4209              		.loc 1 3079 1 view .LVU1152
 4210 0006 7047     		bx	lr
 4211              	.L317:
 4212              		.align	2
 4213              	.L316:
 4214 0008 00000000 		.word	.LANCHOR20
 4215              		.cfi_endproc
 4216              	.LFE33:
 4218              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4219              		.align	1
 4220              		.global	xTaskGetCurrentTaskHandle
 4221              		.syntax unified
 4222              		.thumb
 4223              		.thumb_func
 4224              		.fpu softvfp
 4226              	xTaskGetCurrentTaskHandle:
 4227              	.LFB39:
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4228              		.loc 1 3662 2 is_stmt 1 view -0
 4229              		.cfi_startproc
 4230              		@ args = 0, pretend = 0, frame = 0
 4231              		@ frame_needed = 0, uses_anonymous_args = 0
 4232              		@ link register save eliminated.
ARM GAS  /tmp/ccubydGq.s 			page 182


3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4233              		.loc 1 3663 2 view .LVU1154
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4234              		.loc 1 3668 3 view .LVU1155
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4235              		.loc 1 3668 11 is_stmt 0 view .LVU1156
 4236 0000 014B     		ldr	r3, .L319
 4237 0002 1868     		ldr	r0, [r3]
 4238              	.LVL301:
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4239              		.loc 1 3670 3 is_stmt 1 view .LVU1157
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4240              		.loc 1 3671 2 is_stmt 0 view .LVU1158
 4241 0004 7047     		bx	lr
 4242              	.L320:
 4243 0006 00BF     		.align	2
 4244              	.L319:
 4245 0008 00000000 		.word	.LANCHOR10
 4246              		.cfi_endproc
 4247              	.LFE39:
 4249              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4250              		.align	1
 4251              		.global	xTaskGetSchedulerState
 4252              		.syntax unified
 4253              		.thumb
 4254              		.thumb_func
 4255              		.fpu softvfp
 4257              	xTaskGetSchedulerState:
 4258              	.LFB40:
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4259              		.loc 1 3679 2 is_stmt 1 view -0
 4260              		.cfi_startproc
 4261              		@ args = 0, pretend = 0, frame = 0
 4262              		@ frame_needed = 0, uses_anonymous_args = 0
 4263              		@ link register save eliminated.
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4264              		.loc 1 3680 2 view .LVU1160
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4265              		.loc 1 3682 3 view .LVU1161
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4266              		.loc 1 3682 25 is_stmt 0 view .LVU1162
 4267 0000 054B     		ldr	r3, .L326
 4268 0002 1B68     		ldr	r3, [r3]
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4269              		.loc 1 3682 5 view .LVU1163
 4270 0004 33B1     		cbz	r3, .L323
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4271              		.loc 1 3688 4 is_stmt 1 view .LVU1164
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4272              		.loc 1 3688 29 is_stmt 0 view .LVU1165
 4273 0006 054B     		ldr	r3, .L326+4
 4274 0008 1B68     		ldr	r3, [r3]
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4275              		.loc 1 3688 6 view .LVU1166
 4276 000a 0BB1     		cbz	r3, .L325
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4277              		.loc 1 3694 13 view .LVU1167
ARM GAS  /tmp/ccubydGq.s 			page 183


 4278 000c 0020     		movs	r0, #0
 4279              	.LVL302:
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4280              		.loc 1 3698 3 is_stmt 1 view .LVU1168
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4281              		.loc 1 3699 2 is_stmt 0 view .LVU1169
 4282 000e 7047     		bx	lr
 4283              	.LVL303:
 4284              	.L325:
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4285              		.loc 1 3690 13 view .LVU1170
 4286 0010 0220     		movs	r0, #2
 4287 0012 7047     		bx	lr
 4288              	.L323:
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4289              		.loc 1 3684 12 view .LVU1171
 4290 0014 0120     		movs	r0, #1
 4291 0016 7047     		bx	lr
 4292              	.L327:
 4293              		.align	2
 4294              	.L326:
 4295 0018 00000000 		.word	.LANCHOR11
 4296 001c 00000000 		.word	.LANCHOR16
 4297              		.cfi_endproc
 4298              	.LFE40:
 4300              		.section	.text.vTaskPriorityInherit,"ax",%progbits
 4301              		.align	1
 4302              		.global	vTaskPriorityInherit
 4303              		.syntax unified
 4304              		.thumb
 4305              		.thumb_func
 4306              		.fpu softvfp
 4308              	vTaskPriorityInherit:
 4309              	.LVL304:
 4310              	.LFB41:
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4311              		.loc 1 3707 2 is_stmt 1 view -0
 4312              		.cfi_startproc
 4313              		@ args = 0, pretend = 0, frame = 0
 4314              		@ frame_needed = 0, uses_anonymous_args = 0
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4315              		.loc 1 3708 2 view .LVU1173
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4316              		.loc 1 3712 3 view .LVU1174
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4317              		.loc 1 3712 5 is_stmt 0 view .LVU1175
 4318 0000 0028     		cmp	r0, #0
 4319 0002 45D0     		beq	.L335
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4320              		.loc 1 3707 2 view .LVU1176
 4321 0004 38B5     		push	{r3, r4, r5, lr}
 4322              	.LCFI37:
 4323              		.cfi_def_cfa_offset 16
 4324              		.cfi_offset 3, -16
 4325              		.cfi_offset 4, -12
 4326              		.cfi_offset 5, -8
 4327              		.cfi_offset 14, -4
ARM GAS  /tmp/ccubydGq.s 			page 184


 4328 0006 0446     		mov	r4, r0
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4329              		.loc 1 3717 4 is_stmt 1 view .LVU1177
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4330              		.loc 1 3717 13 is_stmt 0 view .LVU1178
 4331 0008 C36A     		ldr	r3, [r0, #44]
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4332              		.loc 1 3717 40 view .LVU1179
 4333 000a 224A     		ldr	r2, .L339
 4334 000c 1268     		ldr	r2, [r2]
 4335 000e D26A     		ldr	r2, [r2, #44]
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4336              		.loc 1 3717 6 view .LVU1180
 4337 0010 9342     		cmp	r3, r2
 4338 0012 14D2     		bcs	.L328
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4339              		.loc 1 3722 5 is_stmt 1 view .LVU1181
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4340              		.loc 1 3722 11 is_stmt 0 view .LVU1182
 4341 0014 8269     		ldr	r2, [r0, #24]
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4342              		.loc 1 3722 7 view .LVU1183
 4343 0016 002A     		cmp	r2, #0
 4344 0018 05DB     		blt	.L330
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4345              		.loc 1 3724 6 is_stmt 1 view .LVU1184
 4346 001a 1E4A     		ldr	r2, .L339
 4347 001c 1268     		ldr	r2, [r2]
 4348 001e D26A     		ldr	r2, [r2, #44]
 4349 0020 C2F10702 		rsb	r2, r2, #7
 4350 0024 8261     		str	r2, [r0, #24]
 4351              	.L330:
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4352              		.loc 1 3728 30 view .LVU1185
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4353              		.loc 1 3733 5 view .LVU1186
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4354              		.loc 1 3733 9 is_stmt 0 view .LVU1187
 4355 0026 6169     		ldr	r1, [r4, #20]
 4356 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4357 002c 1A4A     		ldr	r2, .L339+4
 4358 002e 02EB8303 		add	r3, r2, r3, lsl #2
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4359              		.loc 1 3733 108 view .LVU1188
 4360 0032 9942     		cmp	r1, r3
 4361 0034 04D0     		beq	.L338
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4362              		.loc 1 3751 6 is_stmt 1 view .LVU1189
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4363              		.loc 1 3751 38 is_stmt 0 view .LVU1190
 4364 0036 174B     		ldr	r3, .L339
 4365 0038 1B68     		ldr	r3, [r3]
 4366 003a DB6A     		ldr	r3, [r3, #44]
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4367              		.loc 1 3751 24 view .LVU1191
 4368 003c E362     		str	r3, [r4, #44]
 4369              	.LVL305:
ARM GAS  /tmp/ccubydGq.s 			page 185


 4370              	.L328:
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4371              		.loc 1 3765 2 view .LVU1192
 4372 003e 38BD     		pop	{r3, r4, r5, pc}
 4373              	.LVL306:
 4374              	.L338:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4375              		.loc 1 3735 6 is_stmt 1 view .LVU1193
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4376              		.loc 1 3735 10 is_stmt 0 view .LVU1194
 4377 0040 251D     		adds	r5, r4, #4
 4378 0042 2846     		mov	r0, r5
 4379              	.LVL307:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4380              		.loc 1 3735 10 view .LVU1195
 4381 0044 FFF7FEFF 		bl	uxListRemove
 4382              	.LVL308:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4383              		.loc 1 3735 8 view .LVU1196
 4384 0048 90B1     		cbz	r0, .L332
 4385              	.L333:
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4386              		.loc 1 3741 31 is_stmt 1 view .LVU1197
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4387              		.loc 1 3745 6 view .LVU1198
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4388              		.loc 1 3745 38 is_stmt 0 view .LVU1199
 4389 004a 124B     		ldr	r3, .L339
 4390 004c 1B68     		ldr	r3, [r3]
 4391 004e D86A     		ldr	r0, [r3, #44]
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4392              		.loc 1 3745 24 view .LVU1200
 4393 0050 E062     		str	r0, [r4, #44]
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4394              		.loc 1 3746 6 is_stmt 1 view .LVU1201
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4395              		.loc 1 3746 6 view .LVU1202
 4396 0052 0123     		movs	r3, #1
 4397 0054 8340     		lsls	r3, r3, r0
 4398 0056 114A     		ldr	r2, .L339+8
 4399 0058 1168     		ldr	r1, [r2]
 4400 005a 0B43     		orrs	r3, r3, r1
 4401 005c 1360     		str	r3, [r2]
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4402              		.loc 1 3746 6 view .LVU1203
 4403 005e 00EB8000 		add	r0, r0, r0, lsl #2
 4404 0062 2946     		mov	r1, r5
 4405 0064 0C4B     		ldr	r3, .L339+4
 4406 0066 03EB8000 		add	r0, r3, r0, lsl #2
 4407 006a FFF7FEFF 		bl	vListInsertEnd
 4408              	.LVL309:
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4409              		.loc 1 3746 36 view .LVU1204
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4410              		.loc 1 3763 28 view .LVU1205
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4411              		.loc 1 3765 2 is_stmt 0 view .LVU1206
ARM GAS  /tmp/ccubydGq.s 			page 186


 4412 006e E6E7     		b	.L328
 4413              	.L332:
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4414              		.loc 1 3737 7 is_stmt 1 view .LVU1207
 4415 0070 E36A     		ldr	r3, [r4, #44]
 4416 0072 03EB8301 		add	r1, r3, r3, lsl #2
 4417 0076 084A     		ldr	r2, .L339+4
 4418 0078 52F82120 		ldr	r2, [r2, r1, lsl #2]
 4419 007c 002A     		cmp	r2, #0
 4420 007e E4D1     		bne	.L333
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4421              		.loc 1 3737 7 discriminator 1 view .LVU1208
 4422 0080 0122     		movs	r2, #1
 4423 0082 9A40     		lsls	r2, r2, r3
 4424 0084 0549     		ldr	r1, .L339+8
 4425 0086 0B68     		ldr	r3, [r1]
 4426 0088 23EA0203 		bic	r3, r3, r2
 4427 008c 0B60     		str	r3, [r1]
 4428 008e DCE7     		b	.L333
 4429              	.LVL310:
 4430              	.L335:
 4431              	.LCFI38:
 4432              		.cfi_def_cfa_offset 0
 4433              		.cfi_restore 3
 4434              		.cfi_restore 4
 4435              		.cfi_restore 5
 4436              		.cfi_restore 14
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4437              		.loc 1 3737 7 is_stmt 0 discriminator 1 view .LVU1209
 4438 0090 7047     		bx	lr
 4439              	.L340:
 4440 0092 00BF     		.align	2
 4441              	.L339:
 4442 0094 00000000 		.word	.LANCHOR10
 4443 0098 00000000 		.word	.LANCHOR4
 4444 009c 00000000 		.word	.LANCHOR13
 4445              		.cfi_endproc
 4446              	.LFE41:
 4448              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4449              		.align	1
 4450              		.global	xTaskPriorityDisinherit
 4451              		.syntax unified
 4452              		.thumb
 4453              		.thumb_func
 4454              		.fpu softvfp
 4456              	xTaskPriorityDisinherit:
 4457              	.LVL311:
 4458              	.LFB42:
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4459              		.loc 1 3773 2 is_stmt 1 view -0
 4460              		.cfi_startproc
 4461              		@ args = 0, pretend = 0, frame = 0
 4462              		@ frame_needed = 0, uses_anonymous_args = 0
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4463              		.loc 1 3774 2 view .LVU1211
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4464              		.loc 1 3775 2 view .LVU1212
ARM GAS  /tmp/ccubydGq.s 			page 187


3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4465              		.loc 1 3777 3 view .LVU1213
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4466              		.loc 1 3777 5 is_stmt 0 view .LVU1214
 4467 0000 0028     		cmp	r0, #0
 4468 0002 4CD0     		beq	.L348
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4469              		.loc 1 3773 2 view .LVU1215
 4470 0004 38B5     		push	{r3, r4, r5, lr}
 4471              	.LCFI39:
 4472              		.cfi_def_cfa_offset 16
 4473              		.cfi_offset 3, -16
 4474              		.cfi_offset 4, -12
 4475              		.cfi_offset 5, -8
 4476              		.cfi_offset 14, -4
 4477 0006 0446     		mov	r4, r0
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4478              		.loc 1 3783 4 is_stmt 1 view .LVU1216
 4479 0008 274B     		ldr	r3, .L356
 4480 000a 1B68     		ldr	r3, [r3]
 4481 000c 8342     		cmp	r3, r0
 4482 000e 08D0     		beq	.L343
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4483              		.loc 1 3783 4 view .LVU1217
 4484              	.LBB166:
 4485              	.LBI166:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4486              		.loc 2 233 30 view .LVU1218
 4487              	.LBB167:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4488              		.loc 2 235 1 view .LVU1219
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4489              		.loc 2 237 2 view .LVU1220
 4490              		.syntax unified
 4491              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4492 0010 4FF05003 			mov r3, #80												
 4493 0014 83F31188 		msr basepri, r3											
 4494 0018 BFF36F8F 		isb														
 4495 001c BFF34F8F 		dsb														
 4496              	
 4497              	@ 0 "" 2
 4498              	.LVL312:
 4499              		.thumb
 4500              		.syntax unified
 4501              	.L344:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4502              		.loc 2 237 2 is_stmt 0 view .LVU1221
 4503              	.LBE167:
 4504              	.LBE166:
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4505              		.loc 1 3783 4 is_stmt 1 discriminator 1 view .LVU1222
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4506              		.loc 1 3783 4 discriminator 1 view .LVU1223
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4507              		.loc 1 3783 4 discriminator 1 view .LVU1224
 4508 0020 FEE7     		b	.L344
 4509              	.L343:
ARM GAS  /tmp/ccubydGq.s 			page 188


3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4510              		.loc 1 3783 41 discriminator 2 view .LVU1225
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4511              		.loc 1 3785 4 discriminator 2 view .LVU1226
 4512 0022 836C     		ldr	r3, [r0, #72]
 4513 0024 43B9     		cbnz	r3, .L345
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4514              		.loc 1 3785 4 view .LVU1227
 4515              	.LBB168:
 4516              	.LBI168:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4517              		.loc 2 233 30 view .LVU1228
 4518              	.LBB169:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4519              		.loc 2 235 1 view .LVU1229
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4520              		.loc 2 237 2 view .LVU1230
 4521              		.syntax unified
 4522              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4523 0026 4FF05003 			mov r3, #80												
 4524 002a 83F31188 		msr basepri, r3											
 4525 002e BFF36F8F 		isb														
 4526 0032 BFF34F8F 		dsb														
 4527              	
 4528              	@ 0 "" 2
 4529              	.LVL313:
 4530              		.thumb
 4531              		.syntax unified
 4532              	.L346:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4533              		.loc 2 237 2 is_stmt 0 view .LVU1231
 4534              	.LBE169:
 4535              	.LBE168:
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4536              		.loc 1 3785 4 is_stmt 1 discriminator 2 view .LVU1232
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4537              		.loc 1 3785 4 discriminator 2 view .LVU1233
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4538              		.loc 1 3785 4 discriminator 2 view .LVU1234
 4539 0036 FEE7     		b	.L346
 4540              	.L345:
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4541              		.loc 1 3785 40 discriminator 2 view .LVU1235
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4542              		.loc 1 3786 4 discriminator 2 view .LVU1236
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4543              		.loc 1 3786 28 is_stmt 0 discriminator 2 view .LVU1237
 4544 0038 013B     		subs	r3, r3, #1
 4545 003a 8364     		str	r3, [r0, #72]
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4546              		.loc 1 3790 4 is_stmt 1 discriminator 2 view .LVU1238
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4547              		.loc 1 3790 13 is_stmt 0 discriminator 2 view .LVU1239
 4548 003c C16A     		ldr	r1, [r0, #44]
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4549              		.loc 1 3790 34 discriminator 2 view .LVU1240
 4550 003e 426C     		ldr	r2, [r0, #68]
ARM GAS  /tmp/ccubydGq.s 			page 189


3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4551              		.loc 1 3790 6 discriminator 2 view .LVU1241
 4552 0040 9142     		cmp	r1, r2
 4553 0042 2ED0     		beq	.L349
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4554              		.loc 1 3793 5 is_stmt 1 view .LVU1242
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4555              		.loc 1 3793 7 is_stmt 0 view .LVU1243
 4556 0044 0BB1     		cbz	r3, .L355
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4557              		.loc 1 3775 13 view .LVU1244
 4558 0046 0020     		movs	r0, #0
 4559              	.LVL314:
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4560              		.loc 1 3842 28 is_stmt 1 view .LVU1245
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4561              		.loc 1 3845 3 view .LVU1246
 4562              	.L341:
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4563              		.loc 1 3846 2 is_stmt 0 view .LVU1247
 4564 0048 38BD     		pop	{r3, r4, r5, pc}
 4565              	.LVL315:
 4566              	.L355:
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4567              		.loc 1 3800 6 is_stmt 1 view .LVU1248
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4568              		.loc 1 3800 10 is_stmt 0 view .LVU1249
 4569 004a 051D     		adds	r5, r0, #4
 4570 004c 2846     		mov	r0, r5
 4571              	.LVL316:
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4572              		.loc 1 3800 10 view .LVU1250
 4573 004e FFF7FEFF 		bl	uxListRemove
 4574              	.LVL317:
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4575              		.loc 1 3800 8 view .LVU1251
 4576 0052 70B9     		cbnz	r0, .L347
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4577              		.loc 1 3802 7 is_stmt 1 view .LVU1252
 4578 0054 E26A     		ldr	r2, [r4, #44]
 4579 0056 02EB8201 		add	r1, r2, r2, lsl #2
 4580 005a 144B     		ldr	r3, .L356+4
 4581 005c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4582 0060 3BB9     		cbnz	r3, .L347
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4583              		.loc 1 3802 7 discriminator 1 view .LVU1253
 4584 0062 0123     		movs	r3, #1
 4585 0064 03FA02F2 		lsl	r2, r3, r2
 4586 0068 1149     		ldr	r1, .L356+8
 4587 006a 0B68     		ldr	r3, [r1]
 4588 006c 23EA0203 		bic	r3, r3, r2
 4589 0070 0B60     		str	r3, [r1]
 4590              	.L347:
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4591              		.loc 1 3806 31 view .LVU1254
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4592              		.loc 1 3811 67 view .LVU1255
ARM GAS  /tmp/ccubydGq.s 			page 190


3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4593              		.loc 1 3812 6 view .LVU1256
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4594              		.loc 1 3812 31 is_stmt 0 view .LVU1257
 4595 0072 606C     		ldr	r0, [r4, #68]
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4596              		.loc 1 3812 24 view .LVU1258
 4597 0074 E062     		str	r0, [r4, #44]
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4598              		.loc 1 3817 6 is_stmt 1 view .LVU1259
 4599 0076 C0F10703 		rsb	r3, r0, #7
 4600 007a A361     		str	r3, [r4, #24]
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4601              		.loc 1 3818 6 view .LVU1260
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4602              		.loc 1 3818 6 view .LVU1261
 4603 007c 0124     		movs	r4, #1
 4604              	.LVL318:
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4605              		.loc 1 3818 6 is_stmt 0 view .LVU1262
 4606 007e 04FA00F3 		lsl	r3, r4, r0
 4607 0082 0B4A     		ldr	r2, .L356+8
 4608 0084 1168     		ldr	r1, [r2]
 4609 0086 0B43     		orrs	r3, r3, r1
 4610 0088 1360     		str	r3, [r2]
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4611              		.loc 1 3818 6 is_stmt 1 view .LVU1263
 4612 008a 00EB8000 		add	r0, r0, r0, lsl #2
 4613 008e 2946     		mov	r1, r5
 4614 0090 064B     		ldr	r3, .L356+4
 4615 0092 03EB8000 		add	r0, r3, r0, lsl #2
 4616 0096 FFF7FEFF 		bl	vListInsertEnd
 4617              	.LVL319:
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4618              		.loc 1 3818 36 view .LVU1264
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4619              		.loc 1 3828 6 view .LVU1265
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4620              		.loc 1 3828 14 is_stmt 0 view .LVU1266
 4621 009a 2046     		mov	r0, r4
 4622 009c D4E7     		b	.L341
 4623              	.LVL320:
 4624              	.L348:
 4625              	.LCFI40:
 4626              		.cfi_def_cfa_offset 0
 4627              		.cfi_restore 3
 4628              		.cfi_restore 4
 4629              		.cfi_restore 5
 4630              		.cfi_restore 14
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4631              		.loc 1 3775 13 view .LVU1267
 4632 009e 0020     		movs	r0, #0
 4633              	.LVL321:
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4634              		.loc 1 3846 2 view .LVU1268
 4635 00a0 7047     		bx	lr
 4636              	.LVL322:
ARM GAS  /tmp/ccubydGq.s 			page 191


 4637              	.L349:
 4638              	.LCFI41:
 4639              		.cfi_def_cfa_offset 16
 4640              		.cfi_offset 3, -16
 4641              		.cfi_offset 4, -12
 4642              		.cfi_offset 5, -8
 4643              		.cfi_offset 14, -4
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4644              		.loc 1 3775 13 view .LVU1269
 4645 00a2 0020     		movs	r0, #0
 4646              	.LVL323:
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4647              		.loc 1 3775 13 view .LVU1270
 4648 00a4 D0E7     		b	.L341
 4649              	.L357:
 4650 00a6 00BF     		.align	2
 4651              	.L356:
 4652 00a8 00000000 		.word	.LANCHOR10
 4653 00ac 00000000 		.word	.LANCHOR4
 4654 00b0 00000000 		.word	.LANCHOR13
 4655              		.cfi_endproc
 4656              	.LFE42:
 4658              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4659              		.align	1
 4660              		.global	uxTaskResetEventItemValue
 4661              		.syntax unified
 4662              		.thumb
 4663              		.thumb_func
 4664              		.fpu softvfp
 4666              	uxTaskResetEventItemValue:
 4667              	.LFB43:
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 4668              		.loc 1 4163 1 is_stmt 1 view -0
 4669              		.cfi_startproc
 4670              		@ args = 0, pretend = 0, frame = 0
 4671              		@ frame_needed = 0, uses_anonymous_args = 0
 4672              		@ link register save eliminated.
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4673              		.loc 1 4164 1 view .LVU1272
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4674              		.loc 1 4166 2 view .LVU1273
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4675              		.loc 1 4166 13 is_stmt 0 view .LVU1274
 4676 0000 044A     		ldr	r2, .L359
 4677 0002 1368     		ldr	r3, [r2]
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4678              		.loc 1 4166 11 view .LVU1275
 4679 0004 9869     		ldr	r0, [r3, #24]
 4680              	.LVL324:
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4681              		.loc 1 4170 2 is_stmt 1 view .LVU1276
 4682 0006 1368     		ldr	r3, [r2]
 4683 0008 DB6A     		ldr	r3, [r3, #44]
 4684 000a 1268     		ldr	r2, [r2]
 4685 000c C3F10703 		rsb	r3, r3, #7
 4686 0010 9361     		str	r3, [r2, #24]
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/ccubydGq.s 			page 192


 4687              		.loc 1 4172 2 view .LVU1277
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4688              		.loc 1 4173 1 is_stmt 0 view .LVU1278
 4689 0012 7047     		bx	lr
 4690              	.L360:
 4691              		.align	2
 4692              	.L359:
 4693 0014 00000000 		.word	.LANCHOR10
 4694              		.cfi_endproc
 4695              	.LFE43:
 4697              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4698              		.align	1
 4699              		.global	pvTaskIncrementMutexHeldCount
 4700              		.syntax unified
 4701              		.thumb
 4702              		.thumb_func
 4703              		.fpu softvfp
 4705              	pvTaskIncrementMutexHeldCount:
 4706              	.LFB44:
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 4707              		.loc 1 4179 2 is_stmt 1 view -0
 4708              		.cfi_startproc
 4709              		@ args = 0, pretend = 0, frame = 0
 4710              		@ frame_needed = 0, uses_anonymous_args = 0
 4711              		@ link register save eliminated.
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4712              		.loc 1 4182 3 view .LVU1280
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4713              		.loc 1 4182 20 is_stmt 0 view .LVU1281
 4714 0000 054B     		ldr	r3, .L363
 4715 0002 1B68     		ldr	r3, [r3]
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4716              		.loc 1 4182 5 view .LVU1282
 4717 0004 23B1     		cbz	r3, .L362
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4718              		.loc 1 4184 4 is_stmt 1 view .LVU1283
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4719              		.loc 1 4184 18 is_stmt 0 view .LVU1284
 4720 0006 044B     		ldr	r3, .L363
 4721 0008 1A68     		ldr	r2, [r3]
 4722 000a 936C     		ldr	r3, [r2, #72]
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4723              		.loc 1 4184 35 view .LVU1285
 4724 000c 0133     		adds	r3, r3, #1
 4725 000e 9364     		str	r3, [r2, #72]
 4726              	.L362:
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4727              		.loc 1 4187 3 is_stmt 1 view .LVU1286
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4728              		.loc 1 4187 10 is_stmt 0 view .LVU1287
 4729 0010 014B     		ldr	r3, .L363
 4730 0012 1868     		ldr	r0, [r3]
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4731              		.loc 1 4188 2 view .LVU1288
 4732 0014 7047     		bx	lr
 4733              	.L364:
 4734 0016 00BF     		.align	2
ARM GAS  /tmp/ccubydGq.s 			page 193


 4735              	.L363:
 4736 0018 00000000 		.word	.LANCHOR10
 4737              		.cfi_endproc
 4738              	.LFE44:
 4740              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4741              		.align	1
 4742              		.global	ulTaskNotifyTake
 4743              		.syntax unified
 4744              		.thumb
 4745              		.thumb_func
 4746              		.fpu softvfp
 4748              	ulTaskNotifyTake:
 4749              	.LVL325:
 4750              	.LFB45:
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4751              		.loc 1 4196 2 is_stmt 1 view -0
 4752              		.cfi_startproc
 4753              		@ args = 0, pretend = 0, frame = 0
 4754              		@ frame_needed = 0, uses_anonymous_args = 0
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4755              		.loc 1 4196 2 is_stmt 0 view .LVU1290
 4756 0000 38B5     		push	{r3, r4, r5, lr}
 4757              	.LCFI42:
 4758              		.cfi_def_cfa_offset 16
 4759              		.cfi_offset 3, -16
 4760              		.cfi_offset 4, -12
 4761              		.cfi_offset 5, -8
 4762              		.cfi_offset 14, -4
 4763 0002 0546     		mov	r5, r0
 4764 0004 0C46     		mov	r4, r1
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4765              		.loc 1 4197 2 is_stmt 1 view .LVU1291
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4766              		.loc 1 4199 3 view .LVU1292
 4767 0006 FFF7FEFF 		bl	vPortEnterCritical
 4768              	.LVL326:
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4769              		.loc 1 4202 4 view .LVU1293
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4770              		.loc 1 4202 20 is_stmt 0 view .LVU1294
 4771 000a 194B     		ldr	r3, .L371
 4772 000c 1B68     		ldr	r3, [r3]
 4773 000e DB6C     		ldr	r3, [r3, #76]
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4774              		.loc 1 4202 6 view .LVU1295
 4775 0010 2BB9     		cbnz	r3, .L366
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4776              		.loc 1 4205 5 is_stmt 1 view .LVU1296
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4777              		.loc 1 4205 17 is_stmt 0 view .LVU1297
 4778 0012 174B     		ldr	r3, .L371
 4779 0014 1B68     		ldr	r3, [r3]
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4780              		.loc 1 4205 33 view .LVU1298
 4781 0016 0122     		movs	r2, #1
 4782 0018 83F85020 		strb	r2, [r3, #80]
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccubydGq.s 			page 194


 4783              		.loc 1 4207 5 is_stmt 1 view .LVU1299
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4784              		.loc 1 4207 7 is_stmt 0 view .LVU1300
 4785 001c ACB9     		cbnz	r4, .L370
 4786              	.L366:
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4787              		.loc 1 4225 29 is_stmt 1 view .LVU1301
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4788              		.loc 1 4228 3 view .LVU1302
 4789 001e FFF7FEFF 		bl	vPortExitCritical
 4790              	.LVL327:
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4791              		.loc 1 4230 3 view .LVU1303
 4792 0022 FFF7FEFF 		bl	vPortEnterCritical
 4793              	.LVL328:
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 4794              		.loc 1 4232 27 view .LVU1304
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4795              		.loc 1 4233 4 view .LVU1305
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4796              		.loc 1 4233 27 is_stmt 0 view .LVU1306
 4797 0026 124B     		ldr	r3, .L371
 4798 0028 1B68     		ldr	r3, [r3]
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4799              		.loc 1 4233 13 view .LVU1307
 4800 002a DC6C     		ldr	r4, [r3, #76]
 4801              	.LVL329:
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4802              		.loc 1 4235 4 is_stmt 1 view .LVU1308
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4803              		.loc 1 4235 6 is_stmt 0 view .LVU1309
 4804 002c 24B1     		cbz	r4, .L367
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4805              		.loc 1 4237 5 is_stmt 1 view .LVU1310
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4806              		.loc 1 4237 7 is_stmt 0 view .LVU1311
 4807 002e CDB1     		cbz	r5, .L368
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4808              		.loc 1 4239 6 is_stmt 1 view .LVU1312
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4809              		.loc 1 4239 18 is_stmt 0 view .LVU1313
 4810 0030 0F4B     		ldr	r3, .L371
 4811 0032 1B68     		ldr	r3, [r3]
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4812              		.loc 1 4239 36 view .LVU1314
 4813 0034 0022     		movs	r2, #0
 4814 0036 DA64     		str	r2, [r3, #76]
 4815              	.L367:
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4816              		.loc 1 4248 29 is_stmt 1 view .LVU1315
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4817              		.loc 1 4251 4 view .LVU1316
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4818              		.loc 1 4251 16 is_stmt 0 view .LVU1317
 4819 0038 0D4B     		ldr	r3, .L371
 4820 003a 1B68     		ldr	r3, [r3]
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccubydGq.s 			page 195


 4821              		.loc 1 4251 32 view .LVU1318
 4822 003c 0022     		movs	r2, #0
 4823 003e 83F85020 		strb	r2, [r3, #80]
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4824              		.loc 1 4253 3 is_stmt 1 view .LVU1319
 4825 0042 FFF7FEFF 		bl	vPortExitCritical
 4826              	.LVL330:
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4827              		.loc 1 4255 3 view .LVU1320
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4828              		.loc 1 4256 2 is_stmt 0 view .LVU1321
 4829 0046 2046     		mov	r0, r4
 4830 0048 38BD     		pop	{r3, r4, r5, pc}
 4831              	.LVL331:
 4832              	.L370:
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 4833              		.loc 1 4209 6 is_stmt 1 view .LVU1322
 4834 004a 1146     		mov	r1, r2
 4835 004c 2046     		mov	r0, r4
 4836 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4837              	.LVL332:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4838              		.loc 1 4210 35 view .LVU1323
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4839              		.loc 1 4216 6 view .LVU1324
 4840 0052 084B     		ldr	r3, .L371+4
 4841 0054 4FF08052 		mov	r2, #268435456
 4842 0058 1A60     		str	r2, [r3]
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4843              		.loc 1 4216 6 view .LVU1325
 4844              		.syntax unified
 4845              	@ 4216 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4846 005a BFF34F8F 		dsb
 4847              	@ 0 "" 2
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4848              		.loc 1 4216 6 view .LVU1326
 4849              	@ 4216 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4850 005e BFF36F8F 		isb
 4851              	@ 0 "" 2
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4852              		.loc 1 4216 28 view .LVU1327
 4853              		.thumb
 4854              		.syntax unified
 4855 0062 DCE7     		b	.L366
 4856              	.LVL333:
 4857              	.L368:
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4858              		.loc 1 4243 6 view .LVU1328
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4859              		.loc 1 4243 18 is_stmt 0 view .LVU1329
 4860 0064 024B     		ldr	r3, .L371
 4861 0066 1B68     		ldr	r3, [r3]
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4862              		.loc 1 4243 47 view .LVU1330
 4863 0068 621E     		subs	r2, r4, #1
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4864              		.loc 1 4243 36 view .LVU1331
ARM GAS  /tmp/ccubydGq.s 			page 196


 4865 006a DA64     		str	r2, [r3, #76]
 4866 006c E4E7     		b	.L367
 4867              	.L372:
 4868 006e 00BF     		.align	2
 4869              	.L371:
 4870 0070 00000000 		.word	.LANCHOR10
 4871 0074 04ED00E0 		.word	-536810236
 4872              		.cfi_endproc
 4873              	.LFE45:
 4875              		.section	.text.xTaskNotifyWait,"ax",%progbits
 4876              		.align	1
 4877              		.global	xTaskNotifyWait
 4878              		.syntax unified
 4879              		.thumb
 4880              		.thumb_func
 4881              		.fpu softvfp
 4883              	xTaskNotifyWait:
 4884              	.LVL334:
 4885              	.LFB46:
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4886              		.loc 1 4264 2 is_stmt 1 view -0
 4887              		.cfi_startproc
 4888              		@ args = 0, pretend = 0, frame = 0
 4889              		@ frame_needed = 0, uses_anonymous_args = 0
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4890              		.loc 1 4264 2 is_stmt 0 view .LVU1333
 4891 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4892              	.LCFI43:
 4893              		.cfi_def_cfa_offset 24
 4894              		.cfi_offset 3, -24
 4895              		.cfi_offset 4, -20
 4896              		.cfi_offset 5, -16
 4897              		.cfi_offset 6, -12
 4898              		.cfi_offset 7, -8
 4899              		.cfi_offset 14, -4
 4900 0002 0746     		mov	r7, r0
 4901 0004 0E46     		mov	r6, r1
 4902 0006 1446     		mov	r4, r2
 4903 0008 1D46     		mov	r5, r3
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4904              		.loc 1 4265 2 is_stmt 1 view .LVU1334
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4905              		.loc 1 4267 3 view .LVU1335
 4906 000a FFF7FEFF 		bl	vPortEnterCritical
 4907              	.LVL335:
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4908              		.loc 1 4270 4 view .LVU1336
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4909              		.loc 1 4270 20 is_stmt 0 view .LVU1337
 4910 000e 204B     		ldr	r3, .L380
 4911 0010 1B68     		ldr	r3, [r3]
 4912 0012 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 4913 0016 D2B2     		uxtb	r2, r2
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4914              		.loc 1 4270 6 view .LVU1338
 4915 0018 022A     		cmp	r2, #2
 4916 001a 0AD0     		beq	.L374
ARM GAS  /tmp/ccubydGq.s 			page 197


4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4917              		.loc 1 4275 5 is_stmt 1 view .LVU1339
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4918              		.loc 1 4275 35 is_stmt 0 view .LVU1340
 4919 001c 1C4B     		ldr	r3, .L380
 4920 001e 1A68     		ldr	r2, [r3]
 4921 0020 D06C     		ldr	r0, [r2, #76]
 4922 0022 20EA0707 		bic	r7, r0, r7
 4923              	.LVL336:
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4924              		.loc 1 4275 35 view .LVU1341
 4925 0026 D764     		str	r7, [r2, #76]
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4926              		.loc 1 4278 5 is_stmt 1 view .LVU1342
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4927              		.loc 1 4278 17 is_stmt 0 view .LVU1343
 4928 0028 1B68     		ldr	r3, [r3]
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4929              		.loc 1 4278 33 view .LVU1344
 4930 002a 0122     		movs	r2, #1
 4931 002c 83F85020 		strb	r2, [r3, #80]
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4932              		.loc 1 4280 5 is_stmt 1 view .LVU1345
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4933              		.loc 1 4280 7 is_stmt 0 view .LVU1346
 4934 0030 FDB9     		cbnz	r5, .L379
 4935              	.L374:
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4936              		.loc 1 4298 29 is_stmt 1 view .LVU1347
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4937              		.loc 1 4301 3 view .LVU1348
 4938 0032 FFF7FEFF 		bl	vPortExitCritical
 4939              	.LVL337:
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4940              		.loc 1 4303 3 view .LVU1349
 4941 0036 FFF7FEFF 		bl	vPortEnterCritical
 4942              	.LVL338:
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4943              		.loc 1 4305 27 view .LVU1350
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4944              		.loc 1 4307 4 view .LVU1351
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4945              		.loc 1 4307 6 is_stmt 0 view .LVU1352
 4946 003a 1CB1     		cbz	r4, .L375
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4947              		.loc 1 4311 5 is_stmt 1 view .LVU1353
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4948              		.loc 1 4311 41 is_stmt 0 view .LVU1354
 4949 003c 144B     		ldr	r3, .L380
 4950 003e 1B68     		ldr	r3, [r3]
 4951 0040 DB6C     		ldr	r3, [r3, #76]
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4952              		.loc 1 4311 27 view .LVU1355
 4953 0042 2360     		str	r3, [r4]
 4954              	.L375:
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4955              		.loc 1 4318 4 is_stmt 1 view .LVU1356
ARM GAS  /tmp/ccubydGq.s 			page 198


4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4956              		.loc 1 4318 20 is_stmt 0 view .LVU1357
 4957 0044 124B     		ldr	r3, .L380
 4958 0046 1B68     		ldr	r3, [r3]
 4959 0048 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4960 004c DBB2     		uxtb	r3, r3
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4961              		.loc 1 4318 6 view .LVU1358
 4962 004e 012B     		cmp	r3, #1
 4963 0050 1CD0     		beq	.L377
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4964              		.loc 1 4327 5 is_stmt 1 view .LVU1359
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4965              		.loc 1 4327 35 is_stmt 0 view .LVU1360
 4966 0052 0F4B     		ldr	r3, .L380
 4967 0054 1B68     		ldr	r3, [r3]
 4968 0056 D96C     		ldr	r1, [r3, #76]
 4969 0058 21EA0606 		bic	r6, r1, r6
 4970              	.LVL339:
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4971              		.loc 1 4327 35 view .LVU1361
 4972 005c DE64     		str	r6, [r3, #76]
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4973              		.loc 1 4328 5 is_stmt 1 view .LVU1362
 4974              	.LVL340:
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4975              		.loc 1 4328 13 is_stmt 0 view .LVU1363
 4976 005e 0124     		movs	r4, #1
 4977              	.LVL341:
 4978              	.L376:
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4979              		.loc 1 4331 4 is_stmt 1 view .LVU1364
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4980              		.loc 1 4331 16 is_stmt 0 view .LVU1365
 4981 0060 0B4B     		ldr	r3, .L380
 4982 0062 1B68     		ldr	r3, [r3]
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4983              		.loc 1 4331 32 view .LVU1366
 4984 0064 0022     		movs	r2, #0
 4985 0066 83F85020 		strb	r2, [r3, #80]
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4986              		.loc 1 4333 3 is_stmt 1 view .LVU1367
 4987 006a FFF7FEFF 		bl	vPortExitCritical
 4988              	.LVL342:
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4989              		.loc 1 4335 3 view .LVU1368
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4990              		.loc 1 4336 2 is_stmt 0 view .LVU1369
 4991 006e 2046     		mov	r0, r4
 4992 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4993              	.LVL343:
 4994              	.L379:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4995              		.loc 1 4282 6 is_stmt 1 view .LVU1370
 4996 0072 1146     		mov	r1, r2
 4997 0074 2846     		mov	r0, r5
 4998 0076 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
ARM GAS  /tmp/ccubydGq.s 			page 199


 4999              	.LVL344:
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5000              		.loc 1 4283 35 view .LVU1371
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5001              		.loc 1 4289 6 view .LVU1372
 5002 007a 064B     		ldr	r3, .L380+4
 5003 007c 4FF08052 		mov	r2, #268435456
 5004 0080 1A60     		str	r2, [r3]
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5005              		.loc 1 4289 6 view .LVU1373
 5006              		.syntax unified
 5007              	@ 4289 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5008 0082 BFF34F8F 		dsb
 5009              	@ 0 "" 2
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5010              		.loc 1 4289 6 view .LVU1374
 5011              	@ 4289 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5012 0086 BFF36F8F 		isb
 5013              	@ 0 "" 2
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5014              		.loc 1 4289 28 view .LVU1375
 5015              		.thumb
 5016              		.syntax unified
 5017 008a D2E7     		b	.L374
 5018              	.L377:
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5019              		.loc 1 4321 13 is_stmt 0 view .LVU1376
 5020 008c 0024     		movs	r4, #0
 5021              	.LVL345:
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5022              		.loc 1 4321 13 view .LVU1377
 5023 008e E7E7     		b	.L376
 5024              	.L381:
 5025              		.align	2
 5026              	.L380:
 5027 0090 00000000 		.word	.LANCHOR10
 5028 0094 04ED00E0 		.word	-536810236
 5029              		.cfi_endproc
 5030              	.LFE46:
 5032              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5033              		.align	1
 5034              		.global	xTaskGenericNotify
 5035              		.syntax unified
 5036              		.thumb
 5037              		.thumb_func
 5038              		.fpu softvfp
 5040              	xTaskGenericNotify:
 5041              	.LVL346:
 5042              	.LFB47:
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5043              		.loc 1 4344 2 is_stmt 1 view -0
 5044              		.cfi_startproc
 5045              		@ args = 0, pretend = 0, frame = 0
 5046              		@ frame_needed = 0, uses_anonymous_args = 0
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5047              		.loc 1 4344 2 is_stmt 0 view .LVU1379
 5048 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccubydGq.s 			page 200


 5049              	.LCFI44:
 5050              		.cfi_def_cfa_offset 24
 5051              		.cfi_offset 3, -24
 5052              		.cfi_offset 4, -20
 5053              		.cfi_offset 5, -16
 5054              		.cfi_offset 6, -12
 5055              		.cfi_offset 7, -8
 5056              		.cfi_offset 14, -4
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5057              		.loc 1 4345 2 is_stmt 1 view .LVU1380
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5058              		.loc 1 4346 2 view .LVU1381
 5059              	.LVL347:
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5060              		.loc 1 4347 2 view .LVU1382
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5061              		.loc 1 4349 3 view .LVU1383
 5062 0002 A8B1     		cbz	r0, .L398
 5063 0004 0E46     		mov	r6, r1
 5064 0006 1546     		mov	r5, r2
 5065 0008 1F46     		mov	r7, r3
 5066 000a 0446     		mov	r4, r0
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5067              		.loc 1 4349 32 discriminator 2 view .LVU1384
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5068              		.loc 1 4350 3 discriminator 2 view .LVU1385
 5069              	.LVL348:
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5070              		.loc 1 4352 3 discriminator 2 view .LVU1386
 5071 000c FFF7FEFF 		bl	vPortEnterCritical
 5072              	.LVL349:
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5073              		.loc 1 4354 4 discriminator 2 view .LVU1387
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5074              		.loc 1 4354 6 is_stmt 0 discriminator 2 view .LVU1388
 5075 0010 0FB1     		cbz	r7, .L385
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5076              		.loc 1 4356 5 is_stmt 1 view .LVU1389
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5077              		.loc 1 4356 42 is_stmt 0 view .LVU1390
 5078 0012 E36C     		ldr	r3, [r4, #76]
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5079              		.loc 1 4356 35 view .LVU1391
 5080 0014 3B60     		str	r3, [r7]
 5081              	.L385:
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5082              		.loc 1 4359 4 is_stmt 1 view .LVU1392
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5083              		.loc 1 4359 26 is_stmt 0 view .LVU1393
 5084 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5085 001a DBB2     		uxtb	r3, r3
 5086              	.LVL350:
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5087              		.loc 1 4361 4 is_stmt 1 view .LVU1394
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5088              		.loc 1 4361 25 is_stmt 0 view .LVU1395
 5089 001c 0222     		movs	r2, #2
ARM GAS  /tmp/ccubydGq.s 			page 201


 5090 001e 84F85020 		strb	r2, [r4, #80]
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5091              		.loc 1 4363 4 is_stmt 1 view .LVU1396
 5092 0022 6A1E     		subs	r2, r5, #1
 5093 0024 032A     		cmp	r2, #3
 5094 0026 23D8     		bhi	.L395
 5095 0028 DFE802F0 		tbb	[pc, r2]
 5096              	.L388:
 5097 002c 0B       		.byte	(.L391-.L388)/2
 5098 002d 15       		.byte	(.L390-.L388)/2
 5099 002e 1A       		.byte	(.L389-.L388)/2
 5100 002f 1D       		.byte	(.L387-.L388)/2
 5101              	.LVL351:
 5102              		.p2align 1
 5103              	.L398:
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5104              		.loc 1 4349 3 view .LVU1397
 5105              	.LBB170:
 5106              	.LBI170:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5107              		.loc 2 233 30 view .LVU1398
 5108              	.LBB171:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5109              		.loc 2 235 1 view .LVU1399
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5110              		.loc 2 237 2 view .LVU1400
 5111              		.syntax unified
 5112              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5113 0030 4FF05003 			mov r3, #80												
 5114 0034 83F31188 		msr basepri, r3											
 5115 0038 BFF36F8F 		isb														
 5116 003c BFF34F8F 		dsb														
 5117              	
 5118              	@ 0 "" 2
 5119              	.LVL352:
 5120              		.thumb
 5121              		.syntax unified
 5122              	.L384:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5123              		.loc 2 237 2 is_stmt 0 view .LVU1401
 5124              	.LBE171:
 5125              	.LBE170:
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5126              		.loc 1 4349 3 is_stmt 1 discriminator 1 view .LVU1402
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5127              		.loc 1 4349 3 discriminator 1 view .LVU1403
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5128              		.loc 1 4349 3 discriminator 1 view .LVU1404
 5129 0040 FEE7     		b	.L384
 5130              	.LVL353:
 5131              	.L391:
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5132              		.loc 1 4366 6 view .LVU1405
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5133              		.loc 1 4366 29 is_stmt 0 view .LVU1406
 5134 0042 E26C     		ldr	r2, [r4, #76]
 5135 0044 1643     		orrs	r6, r6, r2
ARM GAS  /tmp/ccubydGq.s 			page 202


 5136              	.LVL354:
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5137              		.loc 1 4366 29 view .LVU1407
 5138 0046 E664     		str	r6, [r4, #76]
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5139              		.loc 1 4367 6 is_stmt 1 view .LVU1408
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5140              		.loc 1 4346 13 is_stmt 0 view .LVU1409
 5141 0048 0125     		movs	r5, #1
 5142              	.L386:
 5143              	.LVL355:
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5144              		.loc 1 4395 22 is_stmt 1 view .LVU1410
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5145              		.loc 1 4399 4 view .LVU1411
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5146              		.loc 1 4399 6 is_stmt 0 view .LVU1412
 5147 004a 012B     		cmp	r3, #1
 5148 004c 14D0     		beq	.L399
 5149              	.LVL356:
 5150              	.L392:
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5151              		.loc 1 4436 29 is_stmt 1 view .LVU1413
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5152              		.loc 1 4439 3 view .LVU1414
 5153 004e FFF7FEFF 		bl	vPortExitCritical
 5154              	.LVL357:
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5155              		.loc 1 4441 3 view .LVU1415
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5156              		.loc 1 4442 2 is_stmt 0 view .LVU1416
 5157 0052 2846     		mov	r0, r5
 5158 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5159              	.LVL358:
 5160              	.L390:
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5161              		.loc 1 4370 6 is_stmt 1 view .LVU1417
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5162              		.loc 1 4370 13 is_stmt 0 view .LVU1418
 5163 0056 E26C     		ldr	r2, [r4, #76]
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5164              		.loc 1 4370 32 view .LVU1419
 5165 0058 0132     		adds	r2, r2, #1
 5166 005a E264     		str	r2, [r4, #76]
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5167              		.loc 1 4371 6 is_stmt 1 view .LVU1420
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5168              		.loc 1 4346 13 is_stmt 0 view .LVU1421
 5169 005c 0125     		movs	r5, #1
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5170              		.loc 1 4371 6 view .LVU1422
 5171 005e F4E7     		b	.L386
 5172              	.L389:
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5173              		.loc 1 4374 6 is_stmt 1 view .LVU1423
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5174              		.loc 1 4374 29 is_stmt 0 view .LVU1424
ARM GAS  /tmp/ccubydGq.s 			page 203


 5175 0060 E664     		str	r6, [r4, #76]
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5176              		.loc 1 4375 6 is_stmt 1 view .LVU1425
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5177              		.loc 1 4346 13 is_stmt 0 view .LVU1426
 5178 0062 0125     		movs	r5, #1
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5179              		.loc 1 4375 6 view .LVU1427
 5180 0064 F1E7     		b	.L386
 5181              	.L387:
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5182              		.loc 1 4378 6 is_stmt 1 view .LVU1428
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5183              		.loc 1 4378 8 is_stmt 0 view .LVU1429
 5184 0066 022B     		cmp	r3, #2
 5185 0068 04D0     		beq	.L396
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5186              		.loc 1 4380 7 is_stmt 1 view .LVU1430
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5187              		.loc 1 4380 30 is_stmt 0 view .LVU1431
 5188 006a E664     		str	r6, [r4, #76]
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5189              		.loc 1 4346 13 view .LVU1432
 5190 006c 0125     		movs	r5, #1
 5191 006e ECE7     		b	.L386
 5192              	.L395:
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5193              		.loc 1 4361 25 view .LVU1433
 5194 0070 0125     		movs	r5, #1
 5195 0072 EAE7     		b	.L386
 5196              	.L396:
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5197              		.loc 1 4385 15 view .LVU1434
 5198 0074 0025     		movs	r5, #0
 5199 0076 E8E7     		b	.L386
 5200              	.LVL359:
 5201              	.L399:
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5202              		.loc 1 4401 5 is_stmt 1 view .LVU1435
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5203              		.loc 1 4401 14 is_stmt 0 view .LVU1436
 5204 0078 261D     		adds	r6, r4, #4
 5205 007a 3046     		mov	r0, r6
 5206 007c FFF7FEFF 		bl	uxListRemove
 5207              	.LVL360:
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5208              		.loc 1 4402 5 is_stmt 1 view .LVU1437
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5209              		.loc 1 4402 5 view .LVU1438
 5210 0080 E06A     		ldr	r0, [r4, #44]
 5211 0082 0123     		movs	r3, #1
 5212 0084 8340     		lsls	r3, r3, r0
 5213 0086 134A     		ldr	r2, .L400
 5214 0088 1168     		ldr	r1, [r2]
 5215 008a 0B43     		orrs	r3, r3, r1
 5216 008c 1360     		str	r3, [r2]
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccubydGq.s 			page 204


 5217              		.loc 1 4402 5 view .LVU1439
 5218 008e 00EB8000 		add	r0, r0, r0, lsl #2
 5219 0092 3146     		mov	r1, r6
 5220 0094 104B     		ldr	r3, .L400+4
 5221 0096 03EB8000 		add	r0, r3, r0, lsl #2
 5222 009a FFF7FEFF 		bl	vListInsertEnd
 5223              	.LVL361:
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5224              		.loc 1 4402 35 view .LVU1440
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5225              		.loc 1 4405 5 view .LVU1441
 5226 009e A36A     		ldr	r3, [r4, #40]
 5227 00a0 43B1     		cbz	r3, .L393
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5228              		.loc 1 4405 5 view .LVU1442
 5229              	.LBB172:
 5230              	.LBI172:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5231              		.loc 2 233 30 view .LVU1443
 5232              	.LBB173:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5233              		.loc 2 235 1 view .LVU1444
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5234              		.loc 2 237 2 view .LVU1445
 5235              		.syntax unified
 5236              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5237 00a2 4FF05003 			mov r3, #80												
 5238 00a6 83F31188 		msr basepri, r3											
 5239 00aa BFF36F8F 		isb														
 5240 00ae BFF34F8F 		dsb														
 5241              	
 5242              	@ 0 "" 2
 5243              	.LVL362:
 5244              		.thumb
 5245              		.syntax unified
 5246              	.L394:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5247              		.loc 2 237 2 is_stmt 0 view .LVU1446
 5248              	.LBE173:
 5249              	.LBE172:
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5250              		.loc 1 4405 5 is_stmt 1 discriminator 2 view .LVU1447
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5251              		.loc 1 4405 5 discriminator 2 view .LVU1448
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5252              		.loc 1 4405 5 discriminator 2 view .LVU1449
 5253 00b2 FEE7     		b	.L394
 5254              	.L393:
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5255              		.loc 1 4405 82 discriminator 2 view .LVU1450
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5256              		.loc 1 4423 5 discriminator 2 view .LVU1451
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5257              		.loc 1 4423 14 is_stmt 0 discriminator 2 view .LVU1452
 5258 00b4 E26A     		ldr	r2, [r4, #44]
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5259              		.loc 1 4423 41 discriminator 2 view .LVU1453
ARM GAS  /tmp/ccubydGq.s 			page 205


 5260 00b6 094B     		ldr	r3, .L400+8
 5261 00b8 1B68     		ldr	r3, [r3]
 5262 00ba DB6A     		ldr	r3, [r3, #44]
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5263              		.loc 1 4423 7 discriminator 2 view .LVU1454
 5264 00bc 9A42     		cmp	r2, r3
 5265 00be C6D9     		bls	.L392
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5266              		.loc 1 4427 6 is_stmt 1 view .LVU1455
 5267 00c0 074B     		ldr	r3, .L400+12
 5268 00c2 4FF08052 		mov	r2, #268435456
 5269 00c6 1A60     		str	r2, [r3]
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5270              		.loc 1 4427 6 view .LVU1456
 5271              		.syntax unified
 5272              	@ 4427 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5273 00c8 BFF34F8F 		dsb
 5274              	@ 0 "" 2
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5275              		.loc 1 4427 6 view .LVU1457
 5276              	@ 4427 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5277 00cc BFF36F8F 		isb
 5278              	@ 0 "" 2
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5279              		.loc 1 4427 37 view .LVU1458
 5280              		.thumb
 5281              		.syntax unified
 5282 00d0 BDE7     		b	.L392
 5283              	.L401:
 5284 00d2 00BF     		.align	2
 5285              	.L400:
 5286 00d4 00000000 		.word	.LANCHOR13
 5287 00d8 00000000 		.word	.LANCHOR4
 5288 00dc 00000000 		.word	.LANCHOR10
 5289 00e0 04ED00E0 		.word	-536810236
 5290              		.cfi_endproc
 5291              	.LFE47:
 5293              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5294              		.align	1
 5295              		.global	xTaskGenericNotifyFromISR
 5296              		.syntax unified
 5297              		.thumb
 5298              		.thumb_func
 5299              		.fpu softvfp
 5301              	xTaskGenericNotifyFromISR:
 5302              	.LVL363:
 5303              	.LFB48:
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5304              		.loc 1 4450 2 view -0
 5305              		.cfi_startproc
 5306              		@ args = 4, pretend = 0, frame = 0
 5307              		@ frame_needed = 0, uses_anonymous_args = 0
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5308              		.loc 1 4450 2 is_stmt 0 view .LVU1460
 5309 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 5310              	.LCFI45:
 5311              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccubydGq.s 			page 206


 5312              		.cfi_offset 3, -32
 5313              		.cfi_offset 4, -28
 5314              		.cfi_offset 5, -24
 5315              		.cfi_offset 6, -20
 5316              		.cfi_offset 7, -16
 5317              		.cfi_offset 8, -12
 5318              		.cfi_offset 9, -8
 5319              		.cfi_offset 14, -4
 5320 0004 089E     		ldr	r6, [sp, #32]
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5321              		.loc 1 4451 2 is_stmt 1 view .LVU1461
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5322              		.loc 1 4452 2 view .LVU1462
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5323              		.loc 1 4453 2 view .LVU1463
 5324              	.LVL364:
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5325              		.loc 1 4454 2 view .LVU1464
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5326              		.loc 1 4456 3 view .LVU1465
 5327 0006 10B3     		cbz	r0, .L421
 5328 0008 0F46     		mov	r7, r1
 5329 000a 1546     		mov	r5, r2
 5330 000c 9946     		mov	r9, r3
 5331 000e 0446     		mov	r4, r0
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5332              		.loc 1 4456 32 discriminator 2 view .LVU1466
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5333              		.loc 1 4474 3 discriminator 2 view .LVU1467
 5334 0010 FFF7FEFF 		bl	vPortValidateInterruptPriority
 5335              	.LVL365:
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5336              		.loc 1 4476 3 discriminator 2 view .LVU1468
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5337              		.loc 1 4478 3 discriminator 2 view .LVU1469
 5338              	.LBB174:
 5339              	.LBI174:
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5340              		.loc 2 249 34 discriminator 2 view .LVU1470
 5341              	.LBB175:
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5342              		.loc 2 251 1 discriminator 2 view .LVU1471
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5343              		.loc 2 253 2 discriminator 2 view .LVU1472
 5344              		.syntax unified
 5345              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5346 0014 EFF31188 			mrs r8, basepri											
 5347 0018 4FF05003 		mov r3, #80												
 5348 001c 83F31188 		msr basepri, r3											
 5349 0020 BFF36F8F 		isb														
 5350 0024 BFF34F8F 		dsb														
 5351              	
 5352              	@ 0 "" 2
 5353              	.LVL366:
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5354              		.loc 2 265 2 discriminator 2 view .LVU1473
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
ARM GAS  /tmp/ccubydGq.s 			page 207


 5355              		.loc 2 265 2 is_stmt 0 discriminator 2 view .LVU1474
 5356              		.thumb
 5357              		.syntax unified
 5358              	.LBE175:
 5359              	.LBE174:
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5360              		.loc 1 4480 4 is_stmt 1 discriminator 2 view .LVU1475
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5361              		.loc 1 4480 6 is_stmt 0 discriminator 2 view .LVU1476
 5362 0028 B9F1000F 		cmp	r9, #0
 5363 002c 02D0     		beq	.L405
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5364              		.loc 1 4482 5 is_stmt 1 view .LVU1477
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5365              		.loc 1 4482 42 is_stmt 0 view .LVU1478
 5366 002e E36C     		ldr	r3, [r4, #76]
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5367              		.loc 1 4482 35 view .LVU1479
 5368 0030 C9F80030 		str	r3, [r9]
 5369              	.L405:
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5370              		.loc 1 4485 4 is_stmt 1 view .LVU1480
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5371              		.loc 1 4485 26 is_stmt 0 view .LVU1481
 5372 0034 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5373 0038 DBB2     		uxtb	r3, r3
 5374              	.LVL367:
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5375              		.loc 1 4486 4 is_stmt 1 view .LVU1482
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5376              		.loc 1 4486 25 is_stmt 0 view .LVU1483
 5377 003a 0222     		movs	r2, #2
 5378 003c 84F85020 		strb	r2, [r4, #80]
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5379              		.loc 1 4488 4 is_stmt 1 view .LVU1484
 5380 0040 6A1E     		subs	r2, r5, #1
 5381 0042 032A     		cmp	r2, #3
 5382 0044 24D8     		bhi	.L418
 5383 0046 DFE802F0 		tbb	[pc, r2]
 5384              	.L408:
 5385 004a 0B       		.byte	(.L411-.L408)/2
 5386 004b 16       		.byte	(.L410-.L408)/2
 5387 004c 1B       		.byte	(.L409-.L408)/2
 5388 004d 1E       		.byte	(.L407-.L408)/2
 5389              	.LVL368:
 5390              		.p2align 1
 5391              	.L421:
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5392              		.loc 1 4456 3 view .LVU1485
 5393              	.LBB176:
 5394              	.LBI176:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5395              		.loc 2 233 30 view .LVU1486
 5396              	.LBB177:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5397              		.loc 2 235 1 view .LVU1487
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
ARM GAS  /tmp/ccubydGq.s 			page 208


 5398              		.loc 2 237 2 view .LVU1488
 5399              		.syntax unified
 5400              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5401 004e 4FF05003 			mov r3, #80												
 5402 0052 83F31188 		msr basepri, r3											
 5403 0056 BFF36F8F 		isb														
 5404 005a BFF34F8F 		dsb														
 5405              	
 5406              	@ 0 "" 2
 5407              	.LVL369:
 5408              		.thumb
 5409              		.syntax unified
 5410              	.L404:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5411              		.loc 2 237 2 is_stmt 0 view .LVU1489
 5412              	.LBE177:
 5413              	.LBE176:
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5414              		.loc 1 4456 3 is_stmt 1 discriminator 1 view .LVU1490
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5415              		.loc 1 4456 3 discriminator 1 view .LVU1491
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5416              		.loc 1 4456 3 discriminator 1 view .LVU1492
 5417 005e FEE7     		b	.L404
 5418              	.LVL370:
 5419              	.L411:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5420              		.loc 1 4491 6 view .LVU1493
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5421              		.loc 1 4491 29 is_stmt 0 view .LVU1494
 5422 0060 E26C     		ldr	r2, [r4, #76]
 5423 0062 1743     		orrs	r7, r7, r2
 5424              	.LVL371:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5425              		.loc 1 4491 29 view .LVU1495
 5426 0064 E764     		str	r7, [r4, #76]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5427              		.loc 1 4492 6 is_stmt 1 view .LVU1496
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5428              		.loc 1 4453 13 is_stmt 0 view .LVU1497
 5429 0066 0125     		movs	r5, #1
 5430              	.L406:
 5431              	.LVL372:
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5432              		.loc 1 4520 31 is_stmt 1 view .LVU1498
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5433              		.loc 1 4524 4 view .LVU1499
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5434              		.loc 1 4524 6 is_stmt 0 view .LVU1500
 5435 0068 012B     		cmp	r3, #1
 5436 006a 15D0     		beq	.L422
 5437              	.LVL373:
 5438              	.L412:
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5439              		.loc 1 4559 30 is_stmt 1 view .LVU1501
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5440              		.loc 1 4563 3 view .LVU1502
ARM GAS  /tmp/ccubydGq.s 			page 209


 5441              	.LBB178:
 5442              	.LBI178:
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5443              		.loc 2 269 30 view .LVU1503
 5444              	.LBB179:
 5445              		.loc 2 271 2 view .LVU1504
 5446              		.syntax unified
 5447              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5448 006c 88F31188 			msr basepri, r8	
 5449              	@ 0 "" 2
 5450              	.LVL374:
 5451              		.loc 2 271 2 is_stmt 0 view .LVU1505
 5452              		.thumb
 5453              		.syntax unified
 5454              	.LBE179:
 5455              	.LBE178:
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5456              		.loc 1 4565 3 is_stmt 1 view .LVU1506
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5457              		.loc 1 4566 2 is_stmt 0 view .LVU1507
 5458 0070 2846     		mov	r0, r5
 5459 0072 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5460              	.LVL375:
 5461              	.L410:
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5462              		.loc 1 4495 6 is_stmt 1 view .LVU1508
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5463              		.loc 1 4495 13 is_stmt 0 view .LVU1509
 5464 0076 E26C     		ldr	r2, [r4, #76]
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5465              		.loc 1 4495 32 view .LVU1510
 5466 0078 0132     		adds	r2, r2, #1
 5467 007a E264     		str	r2, [r4, #76]
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5468              		.loc 1 4496 6 is_stmt 1 view .LVU1511
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5469              		.loc 1 4453 13 is_stmt 0 view .LVU1512
 5470 007c 0125     		movs	r5, #1
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5471              		.loc 1 4496 6 view .LVU1513
 5472 007e F3E7     		b	.L406
 5473              	.L409:
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5474              		.loc 1 4499 6 is_stmt 1 view .LVU1514
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5475              		.loc 1 4499 29 is_stmt 0 view .LVU1515
 5476 0080 E764     		str	r7, [r4, #76]
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5477              		.loc 1 4500 6 is_stmt 1 view .LVU1516
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5478              		.loc 1 4453 13 is_stmt 0 view .LVU1517
 5479 0082 0125     		movs	r5, #1
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5480              		.loc 1 4500 6 view .LVU1518
 5481 0084 F0E7     		b	.L406
 5482              	.L407:
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccubydGq.s 			page 210


 5483              		.loc 1 4503 6 is_stmt 1 view .LVU1519
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5484              		.loc 1 4503 8 is_stmt 0 view .LVU1520
 5485 0086 022B     		cmp	r3, #2
 5486 0088 04D0     		beq	.L419
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5487              		.loc 1 4505 7 is_stmt 1 view .LVU1521
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5488              		.loc 1 4505 30 is_stmt 0 view .LVU1522
 5489 008a E764     		str	r7, [r4, #76]
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5490              		.loc 1 4453 13 view .LVU1523
 5491 008c 0125     		movs	r5, #1
 5492 008e EBE7     		b	.L406
 5493              	.L418:
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5494              		.loc 1 4486 25 view .LVU1524
 5495 0090 0125     		movs	r5, #1
 5496 0092 E9E7     		b	.L406
 5497              	.L419:
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5498              		.loc 1 4510 15 view .LVU1525
 5499 0094 0025     		movs	r5, #0
 5500 0096 E7E7     		b	.L406
 5501              	.LVL376:
 5502              	.L422:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5503              		.loc 1 4527 5 is_stmt 1 view .LVU1526
 5504 0098 A36A     		ldr	r3, [r4, #40]
 5505              	.LVL377:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5506              		.loc 1 4527 5 is_stmt 0 view .LVU1527
 5507 009a 43B1     		cbz	r3, .L413
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5508              		.loc 1 4527 5 is_stmt 1 view .LVU1528
 5509              	.LBB180:
 5510              	.LBI180:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5511              		.loc 2 233 30 view .LVU1529
 5512              	.LBB181:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5513              		.loc 2 235 1 view .LVU1530
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5514              		.loc 2 237 2 view .LVU1531
 5515              		.syntax unified
 5516              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5517 009c 4FF05003 			mov r3, #80												
 5518 00a0 83F31188 		msr basepri, r3											
 5519 00a4 BFF36F8F 		isb														
 5520 00a8 BFF34F8F 		dsb														
 5521              	
 5522              	@ 0 "" 2
 5523              	.LVL378:
 5524              		.thumb
 5525              		.syntax unified
 5526              	.L414:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
ARM GAS  /tmp/ccubydGq.s 			page 211


 5527              		.loc 2 237 2 is_stmt 0 view .LVU1532
 5528              	.LBE181:
 5529              	.LBE180:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5530              		.loc 1 4527 5 is_stmt 1 discriminator 2 view .LVU1533
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5531              		.loc 1 4527 5 discriminator 2 view .LVU1534
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5532              		.loc 1 4527 5 discriminator 2 view .LVU1535
 5533 00ac FEE7     		b	.L414
 5534              	.L413:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5535              		.loc 1 4527 82 discriminator 2 view .LVU1536
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5536              		.loc 1 4529 5 discriminator 2 view .LVU1537
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5537              		.loc 1 4529 30 is_stmt 0 discriminator 2 view .LVU1538
 5538 00ae 154B     		ldr	r3, .L423
 5539 00b0 1B68     		ldr	r3, [r3]
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5540              		.loc 1 4529 7 discriminator 2 view .LVU1539
 5541 00b2 E3B9     		cbnz	r3, .L415
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5542              		.loc 1 4531 6 is_stmt 1 view .LVU1540
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5543              		.loc 1 4531 15 is_stmt 0 view .LVU1541
 5544 00b4 271D     		adds	r7, r4, #4
 5545 00b6 3846     		mov	r0, r7
 5546 00b8 FFF7FEFF 		bl	uxListRemove
 5547              	.LVL379:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5548              		.loc 1 4532 6 is_stmt 1 view .LVU1542
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5549              		.loc 1 4532 6 view .LVU1543
 5550 00bc E06A     		ldr	r0, [r4, #44]
 5551 00be 0123     		movs	r3, #1
 5552 00c0 8340     		lsls	r3, r3, r0
 5553 00c2 114A     		ldr	r2, .L423+4
 5554 00c4 1168     		ldr	r1, [r2]
 5555 00c6 0B43     		orrs	r3, r3, r1
 5556 00c8 1360     		str	r3, [r2]
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5557              		.loc 1 4532 6 view .LVU1544
 5558 00ca 00EB8000 		add	r0, r0, r0, lsl #2
 5559 00ce 3946     		mov	r1, r7
 5560 00d0 0E4B     		ldr	r3, .L423+8
 5561 00d2 03EB8000 		add	r0, r3, r0, lsl #2
 5562 00d6 FFF7FEFF 		bl	vListInsertEnd
 5563              	.LVL380:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5564              		.loc 1 4532 36 view .LVU1545
 5565              	.L416:
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5566              		.loc 1 4541 5 view .LVU1546
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5567              		.loc 1 4541 14 is_stmt 0 view .LVU1547
 5568 00da E26A     		ldr	r2, [r4, #44]
ARM GAS  /tmp/ccubydGq.s 			page 212


4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5569              		.loc 1 4541 41 view .LVU1548
 5570 00dc 0C4B     		ldr	r3, .L423+12
 5571 00de 1B68     		ldr	r3, [r3]
 5572 00e0 DB6A     		ldr	r3, [r3, #44]
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5573              		.loc 1 4541 7 view .LVU1549
 5574 00e2 9A42     		cmp	r2, r3
 5575 00e4 C2D9     		bls	.L412
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5576              		.loc 1 4545 6 is_stmt 1 view .LVU1550
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5577              		.loc 1 4545 8 is_stmt 0 view .LVU1551
 5578 00e6 46B1     		cbz	r6, .L417
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5579              		.loc 1 4547 7 is_stmt 1 view .LVU1552
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5580              		.loc 1 4547 34 is_stmt 0 view .LVU1553
 5581 00e8 0123     		movs	r3, #1
 5582 00ea 3360     		str	r3, [r6]
 5583 00ec BEE7     		b	.L412
 5584              	.L415:
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5585              		.loc 1 4538 6 is_stmt 1 view .LVU1554
 5586 00ee 04F11801 		add	r1, r4, #24
 5587 00f2 0848     		ldr	r0, .L423+16
 5588 00f4 FFF7FEFF 		bl	vListInsertEnd
 5589              	.LVL381:
 5590 00f8 EFE7     		b	.L416
 5591              	.L417:
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5592              		.loc 1 4554 7 view .LVU1555
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5593              		.loc 1 4554 21 is_stmt 0 view .LVU1556
 5594 00fa 074B     		ldr	r3, .L423+20
 5595 00fc 0122     		movs	r2, #1
 5596 00fe 1A60     		str	r2, [r3]
 5597 0100 B4E7     		b	.L412
 5598              	.L424:
 5599 0102 00BF     		.align	2
 5600              	.L423:
 5601 0104 00000000 		.word	.LANCHOR16
 5602 0108 00000000 		.word	.LANCHOR13
 5603 010c 00000000 		.word	.LANCHOR4
 5604 0110 00000000 		.word	.LANCHOR10
 5605 0114 00000000 		.word	.LANCHOR1
 5606 0118 00000000 		.word	.LANCHOR20
 5607              		.cfi_endproc
 5608              	.LFE48:
 5610              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 5611              		.align	1
 5612              		.global	vTaskNotifyGiveFromISR
 5613              		.syntax unified
 5614              		.thumb
 5615              		.thumb_func
 5616              		.fpu softvfp
 5618              	vTaskNotifyGiveFromISR:
ARM GAS  /tmp/ccubydGq.s 			page 213


 5619              	.LVL382:
 5620              	.LFB49:
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5621              		.loc 1 4574 2 is_stmt 1 view -0
 5622              		.cfi_startproc
 5623              		@ args = 0, pretend = 0, frame = 0
 5624              		@ frame_needed = 0, uses_anonymous_args = 0
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5625              		.loc 1 4574 2 is_stmt 0 view .LVU1558
 5626 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5627              	.LCFI46:
 5628              		.cfi_def_cfa_offset 24
 5629              		.cfi_offset 3, -24
 5630              		.cfi_offset 4, -20
 5631              		.cfi_offset 5, -16
 5632              		.cfi_offset 6, -12
 5633              		.cfi_offset 7, -8
 5634              		.cfi_offset 14, -4
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5635              		.loc 1 4575 2 is_stmt 1 view .LVU1559
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5636              		.loc 1 4576 2 view .LVU1560
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5637              		.loc 1 4577 2 view .LVU1561
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5638              		.loc 1 4579 3 view .LVU1562
 5639 0002 D8B1     		cbz	r0, .L435
 5640 0004 0D46     		mov	r5, r1
 5641 0006 0446     		mov	r4, r0
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5642              		.loc 1 4579 32 discriminator 2 view .LVU1563
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5643              		.loc 1 4597 3 discriminator 2 view .LVU1564
 5644 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 5645              	.LVL383:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5646              		.loc 1 4599 3 discriminator 2 view .LVU1565
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5647              		.loc 1 4601 3 discriminator 2 view .LVU1566
 5648              	.LBB182:
 5649              	.LBI182:
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5650              		.loc 2 249 34 discriminator 2 view .LVU1567
 5651              	.LBB183:
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5652              		.loc 2 251 1 discriminator 2 view .LVU1568
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5653              		.loc 2 253 2 discriminator 2 view .LVU1569
 5654              		.syntax unified
 5655              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5656 000c EFF31187 			mrs r7, basepri											
 5657 0010 4FF05003 		mov r3, #80												
 5658 0014 83F31188 		msr basepri, r3											
 5659 0018 BFF36F8F 		isb														
 5660 001c BFF34F8F 		dsb														
 5661              	
 5662              	@ 0 "" 2
ARM GAS  /tmp/ccubydGq.s 			page 214


 5663              	.LVL384:
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5664              		.loc 2 265 2 discriminator 2 view .LVU1570
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5665              		.loc 2 265 2 is_stmt 0 discriminator 2 view .LVU1571
 5666              		.thumb
 5667              		.syntax unified
 5668              	.LBE183:
 5669              	.LBE182:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5670              		.loc 1 4603 4 is_stmt 1 discriminator 2 view .LVU1572
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5671              		.loc 1 4603 26 is_stmt 0 discriminator 2 view .LVU1573
 5672 0020 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5673 0024 DBB2     		uxtb	r3, r3
 5674              	.LVL385:
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5675              		.loc 1 4604 4 is_stmt 1 discriminator 2 view .LVU1574
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5676              		.loc 1 4604 25 is_stmt 0 discriminator 2 view .LVU1575
 5677 0026 0222     		movs	r2, #2
 5678 0028 84F85020 		strb	r2, [r4, #80]
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5679              		.loc 1 4608 4 is_stmt 1 discriminator 2 view .LVU1576
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5680              		.loc 1 4608 11 is_stmt 0 discriminator 2 view .LVU1577
 5681 002c E26C     		ldr	r2, [r4, #76]
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5682              		.loc 1 4608 30 discriminator 2 view .LVU1578
 5683 002e 0132     		adds	r2, r2, #1
 5684 0030 E264     		str	r2, [r4, #76]
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5685              		.loc 1 4610 36 is_stmt 1 discriminator 2 view .LVU1579
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5686              		.loc 1 4614 4 discriminator 2 view .LVU1580
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5687              		.loc 1 4614 6 is_stmt 0 discriminator 2 view .LVU1581
 5688 0032 012B     		cmp	r3, #1
 5689 0034 0BD0     		beq	.L436
 5690              	.LVL386:
 5691              	.L428:
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5692              		.loc 1 4649 30 is_stmt 1 view .LVU1582
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5693              		.loc 1 4653 3 view .LVU1583
 5694              	.LBB184:
 5695              	.LBI184:
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5696              		.loc 2 269 30 view .LVU1584
 5697              	.LBB185:
 5698              		.loc 2 271 2 view .LVU1585
 5699              		.syntax unified
 5700              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5701 0036 87F31188 			msr basepri, r7	
 5702              	@ 0 "" 2
 5703              	.LVL387:
 5704              		.loc 2 271 2 is_stmt 0 view .LVU1586
ARM GAS  /tmp/ccubydGq.s 			page 215


 5705              		.thumb
 5706              		.syntax unified
 5707              	.LBE185:
 5708              	.LBE184:
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5709              		.loc 1 4654 2 view .LVU1587
 5710 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5711              	.LVL388:
 5712              	.L435:
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5713              		.loc 1 4579 3 is_stmt 1 view .LVU1588
 5714              	.LBB186:
 5715              	.LBI186:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5716              		.loc 2 233 30 view .LVU1589
 5717              	.LBB187:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5718              		.loc 2 235 1 view .LVU1590
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5719              		.loc 2 237 2 view .LVU1591
 5720              		.syntax unified
 5721              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5722 003c 4FF05003 			mov r3, #80												
 5723 0040 83F31188 		msr basepri, r3											
 5724 0044 BFF36F8F 		isb														
 5725 0048 BFF34F8F 		dsb														
 5726              	
 5727              	@ 0 "" 2
 5728              	.LVL389:
 5729              		.thumb
 5730              		.syntax unified
 5731              	.L427:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5732              		.loc 2 237 2 is_stmt 0 view .LVU1592
 5733              	.LBE187:
 5734              	.LBE186:
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5735              		.loc 1 4579 3 is_stmt 1 discriminator 1 view .LVU1593
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5736              		.loc 1 4579 3 discriminator 1 view .LVU1594
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5737              		.loc 1 4579 3 discriminator 1 view .LVU1595
 5738 004c FEE7     		b	.L427
 5739              	.LVL390:
 5740              	.L436:
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5741              		.loc 1 4617 5 view .LVU1596
 5742 004e A36A     		ldr	r3, [r4, #40]
 5743              	.LVL391:
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5744              		.loc 1 4617 5 is_stmt 0 view .LVU1597
 5745 0050 43B1     		cbz	r3, .L429
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5746              		.loc 1 4617 5 is_stmt 1 view .LVU1598
 5747              	.LBB188:
 5748              	.LBI188:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
ARM GAS  /tmp/ccubydGq.s 			page 216


 5749              		.loc 2 233 30 view .LVU1599
 5750              	.LBB189:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5751              		.loc 2 235 1 view .LVU1600
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5752              		.loc 2 237 2 view .LVU1601
 5753              		.syntax unified
 5754              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5755 0052 4FF05003 			mov r3, #80												
 5756 0056 83F31188 		msr basepri, r3											
 5757 005a BFF36F8F 		isb														
 5758 005e BFF34F8F 		dsb														
 5759              	
 5760              	@ 0 "" 2
 5761              	.LVL392:
 5762              		.thumb
 5763              		.syntax unified
 5764              	.L430:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5765              		.loc 2 237 2 is_stmt 0 view .LVU1602
 5766              	.LBE189:
 5767              	.LBE188:
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5768              		.loc 1 4617 5 is_stmt 1 discriminator 2 view .LVU1603
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5769              		.loc 1 4617 5 discriminator 2 view .LVU1604
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5770              		.loc 1 4617 5 discriminator 2 view .LVU1605
 5771 0062 FEE7     		b	.L430
 5772              	.L429:
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5773              		.loc 1 4617 82 discriminator 2 view .LVU1606
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5774              		.loc 1 4619 5 discriminator 2 view .LVU1607
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5775              		.loc 1 4619 30 is_stmt 0 discriminator 2 view .LVU1608
 5776 0064 144B     		ldr	r3, .L437
 5777 0066 1B68     		ldr	r3, [r3]
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5778              		.loc 1 4619 7 discriminator 2 view .LVU1609
 5779 0068 E3B9     		cbnz	r3, .L431
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5780              		.loc 1 4621 6 is_stmt 1 view .LVU1610
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5781              		.loc 1 4621 15 is_stmt 0 view .LVU1611
 5782 006a 261D     		adds	r6, r4, #4
 5783 006c 3046     		mov	r0, r6
 5784 006e FFF7FEFF 		bl	uxListRemove
 5785              	.LVL393:
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5786              		.loc 1 4622 6 is_stmt 1 view .LVU1612
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5787              		.loc 1 4622 6 view .LVU1613
 5788 0072 E06A     		ldr	r0, [r4, #44]
 5789 0074 0123     		movs	r3, #1
 5790 0076 8340     		lsls	r3, r3, r0
 5791 0078 104A     		ldr	r2, .L437+4
ARM GAS  /tmp/ccubydGq.s 			page 217


 5792 007a 1168     		ldr	r1, [r2]
 5793 007c 0B43     		orrs	r3, r3, r1
 5794 007e 1360     		str	r3, [r2]
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5795              		.loc 1 4622 6 view .LVU1614
 5796 0080 00EB8000 		add	r0, r0, r0, lsl #2
 5797 0084 3146     		mov	r1, r6
 5798 0086 0E4B     		ldr	r3, .L437+8
 5799 0088 03EB8000 		add	r0, r3, r0, lsl #2
 5800 008c FFF7FEFF 		bl	vListInsertEnd
 5801              	.LVL394:
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5802              		.loc 1 4622 36 view .LVU1615
 5803              	.L432:
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5804              		.loc 1 4631 5 view .LVU1616
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5805              		.loc 1 4631 14 is_stmt 0 view .LVU1617
 5806 0090 E26A     		ldr	r2, [r4, #44]
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5807              		.loc 1 4631 41 view .LVU1618
 5808 0092 0C4B     		ldr	r3, .L437+12
 5809 0094 1B68     		ldr	r3, [r3]
 5810 0096 DB6A     		ldr	r3, [r3, #44]
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5811              		.loc 1 4631 7 view .LVU1619
 5812 0098 9A42     		cmp	r2, r3
 5813 009a CCD9     		bls	.L428
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5814              		.loc 1 4635 6 is_stmt 1 view .LVU1620
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5815              		.loc 1 4635 8 is_stmt 0 view .LVU1621
 5816 009c 45B1     		cbz	r5, .L433
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5817              		.loc 1 4637 7 is_stmt 1 view .LVU1622
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5818              		.loc 1 4637 34 is_stmt 0 view .LVU1623
 5819 009e 0123     		movs	r3, #1
 5820 00a0 2B60     		str	r3, [r5]
 5821 00a2 C8E7     		b	.L428
 5822              	.L431:
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5823              		.loc 1 4628 6 is_stmt 1 view .LVU1624
 5824 00a4 04F11801 		add	r1, r4, #24
 5825 00a8 0748     		ldr	r0, .L437+16
 5826 00aa FFF7FEFF 		bl	vListInsertEnd
 5827              	.LVL395:
 5828 00ae EFE7     		b	.L432
 5829              	.L433:
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5830              		.loc 1 4644 7 view .LVU1625
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5831              		.loc 1 4644 21 is_stmt 0 view .LVU1626
 5832 00b0 064B     		ldr	r3, .L437+20
 5833 00b2 0122     		movs	r2, #1
 5834 00b4 1A60     		str	r2, [r3]
 5835 00b6 BEE7     		b	.L428
ARM GAS  /tmp/ccubydGq.s 			page 218


 5836              	.L438:
 5837              		.align	2
 5838              	.L437:
 5839 00b8 00000000 		.word	.LANCHOR16
 5840 00bc 00000000 		.word	.LANCHOR13
 5841 00c0 00000000 		.word	.LANCHOR4
 5842 00c4 00000000 		.word	.LANCHOR10
 5843 00c8 00000000 		.word	.LANCHOR1
 5844 00cc 00000000 		.word	.LANCHOR20
 5845              		.cfi_endproc
 5846              	.LFE49:
 5848              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 5849              		.align	1
 5850              		.global	xTaskNotifyStateClear
 5851              		.syntax unified
 5852              		.thumb
 5853              		.thumb_func
 5854              		.fpu softvfp
 5856              	xTaskNotifyStateClear:
 5857              	.LVL396:
 5858              	.LFB50:
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5859              		.loc 1 4663 2 is_stmt 1 view -0
 5860              		.cfi_startproc
 5861              		@ args = 0, pretend = 0, frame = 0
 5862              		@ frame_needed = 0, uses_anonymous_args = 0
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5863              		.loc 1 4663 2 is_stmt 0 view .LVU1628
 5864 0000 10B5     		push	{r4, lr}
 5865              	.LCFI47:
 5866              		.cfi_def_cfa_offset 8
 5867              		.cfi_offset 4, -8
 5868              		.cfi_offset 14, -4
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5869              		.loc 1 4664 2 is_stmt 1 view .LVU1629
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5870              		.loc 1 4665 2 view .LVU1630
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5871              		.loc 1 4669 3 view .LVU1631
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5872              		.loc 1 4669 11 is_stmt 0 view .LVU1632
 5873 0002 0446     		mov	r4, r0
 5874 0004 58B1     		cbz	r0, .L444
 5875              	.LVL397:
 5876              	.L440:
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5877              		.loc 1 4671 3 is_stmt 1 discriminator 4 view .LVU1633
 5878 0006 FFF7FEFF 		bl	vPortEnterCritical
 5879              	.LVL398:
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5880              		.loc 1 4673 4 discriminator 4 view .LVU1634
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5881              		.loc 1 4673 13 is_stmt 0 discriminator 4 view .LVU1635
 5882 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5883 000e DBB2     		uxtb	r3, r3
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5884              		.loc 1 4673 6 discriminator 4 view .LVU1636
ARM GAS  /tmp/ccubydGq.s 			page 219


 5885 0010 022B     		cmp	r3, #2
 5886 0012 07D0     		beq	.L445
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5887              		.loc 1 4680 13 view .LVU1637
 5888 0014 0024     		movs	r4, #0
 5889              	.LVL399:
 5890              	.L441:
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5891              		.loc 1 4683 3 is_stmt 1 view .LVU1638
 5892 0016 FFF7FEFF 		bl	vPortExitCritical
 5893              	.LVL400:
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5894              		.loc 1 4685 3 view .LVU1639
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5895              		.loc 1 4686 2 is_stmt 0 view .LVU1640
 5896 001a 2046     		mov	r0, r4
 5897 001c 10BD     		pop	{r4, pc}
 5898              	.LVL401:
 5899              	.L444:
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5900              		.loc 1 4669 11 discriminator 1 view .LVU1641
 5901 001e 044B     		ldr	r3, .L446
 5902 0020 1C68     		ldr	r4, [r3]
 5903              	.LVL402:
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5904              		.loc 1 4669 11 discriminator 1 view .LVU1642
 5905 0022 F0E7     		b	.L440
 5906              	.LVL403:
 5907              	.L445:
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5908              		.loc 1 4675 5 is_stmt 1 view .LVU1643
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5909              		.loc 1 4675 26 is_stmt 0 view .LVU1644
 5910 0024 0023     		movs	r3, #0
 5911 0026 84F85030 		strb	r3, [r4, #80]
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5912              		.loc 1 4676 5 is_stmt 1 view .LVU1645
 5913              	.LVL404:
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5914              		.loc 1 4676 13 is_stmt 0 view .LVU1646
 5915 002a 0124     		movs	r4, #1
 5916              	.LVL405:
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5917              		.loc 1 4676 13 view .LVU1647
 5918 002c F3E7     		b	.L441
 5919              	.L447:
 5920 002e 00BF     		.align	2
 5921              	.L446:
 5922 0030 00000000 		.word	.LANCHOR10
 5923              		.cfi_endproc
 5924              	.LFE50:
 5926              		.global	pxCurrentTCB
 5927              		.section	.bss.pxCurrentTCB,"aw",%nobits
 5928              		.align	2
 5929              		.set	.LANCHOR10,. + 0
 5932              	pxCurrentTCB:
 5933 0000 00000000 		.space	4
ARM GAS  /tmp/ccubydGq.s 			page 220


 5934              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 5935              		.align	2
 5936              		.set	.LANCHOR2,. + 0
 5939              	pxDelayedTaskList:
 5940 0000 00000000 		.space	4
 5941              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 5942              		.align	2
 5943              		.set	.LANCHOR8,. + 0
 5946              	pxOverflowDelayedTaskList:
 5947 0000 00000000 		.space	4
 5948              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 5949              		.align	2
 5950              		.set	.LANCHOR4,. + 0
 5953              	pxReadyTasksLists:
 5954 0000 00000000 		.space	140
 5954      00000000 
 5954      00000000 
 5954      00000000 
 5954      00000000 
 5955              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 5956              		.align	2
 5957              		.set	.LANCHOR9,. + 0
 5960              	uxCurrentNumberOfTasks:
 5961 0000 00000000 		.space	4
 5962              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 5963              		.align	2
 5964              		.set	.LANCHOR15,. + 0
 5967              	uxDeletedTasksWaitingCleanUp:
 5968 0000 00000000 		.space	4
 5969              		.section	.bss.uxPendedTicks,"aw",%nobits
 5970              		.align	2
 5971              		.set	.LANCHOR19,. + 0
 5974              	uxPendedTicks:
 5975 0000 00000000 		.space	4
 5976              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 5977              		.align	2
 5978              		.set	.LANCHOR16,. + 0
 5981              	uxSchedulerSuspended:
 5982 0000 00000000 		.space	4
 5983              		.section	.bss.uxTaskNumber,"aw",%nobits
 5984              		.align	2
 5985              		.set	.LANCHOR12,. + 0
 5988              	uxTaskNumber:
 5989 0000 00000000 		.space	4
 5990              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 5991              		.align	2
 5992              		.set	.LANCHOR13,. + 0
 5995              	uxTopReadyPriority:
 5996 0000 00000000 		.space	4
 5997              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 5998              		.align	2
 5999              		.set	.LANCHOR5,. + 0
 6002              	xDelayedTaskList1:
 6003 0000 00000000 		.space	20
 6003      00000000 
 6003      00000000 
 6003      00000000 
ARM GAS  /tmp/ccubydGq.s 			page 221


 6003      00000000 
 6004              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6005              		.align	2
 6006              		.set	.LANCHOR6,. + 0
 6009              	xDelayedTaskList2:
 6010 0000 00000000 		.space	20
 6010      00000000 
 6010      00000000 
 6010      00000000 
 6010      00000000 
 6011              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6012              		.align	2
 6013              		.set	.LANCHOR17,. + 0
 6016              	xIdleTaskHandle:
 6017 0000 00000000 		.space	4
 6018              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6019              		.align	2
 6020              		.set	.LANCHOR3,. + 0
 6023              	xNextTaskUnblockTime:
 6024 0000 00000000 		.space	4
 6025              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6026              		.align	2
 6027              		.set	.LANCHOR18,. + 0
 6030              	xNumOfOverflows:
 6031 0000 00000000 		.space	4
 6032              		.section	.bss.xPendingReadyList,"aw",%nobits
 6033              		.align	2
 6034              		.set	.LANCHOR1,. + 0
 6037              	xPendingReadyList:
 6038 0000 00000000 		.space	20
 6038      00000000 
 6038      00000000 
 6038      00000000 
 6038      00000000 
 6039              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6040              		.align	2
 6041              		.set	.LANCHOR11,. + 0
 6044              	xSchedulerRunning:
 6045 0000 00000000 		.space	4
 6046              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6047              		.align	2
 6048              		.set	.LANCHOR0,. + 0
 6051              	xSuspendedTaskList:
 6052 0000 00000000 		.space	20
 6052      00000000 
 6052      00000000 
 6052      00000000 
 6052      00000000 
 6053              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6054              		.align	2
 6055              		.set	.LANCHOR7,. + 0
 6058              	xTasksWaitingTermination:
 6059 0000 00000000 		.space	20
 6059      00000000 
 6059      00000000 
 6059      00000000 
 6059      00000000 
ARM GAS  /tmp/ccubydGq.s 			page 222


 6060              		.section	.bss.xTickCount,"aw",%nobits
 6061              		.align	2
 6062              		.set	.LANCHOR14,. + 0
 6065              	xTickCount:
 6066 0000 00000000 		.space	4
 6067              		.section	.bss.xYieldPending,"aw",%nobits
 6068              		.align	2
 6069              		.set	.LANCHOR20,. + 0
 6072              	xYieldPending:
 6073 0000 00000000 		.space	4
 6074              		.text
 6075              	.Letext0:
 6076              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 6077              		.file 4 "/usr/include/newlib/sys/_types.h"
 6078              		.file 5 "/usr/include/newlib/sys/reent.h"
 6079              		.file 6 "/usr/include/newlib/sys/lock.h"
 6080              		.file 7 "/usr/include/newlib/stdlib.h"
 6081              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 6082              		.file 9 "Core/Inc/FreeRTOSConfig.h"
 6083              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6084              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6085              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6086              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccubydGq.s 			page 223


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccubydGq.s:16     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/ccubydGq.s:23     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/ccubydGq.s:113    .text.prvTaskIsTaskSuspended:0000000000000038 $d
     /tmp/ccubydGq.s:119    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccubydGq.s:125    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccubydGq.s:168    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/ccubydGq.s:174    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/ccubydGq.s:180    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/ccubydGq.s:212    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/ccubydGq.s:218    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/ccubydGq.s:362    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/ccubydGq.s:368    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/ccubydGq.s:443    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/ccubydGq.s:455    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/ccubydGq.s:461    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/ccubydGq.s:597    .text.prvAddNewTaskToReadyList:000000000000008c $d
     /tmp/ccubydGq.s:608    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccubydGq.s:614    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccubydGq.s:734    .text.prvAddCurrentTaskToDelayedList:000000000000007c $d
     /tmp/ccubydGq.s:745    .text.xTaskCreate:0000000000000000 $t
     /tmp/ccubydGq.s:752    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccubydGq.s:874    .text.vTaskDelete:0000000000000000 $t
     /tmp/ccubydGq.s:881    .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/ccubydGq.s:1065   .text.vTaskDelete:00000000000000b8 $d
     /tmp/ccubydGq.s:1079   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/ccubydGq.s:1086   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/ccubydGq.s:1132   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/ccubydGq.s:1137   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/ccubydGq.s:1144   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/ccubydGq.s:1225   .text.uxTaskPriorityGetFromISR:000000000000002c $d
     /tmp/ccubydGq.s:1230   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/ccubydGq.s:1237   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/ccubydGq.s:1482   .text.vTaskPrioritySet:00000000000000d8 $d
     /tmp/ccubydGq.s:1490   .text.vTaskResume:0000000000000000 $t
     /tmp/ccubydGq.s:1497   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/ccubydGq.s:1628   .text.vTaskResume:0000000000000078 $d
     /tmp/ccubydGq.s:1636   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/ccubydGq.s:1643   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/ccubydGq.s:1814   .text.xTaskResumeFromISR:0000000000000090 $d
     /tmp/ccubydGq.s:1823   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/ccubydGq.s:1827   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccubydGq.s:1834   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccubydGq.s:1951   .text.vTaskStartScheduler:0000000000000064 $d
     /tmp/ccubydGq.s:2990   .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccubydGq.s:1961   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccubydGq.s:1968   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccubydGq.s:2011   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/ccubydGq.s:2016   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccubydGq.s:2023   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccubydGq.s:2040   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/ccubydGq.s:2045   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccubydGq.s:2052   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccubydGq.s:2073   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/ccubydGq.s:2078   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccubydGq.s:2085   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
ARM GAS  /tmp/ccubydGq.s 			page 224


     /tmp/ccubydGq.s:2114   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/ccubydGq.s:2119   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccubydGq.s:2126   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccubydGq.s:2142   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/ccubydGq.s:2147   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccubydGq.s:2154   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccubydGq.s:2215   .text.pcTaskGetName:0000000000000024 $d
     /tmp/ccubydGq.s:2220   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccubydGq.s:2227   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccubydGq.s:2490   .text.xTaskIncrementTick:00000000000000ec $d
     /tmp/ccubydGq.s:2505   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccubydGq.s:2512   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccubydGq.s:2748   .text.xTaskResumeAll:00000000000000d4 $d
     /tmp/ccubydGq.s:2761   .text.vTaskDelay:0000000000000000 $t
     /tmp/ccubydGq.s:2768   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccubydGq.s:2861   .text.vTaskDelay:0000000000000044 $d
     /tmp/ccubydGq.s:2867   .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/ccubydGq.s:2873   .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/ccubydGq.s:2976   .text.prvCheckTasksWaitingTermination:0000000000000050 $d
     /tmp/ccubydGq.s:2984   .text.prvIdleTask:0000000000000000 $t
     /tmp/ccubydGq.s:3038   .text.prvIdleTask:0000000000000020 $d
     /tmp/ccubydGq.s:3044   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccubydGq.s:3051   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccubydGq.s:3208   .text.vTaskSwitchContext:0000000000000084 $d
     /tmp/ccubydGq.s:3219   .text.vTaskSuspend:0000000000000000 $t
     /tmp/ccubydGq.s:3226   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/ccubydGq.s:3416   .text.vTaskSuspend:00000000000000b8 $d
     /tmp/ccubydGq.s:3428   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccubydGq.s:3435   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccubydGq.s:3503   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/ccubydGq.s:3508   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccubydGq.s:3515   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccubydGq.s:3626   .text.vTaskPlaceOnUnorderedEventList:0000000000000050 $d
     /tmp/ccubydGq.s:3632   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccubydGq.s:3639   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccubydGq.s:3770   .text.xTaskRemoveFromEventList:0000000000000074 $d
     /tmp/ccubydGq.s:3780   .text.xTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccubydGq.s:3787   .text.xTaskRemoveFromUnorderedEventList:0000000000000000 xTaskRemoveFromUnorderedEventList
     /tmp/ccubydGq.s:3933   .text.xTaskRemoveFromUnorderedEventList:0000000000000078 $d
     /tmp/ccubydGq.s:3942   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccubydGq.s:3949   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccubydGq.s:4002   .text.vTaskSetTimeOutState:0000000000000024 $d
     /tmp/ccubydGq.s:4008   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccubydGq.s:4015   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccubydGq.s:4183   .text.xTaskCheckForTimeOut:0000000000000078 $d
     /tmp/ccubydGq.s:4190   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccubydGq.s:4197   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccubydGq.s:4214   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/ccubydGq.s:4219   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccubydGq.s:4226   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccubydGq.s:4245   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/ccubydGq.s:4250   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/ccubydGq.s:4257   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/ccubydGq.s:4295   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/ccubydGq.s:4301   .text.vTaskPriorityInherit:0000000000000000 $t
     /tmp/ccubydGq.s:4308   .text.vTaskPriorityInherit:0000000000000000 vTaskPriorityInherit
     /tmp/ccubydGq.s:4442   .text.vTaskPriorityInherit:0000000000000094 $d
ARM GAS  /tmp/ccubydGq.s 			page 225


     /tmp/ccubydGq.s:4449   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccubydGq.s:4456   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccubydGq.s:4652   .text.xTaskPriorityDisinherit:00000000000000a8 $d
     /tmp/ccubydGq.s:4659   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccubydGq.s:4666   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccubydGq.s:4693   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/ccubydGq.s:4698   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccubydGq.s:4705   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccubydGq.s:4736   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/ccubydGq.s:4741   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/ccubydGq.s:4748   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccubydGq.s:4870   .text.ulTaskNotifyTake:0000000000000070 $d
     /tmp/ccubydGq.s:4876   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccubydGq.s:4883   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccubydGq.s:5027   .text.xTaskNotifyWait:0000000000000090 $d
     /tmp/ccubydGq.s:5033   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccubydGq.s:5040   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccubydGq.s:5097   .text.xTaskGenericNotify:000000000000002c $d
     /tmp/ccubydGq.s:5102   .text.xTaskGenericNotify:0000000000000030 $t
     /tmp/ccubydGq.s:5286   .text.xTaskGenericNotify:00000000000000d4 $d
     /tmp/ccubydGq.s:5294   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccubydGq.s:5301   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccubydGq.s:5385   .text.xTaskGenericNotifyFromISR:000000000000004a $d
     /tmp/ccubydGq.s:5390   .text.xTaskGenericNotifyFromISR:000000000000004e $t
     /tmp/ccubydGq.s:5601   .text.xTaskGenericNotifyFromISR:0000000000000104 $d
     /tmp/ccubydGq.s:5611   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccubydGq.s:5618   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccubydGq.s:5839   .text.vTaskNotifyGiveFromISR:00000000000000b8 $d
     /tmp/ccubydGq.s:5849   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/ccubydGq.s:5856   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/ccubydGq.s:5922   .text.xTaskNotifyStateClear:0000000000000030 $d
     /tmp/ccubydGq.s:5932   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccubydGq.s:5928   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccubydGq.s:5935   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccubydGq.s:5939   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccubydGq.s:5942   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccubydGq.s:5946   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccubydGq.s:5949   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccubydGq.s:5953   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccubydGq.s:5956   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccubydGq.s:5960   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccubydGq.s:5963   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/ccubydGq.s:5967   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccubydGq.s:5970   .bss.uxPendedTicks:0000000000000000 $d
     /tmp/ccubydGq.s:5974   .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/ccubydGq.s:5977   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccubydGq.s:5981   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccubydGq.s:5984   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccubydGq.s:5988   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccubydGq.s:5991   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/ccubydGq.s:5995   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccubydGq.s:5998   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccubydGq.s:6002   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccubydGq.s:6005   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccubydGq.s:6009   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccubydGq.s:6012   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/ccubydGq.s:6016   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
ARM GAS  /tmp/ccubydGq.s 			page 226


     /tmp/ccubydGq.s:6019   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccubydGq.s:6023   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccubydGq.s:6026   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccubydGq.s:6030   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccubydGq.s:6033   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccubydGq.s:6037   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccubydGq.s:6040   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccubydGq.s:6044   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccubydGq.s:6047   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/ccubydGq.s:6051   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/ccubydGq.s:6054   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/ccubydGq.s:6058   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/ccubydGq.s:6061   .bss.xTickCount:0000000000000000 $d
     /tmp/ccubydGq.s:6065   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccubydGq.s:6068   .bss.xYieldPending:0000000000000000 $d
     /tmp/ccubydGq.s:6072   .bss.xYieldPending:0000000000000000 xYieldPending

UNDEFINED SYMBOLS
vPortFree
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
xPortStartScheduler
vPortEndScheduler
