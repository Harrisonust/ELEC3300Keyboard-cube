ARM GAS  /tmp/cc7sZv3N.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"volume.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_TIM_IC_CaptureCallback
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_TIM_IC_CaptureCallback:
  25              	.LVL0:
  26              	.LFB66:
  27              		.file 1 "Core/Src/volume.c"
   1:Core/Src/volume.c **** /*
   2:Core/Src/volume.c ****  * volume.c
   3:Core/Src/volume.c ****  *
   4:Core/Src/volume.c ****  *  Created on: Nov 10, 2021
   5:Core/Src/volume.c ****  *      Author: luoshiheng
   6:Core/Src/volume.c ****  */
   7:Core/Src/volume.c **** 
   8:Core/Src/volume.c **** #include "volume.h"
   9:Core/Src/volume.c **** 
  10:Core/Src/volume.c **** int32_t vol_counter = 0;
  11:Core/Src/volume.c **** int32_t prev_vol_counter = 0;
  12:Core/Src/volume.c **** void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim){
  28              		.loc 1 12 57 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  13:Core/Src/volume.c **** 	prev_vol_counter = vol_counter;
  33              		.loc 1 13 2 view .LVU1
  34              		.loc 1 13 19 is_stmt 0 view .LVU2
  35 0000 044A     		ldr	r2, .L2
  36 0002 1168     		ldr	r1, [r2]
  37 0004 044B     		ldr	r3, .L2+4
  38 0006 1960     		str	r1, [r3]
  14:Core/Src/volume.c **** 	vol_counter = __HAL_TIM_GET_COUNTER(htim)/ENCODER_STEP;
  39              		.loc 1 14 2 is_stmt 1 view .LVU3
  40              		.loc 1 14 16 is_stmt 0 view .LVU4
  41 0008 0368     		ldr	r3, [r0]
  42 000a 5B6A     		ldr	r3, [r3, #36]
  43              		.loc 1 14 43 view .LVU5
  44 000c 9B08     		lsrs	r3, r3, #2
ARM GAS  /tmp/cc7sZv3N.s 			page 2


  45              		.loc 1 14 14 view .LVU6
  46 000e 1360     		str	r3, [r2]
  15:Core/Src/volume.c **** }
  47              		.loc 1 15 1 view .LVU7
  48 0010 7047     		bx	lr
  49              	.L3:
  50 0012 00BF     		.align	2
  51              	.L2:
  52 0014 00000000 		.word	.LANCHOR1
  53 0018 00000000 		.word	.LANCHOR0
  54              		.cfi_endproc
  55              	.LFE66:
  57              		.section	.text.updateVolume,"ax",%progbits
  58              		.align	1
  59              		.global	updateVolume
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	updateVolume:
  66              	.LFB67:
  16:Core/Src/volume.c **** 
  17:Core/Src/volume.c **** Volume_State updateVolume(){
  67              		.loc 1 17 28 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  18:Core/Src/volume.c **** 	if(vol_counter > prev_vol_counter)
  72              		.loc 1 18 2 view .LVU9
  73              		.loc 1 18 17 is_stmt 0 view .LVU10
  74 0000 064B     		ldr	r3, .L9
  75 0002 1A68     		ldr	r2, [r3]
  76 0004 064B     		ldr	r3, .L9+4
  77 0006 1B68     		ldr	r3, [r3]
  78              		.loc 1 18 4 view .LVU11
  79 0008 9A42     		cmp	r2, r3
  80 000a 04DC     		bgt	.L6
  19:Core/Src/volume.c **** 		return VOLUMEUP;
  20:Core/Src/volume.c **** 	else if(vol_counter < prev_vol_counter)
  81              		.loc 1 20 7 is_stmt 1 view .LVU12
  82              		.loc 1 20 9 is_stmt 0 view .LVU13
  83 000c 01DB     		blt	.L8
  21:Core/Src/volume.c **** 		return VOLUMEDOWN;
  22:Core/Src/volume.c **** 	else return VOLUMENOACTION;
  84              		.loc 1 22 14 view .LVU14
  85 000e 0020     		movs	r0, #0
  23:Core/Src/volume.c **** }
  86              		.loc 1 23 1 view .LVU15
  87 0010 7047     		bx	lr
  88              	.L8:
  21:Core/Src/volume.c **** 		return VOLUMEDOWN;
  89              		.loc 1 21 10 view .LVU16
  90 0012 0220     		movs	r0, #2
  91 0014 7047     		bx	lr
  92              	.L6:
  19:Core/Src/volume.c **** 		return VOLUMEUP;
ARM GAS  /tmp/cc7sZv3N.s 			page 3


  93              		.loc 1 19 10 view .LVU17
  94 0016 0120     		movs	r0, #1
  95 0018 7047     		bx	lr
  96              	.L10:
  97 001a 00BF     		.align	2
  98              	.L9:
  99 001c 00000000 		.word	.LANCHOR1
 100 0020 00000000 		.word	.LANCHOR0
 101              		.cfi_endproc
 102              	.LFE67:
 104              		.global	prev_vol_counter
 105              		.global	vol_counter
 106              		.section	.bss.prev_vol_counter,"aw",%nobits
 107              		.align	2
 108              		.set	.LANCHOR0,. + 0
 111              	prev_vol_counter:
 112 0000 00000000 		.space	4
 113              		.section	.bss.vol_counter,"aw",%nobits
 114              		.align	2
 115              		.set	.LANCHOR1,. + 0
 118              	vol_counter:
 119 0000 00000000 		.space	4
 120              		.text
 121              	.Letext0:
 122              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 123              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 124              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 125              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 126              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 127              		.file 7 "/usr/include/newlib/sys/_types.h"
 128              		.file 8 "/usr/include/newlib/sys/reent.h"
 129              		.file 9 "/usr/include/newlib/sys/lock.h"
 130              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 131              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 132              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 133              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 134              		.file 14 "Core/Inc/volume.h"
ARM GAS  /tmp/cc7sZv3N.s 			page 4


DEFINED SYMBOLS
                            *ABS*:0000000000000000 volume.c
     /tmp/cc7sZv3N.s:16     .text.HAL_TIM_IC_CaptureCallback:0000000000000000 $t
     /tmp/cc7sZv3N.s:24     .text.HAL_TIM_IC_CaptureCallback:0000000000000000 HAL_TIM_IC_CaptureCallback
     /tmp/cc7sZv3N.s:52     .text.HAL_TIM_IC_CaptureCallback:0000000000000014 $d
     /tmp/cc7sZv3N.s:58     .text.updateVolume:0000000000000000 $t
     /tmp/cc7sZv3N.s:65     .text.updateVolume:0000000000000000 updateVolume
     /tmp/cc7sZv3N.s:99     .text.updateVolume:000000000000001c $d
     /tmp/cc7sZv3N.s:111    .bss.prev_vol_counter:0000000000000000 prev_vol_counter
     /tmp/cc7sZv3N.s:118    .bss.vol_counter:0000000000000000 vol_counter
     /tmp/cc7sZv3N.s:107    .bss.prev_vol_counter:0000000000000000 $d
     /tmp/cc7sZv3N.s:114    .bss.vol_counter:0000000000000000 $d

NO UNDEFINED SYMBOLS
