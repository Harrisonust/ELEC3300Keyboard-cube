ARM GAS  /tmp/cc0q0Vjh.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ssd1306.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_f2d
  16              		.global	__aeabi_dmul
  17              		.global	__aeabi_ddiv
  18              		.global	__aeabi_d2f
  19              		.section	.text.ssd1306_DegToRad,"ax",%progbits
  20              		.align	1
  21              		.arch armv7-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu softvfp
  27              	ssd1306_DegToRad:
  28              	.LVL0:
  29              	.LFB79:
  30              		.file 1 "Core/Src/oled/ssd1306.c"
   1:Core/Src/oled/ssd1306.c **** #include "../../Inc/oled/ssd1306.h"
   2:Core/Src/oled/ssd1306.c **** #include <math.h>
   3:Core/Src/oled/ssd1306.c **** #include <stdlib.h>
   4:Core/Src/oled/ssd1306.c **** #include <string.h>  // For memcpy
   5:Core/Src/oled/ssd1306.c **** 
   6:Core/Src/oled/ssd1306.c **** #if defined(SSD1306_USE_I2C)
   7:Core/Src/oled/ssd1306.c **** 
   8:Core/Src/oled/ssd1306.c **** void ssd1306_Reset(void) {
   9:Core/Src/oled/ssd1306.c ****     /* for I2C - do nothing */
  10:Core/Src/oled/ssd1306.c **** }
  11:Core/Src/oled/ssd1306.c **** 
  12:Core/Src/oled/ssd1306.c **** // Send a byte to the command register
  13:Core/Src/oled/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  14:Core/Src/oled/ssd1306.c **** 	HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
  15:Core/Src/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, 100);
  16:Core/Src/oled/ssd1306.c **** }
  17:Core/Src/oled/ssd1306.c **** 
  18:Core/Src/oled/ssd1306.c **** // Send data
  19:Core/Src/oled/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  20:Core/Src/oled/ssd1306.c **** 	HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
  21:Core/Src/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, 100);
  22:Core/Src/oled/ssd1306.c **** }
  23:Core/Src/oled/ssd1306.c **** 
  24:Core/Src/oled/ssd1306.c **** #elif defined(SSD1306_USE_SPI)
  25:Core/Src/oled/ssd1306.c **** 
  26:Core/Src/oled/ssd1306.c **** void ssd1306_Reset(void) {
  27:Core/Src/oled/ssd1306.c ****     // CS = High (not selected)
  28:Core/Src/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/cc0q0Vjh.s 			page 2


  29:Core/Src/oled/ssd1306.c **** 
  30:Core/Src/oled/ssd1306.c ****     // Reset the OLED
  31:Core/Src/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_RESET);
  32:Core/Src/oled/ssd1306.c ****     HAL_Delay(10);
  33:Core/Src/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_SET);
  34:Core/Src/oled/ssd1306.c ****     HAL_Delay(10);
  35:Core/Src/oled/ssd1306.c **** }
  36:Core/Src/oled/ssd1306.c **** 
  37:Core/Src/oled/ssd1306.c **** // Send a byte to the command register
  38:Core/Src/oled/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  39:Core/Src/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  40:Core/Src/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_RESET); // command
  41:Core/Src/oled/ssd1306.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
  42:Core/Src/oled/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, (uint8_t *) &byte, 1, HAL_MAX_DELAY);
  43:Core/Src/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  44:Core/Src/oled/ssd1306.c **** }
  45:Core/Src/oled/ssd1306.c **** 
  46:Core/Src/oled/ssd1306.c **** // Send data
  47:Core/Src/oled/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  48:Core/Src/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  49:Core/Src/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
  50:Core/Src/oled/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, buffer, buff_size, HAL_MAX_DELAY);
  51:Core/Src/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  52:Core/Src/oled/ssd1306.c **** }
  53:Core/Src/oled/ssd1306.c **** 
  54:Core/Src/oled/ssd1306.c **** #else
  55:Core/Src/oled/ssd1306.c **** #error "You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro"
  56:Core/Src/oled/ssd1306.c **** #endif
  57:Core/Src/oled/ssd1306.c **** 
  58:Core/Src/oled/ssd1306.c **** 
  59:Core/Src/oled/ssd1306.c **** // Screenbuffer
  60:Core/Src/oled/ssd1306.c **** static uint8_t SSD1306_Buffer[SSD1306_BUFFER_SIZE];
  61:Core/Src/oled/ssd1306.c **** 
  62:Core/Src/oled/ssd1306.c **** // Screen object
  63:Core/Src/oled/ssd1306.c **** static SSD1306_t SSD1306;
  64:Core/Src/oled/ssd1306.c **** 
  65:Core/Src/oled/ssd1306.c **** /* Fills the Screenbuffer with values from a given buffer of a fixed length */
  66:Core/Src/oled/ssd1306.c **** SSD1306_Error_t ssd1306_FillBuffer(uint8_t* buf, uint32_t len) {
  67:Core/Src/oled/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
  68:Core/Src/oled/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
  69:Core/Src/oled/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
  70:Core/Src/oled/ssd1306.c ****         ret = SSD1306_OK;
  71:Core/Src/oled/ssd1306.c ****     }
  72:Core/Src/oled/ssd1306.c ****     return ret;
  73:Core/Src/oled/ssd1306.c **** }
  74:Core/Src/oled/ssd1306.c **** 
  75:Core/Src/oled/ssd1306.c **** // Initialize the oled screen
  76:Core/Src/oled/ssd1306.c **** void ssd1306_Init(void) {
  77:Core/Src/oled/ssd1306.c ****     // Reset OLED
  78:Core/Src/oled/ssd1306.c ****     ssd1306_Reset();
  79:Core/Src/oled/ssd1306.c **** 
  80:Core/Src/oled/ssd1306.c ****     // Wait for the screen to boot
  81:Core/Src/oled/ssd1306.c ****     HAL_Delay(100);
  82:Core/Src/oled/ssd1306.c **** 
  83:Core/Src/oled/ssd1306.c ****     // Init OLED
  84:Core/Src/oled/ssd1306.c ****     ssd1306_SetDisplayOn(0); //display off
  85:Core/Src/oled/ssd1306.c **** 
ARM GAS  /tmp/cc0q0Vjh.s 			page 3


  86:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
  87:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
  88:Core/Src/oled/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
  89:Core/Src/oled/ssd1306.c **** 
  90:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
  91:Core/Src/oled/ssd1306.c **** 
  92:Core/Src/oled/ssd1306.c **** #ifdef SSD1306_MIRROR_VERT
  93:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xC0); // Mirror vertically
  94:Core/Src/oled/ssd1306.c **** #else
  95:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
  96:Core/Src/oled/ssd1306.c **** #endif
  97:Core/Src/oled/ssd1306.c **** 
  98:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x00); //---set low column address
  99:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 100:Core/Src/oled/ssd1306.c **** 
 101:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 102:Core/Src/oled/ssd1306.c **** 
 103:Core/Src/oled/ssd1306.c ****     ssd1306_SetContrast(0xFF);
 104:Core/Src/oled/ssd1306.c **** 
 105:Core/Src/oled/ssd1306.c **** #ifdef SSD1306_MIRROR_HORIZ
 106:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA0); // Mirror horizontally
 107:Core/Src/oled/ssd1306.c **** #else
 108:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 109:Core/Src/oled/ssd1306.c **** #endif
 110:Core/Src/oled/ssd1306.c **** 
 111:Core/Src/oled/ssd1306.c **** #ifdef SSD1306_INVERSE_COLOR
 112:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA7); //--set inverse color
 113:Core/Src/oled/ssd1306.c **** #else
 114:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA6); //--set normal color
 115:Core/Src/oled/ssd1306.c **** #endif
 116:Core/Src/oled/ssd1306.c **** 
 117:Core/Src/oled/ssd1306.c **** // Set multiplex ratio.
 118:Core/Src/oled/ssd1306.c **** #if (SSD1306_HEIGHT == 128)
 119:Core/Src/oled/ssd1306.c ****     // Found in the Luma Python lib for SH1106.
 120:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xFF);
 121:Core/Src/oled/ssd1306.c **** #else
 122:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 123:Core/Src/oled/ssd1306.c **** #endif
 124:Core/Src/oled/ssd1306.c **** 
 125:Core/Src/oled/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 126:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x1F); //
 127:Core/Src/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 128:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x3F); //
 129:Core/Src/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 130:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x3F); // Seems to work for 128px high displays too.
 131:Core/Src/oled/ssd1306.c **** #else
 132:Core/Src/oled/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 133:Core/Src/oled/ssd1306.c **** #endif
 134:Core/Src/oled/ssd1306.c **** 
 135:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 136:Core/Src/oled/ssd1306.c **** 
 137:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 138:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 139:Core/Src/oled/ssd1306.c **** 
 140:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 141:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 142:Core/Src/oled/ssd1306.c **** 
ARM GAS  /tmp/cc0q0Vjh.s 			page 4


 143:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xD9); //--set pre-charge period
 144:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 145:Core/Src/oled/ssd1306.c **** 
 146:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 147:Core/Src/oled/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 148:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x02);
 149:Core/Src/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 150:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 151:Core/Src/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 152:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 153:Core/Src/oled/ssd1306.c **** #else
 154:Core/Src/oled/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 155:Core/Src/oled/ssd1306.c **** #endif
 156:Core/Src/oled/ssd1306.c **** 
 157:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xDB); //--set vcomh
 158:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 159:Core/Src/oled/ssd1306.c **** 
 160:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 161:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 162:Core/Src/oled/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 163:Core/Src/oled/ssd1306.c **** 
 164:Core/Src/oled/ssd1306.c ****     // Clear screen
 165:Core/Src/oled/ssd1306.c ****     ssd1306_Fill(Black);
 166:Core/Src/oled/ssd1306.c ****     
 167:Core/Src/oled/ssd1306.c ****     // Flush buffer to screen
 168:Core/Src/oled/ssd1306.c ****     ssd1306_UpdateScreen();
 169:Core/Src/oled/ssd1306.c ****     
 170:Core/Src/oled/ssd1306.c ****     // Set default values for screen object
 171:Core/Src/oled/ssd1306.c ****     SSD1306.CurrentX = 0;
 172:Core/Src/oled/ssd1306.c ****     SSD1306.CurrentY = 0;
 173:Core/Src/oled/ssd1306.c ****     
 174:Core/Src/oled/ssd1306.c ****     SSD1306.Initialized = 1;
 175:Core/Src/oled/ssd1306.c **** }
 176:Core/Src/oled/ssd1306.c **** 
 177:Core/Src/oled/ssd1306.c **** // Fill the whole screen with the given color
 178:Core/Src/oled/ssd1306.c **** void ssd1306_Fill(SSD1306_COLOR color) {
 179:Core/Src/oled/ssd1306.c ****     /* Set memory */
 180:Core/Src/oled/ssd1306.c ****     uint32_t i;
 181:Core/Src/oled/ssd1306.c **** 
 182:Core/Src/oled/ssd1306.c ****     for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 183:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 184:Core/Src/oled/ssd1306.c ****     }
 185:Core/Src/oled/ssd1306.c **** }
 186:Core/Src/oled/ssd1306.c **** 
 187:Core/Src/oled/ssd1306.c **** // Write the screenbuffer with changed to the screen
 188:Core/Src/oled/ssd1306.c **** void ssd1306_UpdateScreen(void) {
 189:Core/Src/oled/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 190:Core/Src/oled/ssd1306.c ****     // depends on the screen height:
 191:Core/Src/oled/ssd1306.c ****     //
 192:Core/Src/oled/ssd1306.c ****     //  * 32px   ==  4 pages
 193:Core/Src/oled/ssd1306.c ****     //  * 64px   ==  8 pages
 194:Core/Src/oled/ssd1306.c ****     //  * 128px  ==  16 pages
 195:Core/Src/oled/ssd1306.c ****     for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 196:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 197:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0x00);
 198:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0x10);
 199:Core/Src/oled/ssd1306.c ****         ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
ARM GAS  /tmp/cc0q0Vjh.s 			page 5


 200:Core/Src/oled/ssd1306.c ****     }
 201:Core/Src/oled/ssd1306.c **** }
 202:Core/Src/oled/ssd1306.c **** 
 203:Core/Src/oled/ssd1306.c **** //    Draw one pixel in the screenbuffer
 204:Core/Src/oled/ssd1306.c **** //    X => X Coordinate
 205:Core/Src/oled/ssd1306.c **** //    Y => Y Coordinate
 206:Core/Src/oled/ssd1306.c **** //    color => Pixel color
 207:Core/Src/oled/ssd1306.c **** void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
 208:Core/Src/oled/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 209:Core/Src/oled/ssd1306.c ****         // Don't write outside the buffer
 210:Core/Src/oled/ssd1306.c ****         return;
 211:Core/Src/oled/ssd1306.c ****     }
 212:Core/Src/oled/ssd1306.c ****    
 213:Core/Src/oled/ssd1306.c ****     // Draw in the right color
 214:Core/Src/oled/ssd1306.c ****     if(color == White) {
 215:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 216:Core/Src/oled/ssd1306.c ****     } else { 
 217:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 218:Core/Src/oled/ssd1306.c ****     }
 219:Core/Src/oled/ssd1306.c **** }
 220:Core/Src/oled/ssd1306.c **** 
 221:Core/Src/oled/ssd1306.c **** // Draw 1 char to the screen buffer
 222:Core/Src/oled/ssd1306.c **** // ch       => char om weg te schrijven
 223:Core/Src/oled/ssd1306.c **** // Font     => Font waarmee we gaan schrijven
 224:Core/Src/oled/ssd1306.c **** // color    => Black or White
 225:Core/Src/oled/ssd1306.c **** char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 226:Core/Src/oled/ssd1306.c ****     uint32_t i, b, j;
 227:Core/Src/oled/ssd1306.c ****     
 228:Core/Src/oled/ssd1306.c ****     // Check if character is valid
 229:Core/Src/oled/ssd1306.c ****     if (ch < 32 || ch > 126)
 230:Core/Src/oled/ssd1306.c ****         return 0;
 231:Core/Src/oled/ssd1306.c ****     
 232:Core/Src/oled/ssd1306.c ****     // Check remaining space on current line
 233:Core/Src/oled/ssd1306.c ****     if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 234:Core/Src/oled/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 235:Core/Src/oled/ssd1306.c ****     {
 236:Core/Src/oled/ssd1306.c ****         // Not enough space on current line
 237:Core/Src/oled/ssd1306.c ****         return 0;
 238:Core/Src/oled/ssd1306.c ****     }
 239:Core/Src/oled/ssd1306.c ****     
 240:Core/Src/oled/ssd1306.c ****     // Use the font to write
 241:Core/Src/oled/ssd1306.c ****     for(i = 0; i < Font.FontHeight; i++) {
 242:Core/Src/oled/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 243:Core/Src/oled/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 244:Core/Src/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 245:Core/Src/oled/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 246:Core/Src/oled/ssd1306.c ****             } else {
 247:Core/Src/oled/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!col
 248:Core/Src/oled/ssd1306.c ****             }
 249:Core/Src/oled/ssd1306.c ****         }
 250:Core/Src/oled/ssd1306.c ****     }
 251:Core/Src/oled/ssd1306.c ****     
 252:Core/Src/oled/ssd1306.c ****     // The current space is now taken
 253:Core/Src/oled/ssd1306.c ****     SSD1306.CurrentX += Font.FontWidth;
 254:Core/Src/oled/ssd1306.c ****     
 255:Core/Src/oled/ssd1306.c ****     // Return written char for validation
 256:Core/Src/oled/ssd1306.c ****     return ch;
ARM GAS  /tmp/cc0q0Vjh.s 			page 6


 257:Core/Src/oled/ssd1306.c **** }
 258:Core/Src/oled/ssd1306.c **** 
 259:Core/Src/oled/ssd1306.c **** // Write full string to screenbuffer
 260:Core/Src/oled/ssd1306.c **** char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 261:Core/Src/oled/ssd1306.c ****     // Write until null-byte
 262:Core/Src/oled/ssd1306.c ****     while (*str) {
 263:Core/Src/oled/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 264:Core/Src/oled/ssd1306.c ****             // Char could not be written
 265:Core/Src/oled/ssd1306.c ****             return *str;
 266:Core/Src/oled/ssd1306.c ****         }
 267:Core/Src/oled/ssd1306.c ****         
 268:Core/Src/oled/ssd1306.c ****         // Next char
 269:Core/Src/oled/ssd1306.c ****         str++;
 270:Core/Src/oled/ssd1306.c ****     }
 271:Core/Src/oled/ssd1306.c ****     
 272:Core/Src/oled/ssd1306.c ****     // Everything ok
 273:Core/Src/oled/ssd1306.c ****     return *str;
 274:Core/Src/oled/ssd1306.c **** }
 275:Core/Src/oled/ssd1306.c **** 
 276:Core/Src/oled/ssd1306.c **** // Position the cursor
 277:Core/Src/oled/ssd1306.c **** void ssd1306_SetCursor(uint8_t x, uint8_t y) {
 278:Core/Src/oled/ssd1306.c ****     SSD1306.CurrentX = x;
 279:Core/Src/oled/ssd1306.c ****     SSD1306.CurrentY = y;
 280:Core/Src/oled/ssd1306.c **** }
 281:Core/Src/oled/ssd1306.c **** 
 282:Core/Src/oled/ssd1306.c **** // Draw line by Bresenhem's algorithm
 283:Core/Src/oled/ssd1306.c **** void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 284:Core/Src/oled/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 285:Core/Src/oled/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 286:Core/Src/oled/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 287:Core/Src/oled/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 288:Core/Src/oled/ssd1306.c ****   int32_t error = deltaX - deltaY;
 289:Core/Src/oled/ssd1306.c ****   int32_t error2;
 290:Core/Src/oled/ssd1306.c ****     
 291:Core/Src/oled/ssd1306.c ****   ssd1306_DrawPixel(x2, y2, color);
 292:Core/Src/oled/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 293:Core/Src/oled/ssd1306.c ****     {
 294:Core/Src/oled/ssd1306.c ****     ssd1306_DrawPixel(x1, y1, color);
 295:Core/Src/oled/ssd1306.c ****     error2 = error * 2;
 296:Core/Src/oled/ssd1306.c ****     if(error2 > -deltaY)
 297:Core/Src/oled/ssd1306.c ****     {
 298:Core/Src/oled/ssd1306.c ****       error -= deltaY;
 299:Core/Src/oled/ssd1306.c ****       x1 += signX;
 300:Core/Src/oled/ssd1306.c ****     }
 301:Core/Src/oled/ssd1306.c ****     else
 302:Core/Src/oled/ssd1306.c ****     {
 303:Core/Src/oled/ssd1306.c ****     /*nothing to do*/
 304:Core/Src/oled/ssd1306.c ****     }
 305:Core/Src/oled/ssd1306.c ****         
 306:Core/Src/oled/ssd1306.c ****     if(error2 < deltaX)
 307:Core/Src/oled/ssd1306.c ****     {
 308:Core/Src/oled/ssd1306.c ****       error += deltaX;
 309:Core/Src/oled/ssd1306.c ****       y1 += signY;
 310:Core/Src/oled/ssd1306.c ****     }
 311:Core/Src/oled/ssd1306.c ****     else
 312:Core/Src/oled/ssd1306.c ****     {
 313:Core/Src/oled/ssd1306.c ****     /*nothing to do*/
ARM GAS  /tmp/cc0q0Vjh.s 			page 7


 314:Core/Src/oled/ssd1306.c ****     }
 315:Core/Src/oled/ssd1306.c ****   }
 316:Core/Src/oled/ssd1306.c ****   return;
 317:Core/Src/oled/ssd1306.c **** }
 318:Core/Src/oled/ssd1306.c **** //Draw polyline
 319:Core/Src/oled/ssd1306.c **** void ssd1306_Polyline(const SSD1306_VERTEX *par_vertex, uint16_t par_size, SSD1306_COLOR color) {
 320:Core/Src/oled/ssd1306.c ****   uint16_t i;
 321:Core/Src/oled/ssd1306.c ****   if(par_vertex != 0){
 322:Core/Src/oled/ssd1306.c ****     for(i = 1; i < par_size; i++){
 323:Core/Src/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 324:Core/Src/oled/ssd1306.c ****     }
 325:Core/Src/oled/ssd1306.c ****   }
 326:Core/Src/oled/ssd1306.c ****   else
 327:Core/Src/oled/ssd1306.c ****   {
 328:Core/Src/oled/ssd1306.c ****     /*nothing to do*/
 329:Core/Src/oled/ssd1306.c ****   }
 330:Core/Src/oled/ssd1306.c ****   return;
 331:Core/Src/oled/ssd1306.c **** }
 332:Core/Src/oled/ssd1306.c **** /*Convert Degrees to Radians*/
 333:Core/Src/oled/ssd1306.c **** static float ssd1306_DegToRad(float par_deg) {
  31              		.loc 1 333 46 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 333 46 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
 334:Core/Src/oled/ssd1306.c ****     return par_deg * 3.14 / 180.0;
  41              		.loc 1 334 5 is_stmt 1 view .LVU2
  42              		.loc 1 334 20 is_stmt 0 view .LVU3
  43 0002 FFF7FEFF 		bl	__aeabi_f2d
  44              	.LVL1:
  45              		.loc 1 334 20 view .LVU4
  46 0006 06A3     		adr	r3, .L3
  47 0008 D3E90023 		ldrd	r2, [r3]
  48 000c FFF7FEFF 		bl	__aeabi_dmul
  49              	.LVL2:
  50              		.loc 1 334 27 view .LVU5
  51 0010 0022     		movs	r2, #0
  52 0012 054B     		ldr	r3, .L3+8
  53 0014 FFF7FEFF 		bl	__aeabi_ddiv
  54              	.LVL3:
  55 0018 FFF7FEFF 		bl	__aeabi_d2f
  56              	.LVL4:
 335:Core/Src/oled/ssd1306.c **** }
  57              		.loc 1 335 1 view .LVU6
  58 001c 08BD     		pop	{r3, pc}
  59              	.L4:
  60 001e 00BF     		.align	3
  61              	.L3:
  62 0020 1F85EB51 		.word	1374389535
  63 0024 B81E0940 		.word	1074339512
  64 0028 00806640 		.word	1080459264
  65              		.cfi_endproc
ARM GAS  /tmp/cc0q0Vjh.s 			page 8


  66              	.LFE79:
  68              		.section	.text.ssd1306_NormalizeTo0_360,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu softvfp
  75              	ssd1306_NormalizeTo0_360:
  76              	.LVL5:
  77              	.LFB80:
 336:Core/Src/oled/ssd1306.c **** /*Normalize degree to [0;360]*/
 337:Core/Src/oled/ssd1306.c **** static uint16_t ssd1306_NormalizeTo0_360(uint16_t par_deg) {
  78              		.loc 1 337 60 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
 338:Core/Src/oled/ssd1306.c ****   uint16_t loc_angle;
  83              		.loc 1 338 3 view .LVU8
 339:Core/Src/oled/ssd1306.c ****   if(par_deg <= 360)
  84              		.loc 1 339 3 view .LVU9
  85              		.loc 1 339 5 is_stmt 0 view .LVU10
  86 0000 B0F5B47F 		cmp	r0, #360
  87 0004 00D9     		bls	.L6
 340:Core/Src/oled/ssd1306.c ****   {
 341:Core/Src/oled/ssd1306.c ****     loc_angle = par_deg;
 342:Core/Src/oled/ssd1306.c ****   }
 343:Core/Src/oled/ssd1306.c ****   else
 344:Core/Src/oled/ssd1306.c ****   {
 345:Core/Src/oled/ssd1306.c ****     loc_angle = par_deg % 360;
  88              		.loc 1 345 5 is_stmt 1 view .LVU11
  89              	.LVL6:
 346:Core/Src/oled/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
  90              		.loc 1 346 5 view .LVU12
  91              		.loc 1 346 15 is_stmt 0 view .LVU13
  92 0006 00B1     		cbz	r0, .L8
  93              	.LVL7:
  94              	.L6:
 347:Core/Src/oled/ssd1306.c ****   }
 348:Core/Src/oled/ssd1306.c ****   return loc_angle;
  95              		.loc 1 348 3 is_stmt 1 view .LVU14
 349:Core/Src/oled/ssd1306.c **** }
  96              		.loc 1 349 1 is_stmt 0 view .LVU15
  97 0008 7047     		bx	lr
  98              	.LVL8:
  99              	.L8:
 346:Core/Src/oled/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
 100              		.loc 1 346 15 view .LVU16
 101 000a 4FF4B470 		mov	r0, #360
 102              	.LVL9:
 346:Core/Src/oled/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
 103              		.loc 1 346 15 view .LVU17
 104 000e FBE7     		b	.L6
 105              		.cfi_endproc
 106              	.LFE80:
 108              		.section	.text.ssd1306_Reset,"ax",%progbits
 109              		.align	1
ARM GAS  /tmp/cc0q0Vjh.s 			page 9


 110              		.global	ssd1306_Reset
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu softvfp
 116              	ssd1306_Reset:
 117              	.LFB66:
   8:Core/Src/oled/ssd1306.c ****     /* for I2C - do nothing */
 118              		.loc 1 8 26 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
  10:Core/Src/oled/ssd1306.c **** 
 123              		.loc 1 10 1 view .LVU19
 124 0000 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE66:
 128              		.section	.text.ssd1306_WriteCommand,"ax",%progbits
 129              		.align	1
 130              		.global	ssd1306_WriteCommand
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu softvfp
 136              	ssd1306_WriteCommand:
 137              	.LVL10:
 138              	.LFB67:
  13:Core/Src/oled/ssd1306.c **** 	HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 139              		.loc 1 13 41 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 8
 142              		@ frame_needed = 0, uses_anonymous_args = 0
  13:Core/Src/oled/ssd1306.c **** 	HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 143              		.loc 1 13 41 is_stmt 0 view .LVU21
 144 0000 00B5     		push	{lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 14, -4
 148 0002 87B0     		sub	sp, sp, #28
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 32
 151 0004 8DF81700 		strb	r0, [sp, #23]
  14:Core/Src/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, 100);
 152              		.loc 1 14 2 is_stmt 1 view .LVU22
 153 0008 4FF40051 		mov	r1, #8192
 154 000c 0848     		ldr	r0, .L12
 155              	.LVL11:
  14:Core/Src/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, 100);
 156              		.loc 1 14 2 is_stmt 0 view .LVU23
 157 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 158              	.LVL12:
  15:Core/Src/oled/ssd1306.c **** }
 159              		.loc 1 15 5 is_stmt 1 view .LVU24
 160 0012 6423     		movs	r3, #100
 161 0014 0293     		str	r3, [sp, #8]
 162 0016 0123     		movs	r3, #1
ARM GAS  /tmp/cc0q0Vjh.s 			page 10


 163 0018 0193     		str	r3, [sp, #4]
 164 001a 0DF11702 		add	r2, sp, #23
 165 001e 0092     		str	r2, [sp]
 166 0020 0022     		movs	r2, #0
 167 0022 7821     		movs	r1, #120
 168 0024 0348     		ldr	r0, .L12+4
 169 0026 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 170              	.LVL13:
  16:Core/Src/oled/ssd1306.c **** 
 171              		.loc 1 16 1 is_stmt 0 view .LVU25
 172 002a 07B0     		add	sp, sp, #28
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 4
 175              		@ sp needed
 176 002c 5DF804FB 		ldr	pc, [sp], #4
 177              	.L13:
 178              		.align	2
 179              	.L12:
 180 0030 00140140 		.word	1073812480
 181 0034 00000000 		.word	hi2c1
 182              		.cfi_endproc
 183              	.LFE67:
 185              		.section	.text.ssd1306_WriteData,"ax",%progbits
 186              		.align	1
 187              		.global	ssd1306_WriteData
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu softvfp
 193              	ssd1306_WriteData:
 194              	.LVL14:
 195              	.LFB68:
  19:Core/Src/oled/ssd1306.c **** 	HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 196              		.loc 1 19 59 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
  19:Core/Src/oled/ssd1306.c **** 	HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 200              		.loc 1 19 59 is_stmt 0 view .LVU27
 201 0000 30B5     		push	{r4, r5, lr}
 202              	.LCFI4:
 203              		.cfi_def_cfa_offset 12
 204              		.cfi_offset 4, -12
 205              		.cfi_offset 5, -8
 206              		.cfi_offset 14, -4
 207 0002 85B0     		sub	sp, sp, #20
 208              	.LCFI5:
 209              		.cfi_def_cfa_offset 32
 210 0004 0546     		mov	r5, r0
 211 0006 0C46     		mov	r4, r1
  20:Core/Src/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, 100);
 212              		.loc 1 20 2 is_stmt 1 view .LVU28
 213 0008 4FF40051 		mov	r1, #8192
 214              	.LVL15:
  20:Core/Src/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, 100);
 215              		.loc 1 20 2 is_stmt 0 view .LVU29
 216 000c 0748     		ldr	r0, .L16
ARM GAS  /tmp/cc0q0Vjh.s 			page 11


 217              	.LVL16:
  20:Core/Src/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, 100);
 218              		.loc 1 20 2 view .LVU30
 219 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 220              	.LVL17:
  21:Core/Src/oled/ssd1306.c **** }
 221              		.loc 1 21 5 is_stmt 1 view .LVU31
 222 0012 6423     		movs	r3, #100
 223 0014 0293     		str	r3, [sp, #8]
 224 0016 A4B2     		uxth	r4, r4
 225              	.LVL18:
  21:Core/Src/oled/ssd1306.c **** }
 226              		.loc 1 21 5 is_stmt 0 view .LVU32
 227 0018 0194     		str	r4, [sp, #4]
 228 001a 0095     		str	r5, [sp]
 229 001c 0123     		movs	r3, #1
 230 001e 4022     		movs	r2, #64
 231 0020 7821     		movs	r1, #120
 232 0022 0348     		ldr	r0, .L16+4
 233 0024 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 234              	.LVL19:
  22:Core/Src/oled/ssd1306.c **** 
 235              		.loc 1 22 1 view .LVU33
 236 0028 05B0     		add	sp, sp, #20
 237              	.LCFI6:
 238              		.cfi_def_cfa_offset 12
 239              		@ sp needed
 240 002a 30BD     		pop	{r4, r5, pc}
 241              	.LVL20:
 242              	.L17:
  22:Core/Src/oled/ssd1306.c **** 
 243              		.loc 1 22 1 view .LVU34
 244              		.align	2
 245              	.L16:
 246 002c 00140140 		.word	1073812480
 247 0030 00000000 		.word	hi2c1
 248              		.cfi_endproc
 249              	.LFE68:
 251              		.section	.text.ssd1306_FillBuffer,"ax",%progbits
 252              		.align	1
 253              		.global	ssd1306_FillBuffer
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu softvfp
 259              	ssd1306_FillBuffer:
 260              	.LVL21:
 261              	.LFB69:
  66:Core/Src/oled/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
 262              		.loc 1 66 64 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
  67:Core/Src/oled/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
 266              		.loc 1 67 5 view .LVU36
  68:Core/Src/oled/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
 267              		.loc 1 68 5 view .LVU37
ARM GAS  /tmp/cc0q0Vjh.s 			page 12


  68:Core/Src/oled/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
 268              		.loc 1 68 8 is_stmt 0 view .LVU38
 269 0000 B1F5806F 		cmp	r1, #1024
 270 0004 01D9     		bls	.L25
  67:Core/Src/oled/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
 271              		.loc 1 67 21 view .LVU39
 272 0006 0120     		movs	r0, #1
 273              	.LVL22:
  72:Core/Src/oled/ssd1306.c **** }
 274              		.loc 1 72 5 is_stmt 1 view .LVU40
  73:Core/Src/oled/ssd1306.c **** 
 275              		.loc 1 73 1 is_stmt 0 view .LVU41
 276 0008 7047     		bx	lr
 277              	.LVL23:
 278              	.L25:
  66:Core/Src/oled/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
 279              		.loc 1 66 64 view .LVU42
 280 000a 08B5     		push	{r3, lr}
 281              	.LCFI7:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 3, -8
 284              		.cfi_offset 14, -4
  69:Core/Src/oled/ssd1306.c ****         ret = SSD1306_OK;
 285              		.loc 1 69 9 is_stmt 1 view .LVU43
 286 000c 0A46     		mov	r2, r1
 287 000e 0146     		mov	r1, r0
 288              	.LVL24:
  69:Core/Src/oled/ssd1306.c ****         ret = SSD1306_OK;
 289              		.loc 1 69 9 is_stmt 0 view .LVU44
 290 0010 0248     		ldr	r0, .L26
 291              	.LVL25:
  69:Core/Src/oled/ssd1306.c ****         ret = SSD1306_OK;
 292              		.loc 1 69 9 view .LVU45
 293 0012 FFF7FEFF 		bl	memcpy
 294              	.LVL26:
  70:Core/Src/oled/ssd1306.c ****     }
 295              		.loc 1 70 9 is_stmt 1 view .LVU46
  70:Core/Src/oled/ssd1306.c ****     }
 296              		.loc 1 70 13 is_stmt 0 view .LVU47
 297 0016 0020     		movs	r0, #0
 298              	.LVL27:
  72:Core/Src/oled/ssd1306.c **** }
 299              		.loc 1 72 5 is_stmt 1 view .LVU48
  73:Core/Src/oled/ssd1306.c **** 
 300              		.loc 1 73 1 is_stmt 0 view .LVU49
 301 0018 08BD     		pop	{r3, pc}
 302              	.L27:
 303 001a 00BF     		.align	2
 304              	.L26:
 305 001c 00000000 		.word	.LANCHOR0
 306              		.cfi_endproc
 307              	.LFE69:
 309              		.section	.text.ssd1306_Fill,"ax",%progbits
 310              		.align	1
 311              		.global	ssd1306_Fill
 312              		.syntax unified
 313              		.thumb
ARM GAS  /tmp/cc0q0Vjh.s 			page 13


 314              		.thumb_func
 315              		.fpu softvfp
 317              	ssd1306_Fill:
 318              	.LVL28:
 319              	.LFB71:
 178:Core/Src/oled/ssd1306.c ****     /* Set memory */
 320              		.loc 1 178 40 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 180:Core/Src/oled/ssd1306.c **** 
 325              		.loc 1 180 5 view .LVU51
 182:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 326              		.loc 1 182 5 view .LVU52
 182:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 327              		.loc 1 182 11 is_stmt 0 view .LVU53
 328 0000 0023     		movs	r3, #0
 182:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 329              		.loc 1 182 5 view .LVU54
 330 0002 03E0     		b	.L29
 331              	.LVL29:
 332              	.L32:
 183:Core/Src/oled/ssd1306.c ****     }
 333              		.loc 1 183 27 view .LVU55
 334 0004 FF21     		movs	r1, #255
 335              	.L30:
 183:Core/Src/oled/ssd1306.c ****     }
 336              		.loc 1 183 27 discriminator 4 view .LVU56
 337 0006 054A     		ldr	r2, .L34
 338 0008 D154     		strb	r1, [r2, r3]
 182:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 339              		.loc 1 182 44 is_stmt 1 discriminator 4 view .LVU57
 182:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 340              		.loc 1 182 45 is_stmt 0 discriminator 4 view .LVU58
 341 000a 0133     		adds	r3, r3, #1
 342              	.LVL30:
 343              	.L29:
 182:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 344              		.loc 1 182 16 is_stmt 1 discriminator 2 view .LVU59
 182:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 345              		.loc 1 182 5 is_stmt 0 discriminator 2 view .LVU60
 346 000c B3F5806F 		cmp	r3, #1024
 347 0010 03D2     		bcs	.L33
 183:Core/Src/oled/ssd1306.c ****     }
 348              		.loc 1 183 9 is_stmt 1 view .LVU61
 183:Core/Src/oled/ssd1306.c ****     }
 349              		.loc 1 183 27 is_stmt 0 view .LVU62
 350 0012 0028     		cmp	r0, #0
 351 0014 F6D1     		bne	.L32
 352 0016 0146     		mov	r1, r0
 353 0018 F5E7     		b	.L30
 354              	.L33:
 185:Core/Src/oled/ssd1306.c **** 
 355              		.loc 1 185 1 view .LVU63
 356 001a 7047     		bx	lr
 357              	.L35:
ARM GAS  /tmp/cc0q0Vjh.s 			page 14


 358              		.align	2
 359              	.L34:
 360 001c 00000000 		.word	.LANCHOR0
 361              		.cfi_endproc
 362              	.LFE71:
 364              		.section	.text.ssd1306_UpdateScreen,"ax",%progbits
 365              		.align	1
 366              		.global	ssd1306_UpdateScreen
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu softvfp
 372              	ssd1306_UpdateScreen:
 373              	.LFB72:
 188:Core/Src/oled/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 374              		.loc 1 188 33 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378 0000 10B5     		push	{r4, lr}
 379              	.LCFI8:
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 4, -8
 382              		.cfi_offset 14, -4
 195:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 383              		.loc 1 195 5 view .LVU65
 384              	.LBB2:
 195:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 385              		.loc 1 195 9 view .LVU66
 386              	.LVL31:
 195:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 387              		.loc 1 195 17 is_stmt 0 view .LVU67
 388 0002 0024     		movs	r4, #0
 195:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 389              		.loc 1 195 5 view .LVU68
 390 0004 12E0     		b	.L37
 391              	.LVL32:
 392              	.L38:
 196:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0x00);
 393              		.loc 1 196 9 is_stmt 1 discriminator 3 view .LVU69
 394 0006 A4F15000 		sub	r0, r4, #80
 395 000a C0B2     		uxtb	r0, r0
 396 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 397              	.LVL33:
 197:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0x10);
 398              		.loc 1 197 9 discriminator 3 view .LVU70
 399 0010 0020     		movs	r0, #0
 400 0012 FFF7FEFF 		bl	ssd1306_WriteCommand
 401              	.LVL34:
 198:Core/Src/oled/ssd1306.c ****         ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 402              		.loc 1 198 9 discriminator 3 view .LVU71
 403 0016 1020     		movs	r0, #16
 404 0018 FFF7FEFF 		bl	ssd1306_WriteCommand
 405              	.LVL35:
 199:Core/Src/oled/ssd1306.c ****     }
 406              		.loc 1 199 9 discriminator 3 view .LVU72
 407 001c 8021     		movs	r1, #128
ARM GAS  /tmp/cc0q0Vjh.s 			page 15


 408 001e 0548     		ldr	r0, .L40
 409 0020 00EBC410 		add	r0, r0, r4, lsl #7
 410 0024 FFF7FEFF 		bl	ssd1306_WriteData
 411              	.LVL36:
 195:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 412              		.loc 1 195 46 discriminator 3 view .LVU73
 195:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 413              		.loc 1 195 47 is_stmt 0 discriminator 3 view .LVU74
 414 0028 0134     		adds	r4, r4, #1
 415              	.LVL37:
 195:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 416              		.loc 1 195 47 discriminator 3 view .LVU75
 417 002a E4B2     		uxtb	r4, r4
 418              	.LVL38:
 419              	.L37:
 195:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 420              		.loc 1 195 24 is_stmt 1 discriminator 1 view .LVU76
 195:Core/Src/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 421              		.loc 1 195 5 is_stmt 0 discriminator 1 view .LVU77
 422 002c 072C     		cmp	r4, #7
 423 002e EAD9     		bls	.L38
 424              	.LBE2:
 201:Core/Src/oled/ssd1306.c **** 
 425              		.loc 1 201 1 view .LVU78
 426 0030 10BD     		pop	{r4, pc}
 427              	.LVL39:
 428              	.L41:
 201:Core/Src/oled/ssd1306.c **** 
 429              		.loc 1 201 1 view .LVU79
 430 0032 00BF     		.align	2
 431              	.L40:
 432 0034 00000000 		.word	.LANCHOR0
 433              		.cfi_endproc
 434              	.LFE72:
 436              		.section	.text.ssd1306_DrawPixel,"ax",%progbits
 437              		.align	1
 438              		.global	ssd1306_DrawPixel
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu softvfp
 444              	ssd1306_DrawPixel:
 445              	.LVL40:
 446              	.LFB73:
 207:Core/Src/oled/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 447              		.loc 1 207 67 is_stmt 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 208:Core/Src/oled/ssd1306.c ****         // Don't write outside the buffer
 452              		.loc 1 208 5 view .LVU81
 208:Core/Src/oled/ssd1306.c ****         // Don't write outside the buffer
 453              		.loc 1 208 7 is_stmt 0 view .LVU82
 454 0000 10F0800F 		tst	r0, #128
 455 0004 0FD1     		bne	.L42
 208:Core/Src/oled/ssd1306.c ****         // Don't write outside the buffer
ARM GAS  /tmp/cc0q0Vjh.s 			page 16


 456              		.loc 1 208 27 discriminator 1 view .LVU83
 457 0006 3F29     		cmp	r1, #63
 458 0008 0DD8     		bhi	.L42
 214:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 459              		.loc 1 214 5 is_stmt 1 view .LVU84
 214:Core/Src/oled/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 460              		.loc 1 214 7 is_stmt 0 view .LVU85
 461 000a 012A     		cmp	r2, #1
 462 000c 0CD0     		beq	.L45
 217:Core/Src/oled/ssd1306.c ****     }
 463              		.loc 1 217 9 is_stmt 1 view .LVU86
 217:Core/Src/oled/ssd1306.c ****     }
 464              		.loc 1 217 53 is_stmt 0 view .LVU87
 465 000e CB08     		lsrs	r3, r1, #3
 466 0010 00EBC310 		add	r0, r0, r3, lsl #7
 467              	.LVL41:
 217:Core/Src/oled/ssd1306.c ****     }
 468              		.loc 1 217 66 view .LVU88
 469 0014 01F00701 		and	r1, r1, #7
 470              	.LVL42:
 217:Core/Src/oled/ssd1306.c ****     }
 471              		.loc 1 217 60 view .LVU89
 472 0018 0123     		movs	r3, #1
 473 001a 8B40     		lsls	r3, r3, r1
 217:Core/Src/oled/ssd1306.c ****     }
 474              		.loc 1 217 53 view .LVU90
 475 001c 084A     		ldr	r2, .L46
 476              	.LVL43:
 217:Core/Src/oled/ssd1306.c ****     }
 477              		.loc 1 217 53 view .LVU91
 478 001e 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 479 0020 21EA0301 		bic	r1, r1, r3
 480 0024 1154     		strb	r1, [r2, r0]
 481              	.L42:
 219:Core/Src/oled/ssd1306.c **** 
 482              		.loc 1 219 1 view .LVU92
 483 0026 7047     		bx	lr
 484              	.LVL44:
 485              	.L45:
 215:Core/Src/oled/ssd1306.c ****     } else { 
 486              		.loc 1 215 9 is_stmt 1 view .LVU93
 215:Core/Src/oled/ssd1306.c ****     } else { 
 487              		.loc 1 215 53 is_stmt 0 view .LVU94
 488 0028 CB08     		lsrs	r3, r1, #3
 489 002a 00EBC310 		add	r0, r0, r3, lsl #7
 490              	.LVL45:
 215:Core/Src/oled/ssd1306.c ****     } else { 
 491              		.loc 1 215 64 view .LVU95
 492 002e 01F00701 		and	r1, r1, #7
 493              	.LVL46:
 215:Core/Src/oled/ssd1306.c ****     } else { 
 494              		.loc 1 215 58 view .LVU96
 495 0032 0123     		movs	r3, #1
 496 0034 8B40     		lsls	r3, r3, r1
 215:Core/Src/oled/ssd1306.c ****     } else { 
 497              		.loc 1 215 53 view .LVU97
 498 0036 024A     		ldr	r2, .L46
ARM GAS  /tmp/cc0q0Vjh.s 			page 17


 499              	.LVL47:
 215:Core/Src/oled/ssd1306.c ****     } else { 
 500              		.loc 1 215 53 view .LVU98
 501 0038 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 502 003a 1943     		orrs	r1, r1, r3
 503 003c 1154     		strb	r1, [r2, r0]
 504 003e 7047     		bx	lr
 505              	.L47:
 506              		.align	2
 507              	.L46:
 508 0040 00000000 		.word	.LANCHOR0
 509              		.cfi_endproc
 510              	.LFE73:
 512              		.section	.text.ssd1306_WriteChar,"ax",%progbits
 513              		.align	1
 514              		.global	ssd1306_WriteChar
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 518              		.fpu softvfp
 520              	ssd1306_WriteChar:
 521              	.LVL48:
 522              	.LFB74:
 225:Core/Src/oled/ssd1306.c ****     uint32_t i, b, j;
 523              		.loc 1 225 68 is_stmt 1 view -0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 8
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 225:Core/Src/oled/ssd1306.c ****     uint32_t i, b, j;
 527              		.loc 1 225 68 is_stmt 0 view .LVU100
 528 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 529              	.LCFI9:
 530              		.cfi_def_cfa_offset 36
 531              		.cfi_offset 4, -36
 532              		.cfi_offset 5, -32
 533              		.cfi_offset 6, -28
 534              		.cfi_offset 7, -24
 535              		.cfi_offset 8, -20
 536              		.cfi_offset 9, -16
 537              		.cfi_offset 10, -12
 538              		.cfi_offset 11, -8
 539              		.cfi_offset 14, -4
 540 0004 83B0     		sub	sp, sp, #12
 541              	.LCFI10:
 542              		.cfi_def_cfa_offset 48
 543 0006 8146     		mov	r9, r0
 544 0008 02A8     		add	r0, sp, #8
 545              	.LVL49:
 225:Core/Src/oled/ssd1306.c ****     uint32_t i, b, j;
 546              		.loc 1 225 68 view .LVU101
 547 000a 00E90600 		stmdb	r0, {r1, r2}
 548 000e 1F46     		mov	r7, r3
 226:Core/Src/oled/ssd1306.c ****     
 549              		.loc 1 226 5 is_stmt 1 view .LVU102
 229:Core/Src/oled/ssd1306.c ****         return 0;
 550              		.loc 1 229 5 view .LVU103
 229:Core/Src/oled/ssd1306.c ****         return 0;
ARM GAS  /tmp/cc0q0Vjh.s 			page 18


 551              		.loc 1 229 17 is_stmt 0 view .LVU104
 552 0010 A9F12003 		sub	r3, r9, #32
 553              	.LVL50:
 229:Core/Src/oled/ssd1306.c ****         return 0;
 554              		.loc 1 229 17 view .LVU105
 555 0014 DBB2     		uxtb	r3, r3
 229:Core/Src/oled/ssd1306.c ****         return 0;
 556              		.loc 1 229 8 view .LVU106
 557 0016 5E2B     		cmp	r3, #94
 558 0018 41D8     		bhi	.L56
 233:Core/Src/oled/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 559              		.loc 1 233 5 is_stmt 1 view .LVU107
 233:Core/Src/oled/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 560              		.loc 1 233 33 is_stmt 0 view .LVU108
 561 001a 254B     		ldr	r3, .L62
 562 001c 1B88     		ldrh	r3, [r3]
 233:Core/Src/oled/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 563              		.loc 1 233 49 view .LVU109
 564 001e 9DF80060 		ldrb	r6, [sp]	@ zero_extendqisi2
 233:Core/Src/oled/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 565              		.loc 1 233 43 view .LVU110
 566 0022 3344     		add	r3, r3, r6
 233:Core/Src/oled/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 567              		.loc 1 233 8 view .LVU111
 568 0024 802B     		cmp	r3, #128
 569 0026 3EDC     		bgt	.L57
 234:Core/Src/oled/ssd1306.c ****     {
 570              		.loc 1 234 34 discriminator 1 view .LVU112
 571 0028 214B     		ldr	r3, .L62
 572 002a 5B88     		ldrh	r3, [r3, #2]
 234:Core/Src/oled/ssd1306.c ****     {
 573              		.loc 1 234 50 discriminator 1 view .LVU113
 574 002c 9DF801A0 		ldrb	r10, [sp, #1]	@ zero_extendqisi2
 575 0030 D346     		mov	fp, r10
 234:Core/Src/oled/ssd1306.c ****     {
 576              		.loc 1 234 44 discriminator 1 view .LVU114
 577 0032 5344     		add	r3, r3, r10
 233:Core/Src/oled/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 578              		.loc 1 233 61 discriminator 1 view .LVU115
 579 0034 402B     		cmp	r3, #64
 580 0036 38DC     		bgt	.L58
 241:Core/Src/oled/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 581              		.loc 1 241 11 view .LVU116
 582 0038 0025     		movs	r5, #0
 583 003a 1FE0     		b	.L50
 584              	.LVL51:
 585              	.L52:
 247:Core/Src/oled/ssd1306.c ****             }
 586              		.loc 1 247 17 is_stmt 1 view .LVU117
 247:Core/Src/oled/ssd1306.c ****             }
 587              		.loc 1 247 42 is_stmt 0 view .LVU118
 588 003c 1C4B     		ldr	r3, .L62
 589 003e 1888     		ldrh	r0, [r3]
 247:Core/Src/oled/ssd1306.c ****             }
 590              		.loc 1 247 65 view .LVU119
 591 0040 5988     		ldrh	r1, [r3, #2]
 247:Core/Src/oled/ssd1306.c ****             }
ARM GAS  /tmp/cc0q0Vjh.s 			page 19


 592              		.loc 1 247 17 view .LVU120
 593 0042 2944     		add	r1, r1, r5
 594 0044 2044     		add	r0, r0, r4
 595 0046 B7FA87F2 		clz	r2, r7
 596 004a 5209     		lsrs	r2, r2, #5
 597 004c C9B2     		uxtb	r1, r1
 598 004e C0B2     		uxtb	r0, r0
 599 0050 FFF7FEFF 		bl	ssd1306_DrawPixel
 600              	.LVL52:
 601              	.L53:
 243:Core/Src/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 602              		.loc 1 243 40 is_stmt 1 discriminator 2 view .LVU121
 243:Core/Src/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 603              		.loc 1 243 41 is_stmt 0 discriminator 2 view .LVU122
 604 0054 0134     		adds	r4, r4, #1
 605              	.LVL53:
 606              	.L51:
 243:Core/Src/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 607              		.loc 1 243 20 is_stmt 1 discriminator 1 view .LVU123
 243:Core/Src/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 608              		.loc 1 243 9 is_stmt 0 discriminator 1 view .LVU124
 609 0056 A642     		cmp	r6, r4
 610 0058 0FD9     		bls	.L60
 244:Core/Src/oled/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 611              		.loc 1 244 13 is_stmt 1 view .LVU125
 244:Core/Src/oled/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 612              		.loc 1 244 19 is_stmt 0 view .LVU126
 613 005a 08FA04F3 		lsl	r3, r8, r4
 244:Core/Src/oled/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 614              		.loc 1 244 15 view .LVU127
 615 005e 13F4004F 		tst	r3, #32768
 616 0062 EBD0     		beq	.L52
 245:Core/Src/oled/ssd1306.c ****             } else {
 617              		.loc 1 245 17 is_stmt 1 view .LVU128
 245:Core/Src/oled/ssd1306.c ****             } else {
 618              		.loc 1 245 42 is_stmt 0 view .LVU129
 619 0064 124B     		ldr	r3, .L62
 620 0066 1888     		ldrh	r0, [r3]
 245:Core/Src/oled/ssd1306.c ****             } else {
 621              		.loc 1 245 65 view .LVU130
 622 0068 5988     		ldrh	r1, [r3, #2]
 245:Core/Src/oled/ssd1306.c ****             } else {
 623              		.loc 1 245 17 view .LVU131
 624 006a 2944     		add	r1, r1, r5
 625 006c 2044     		add	r0, r0, r4
 626 006e 3A46     		mov	r2, r7
 627 0070 C9B2     		uxtb	r1, r1
 628 0072 C0B2     		uxtb	r0, r0
 629 0074 FFF7FEFF 		bl	ssd1306_DrawPixel
 630              	.LVL54:
 631 0078 ECE7     		b	.L53
 632              	.L60:
 241:Core/Src/oled/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 633              		.loc 1 241 37 is_stmt 1 discriminator 2 view .LVU132
 241:Core/Src/oled/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 634              		.loc 1 241 38 is_stmt 0 discriminator 2 view .LVU133
 635 007a 0135     		adds	r5, r5, #1
ARM GAS  /tmp/cc0q0Vjh.s 			page 20


 636              	.LVL55:
 637              	.L50:
 241:Core/Src/oled/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 638              		.loc 1 241 16 is_stmt 1 discriminator 1 view .LVU134
 241:Core/Src/oled/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 639              		.loc 1 241 5 is_stmt 0 discriminator 1 view .LVU135
 640 007c AA45     		cmp	r10, r5
 641 007e 08D9     		bls	.L61
 242:Core/Src/oled/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 642              		.loc 1 242 9 is_stmt 1 view .LVU136
 242:Core/Src/oled/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 643              		.loc 1 242 27 is_stmt 0 view .LVU137
 644 0080 A9F12003 		sub	r3, r9, #32
 242:Core/Src/oled/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 645              		.loc 1 242 51 view .LVU138
 646 0084 03FB0B53 		mla	r3, r3, fp, r5
 242:Core/Src/oled/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 647              		.loc 1 242 22 view .LVU139
 648 0088 019A     		ldr	r2, [sp, #4]
 649 008a 32F81380 		ldrh	r8, [r2, r3, lsl #1]
 650              	.LVL56:
 243:Core/Src/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 651              		.loc 1 243 9 is_stmt 1 view .LVU140
 243:Core/Src/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 652              		.loc 1 243 15 is_stmt 0 view .LVU141
 653 008e 0024     		movs	r4, #0
 243:Core/Src/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 654              		.loc 1 243 9 view .LVU142
 655 0090 E1E7     		b	.L51
 656              	.LVL57:
 657              	.L61:
 253:Core/Src/oled/ssd1306.c ****     
 658              		.loc 1 253 5 is_stmt 1 view .LVU143
 253:Core/Src/oled/ssd1306.c ****     
 659              		.loc 1 253 22 is_stmt 0 view .LVU144
 660 0092 074B     		ldr	r3, .L62
 661 0094 1A88     		ldrh	r2, [r3]
 662 0096 1644     		add	r6, r6, r2
 663 0098 1E80     		strh	r6, [r3]	@ movhi
 256:Core/Src/oled/ssd1306.c **** }
 664              		.loc 1 256 5 is_stmt 1 view .LVU145
 256:Core/Src/oled/ssd1306.c **** }
 665              		.loc 1 256 12 is_stmt 0 view .LVU146
 666 009a 4846     		mov	r0, r9
 667 009c 00E0     		b	.L49
 668              	.LVL58:
 669              	.L56:
 230:Core/Src/oled/ssd1306.c ****     
 670              		.loc 1 230 16 view .LVU147
 671 009e 0020     		movs	r0, #0
 672              	.L49:
 257:Core/Src/oled/ssd1306.c **** 
 673              		.loc 1 257 1 view .LVU148
 674 00a0 03B0     		add	sp, sp, #12
 675              	.LCFI11:
 676              		.cfi_remember_state
 677              		.cfi_def_cfa_offset 36
ARM GAS  /tmp/cc0q0Vjh.s 			page 21


 678              		@ sp needed
 679 00a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 680              	.L57:
 681              	.LCFI12:
 682              		.cfi_restore_state
 237:Core/Src/oled/ssd1306.c ****     }
 683              		.loc 1 237 16 view .LVU149
 684 00a6 0020     		movs	r0, #0
 685 00a8 FAE7     		b	.L49
 686              	.L58:
 687 00aa 0020     		movs	r0, #0
 688 00ac F8E7     		b	.L49
 689              	.L63:
 690 00ae 00BF     		.align	2
 691              	.L62:
 692 00b0 00000000 		.word	.LANCHOR1
 693              		.cfi_endproc
 694              	.LFE74:
 696              		.section	.text.ssd1306_WriteString,"ax",%progbits
 697              		.align	1
 698              		.global	ssd1306_WriteString
 699              		.syntax unified
 700              		.thumb
 701              		.thumb_func
 702              		.fpu softvfp
 704              	ssd1306_WriteString:
 705              	.LVL59:
 706              	.LFB75:
 260:Core/Src/oled/ssd1306.c ****     // Write until null-byte
 707              		.loc 1 260 72 is_stmt 1 view -0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 8
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 260:Core/Src/oled/ssd1306.c ****     // Write until null-byte
 711              		.loc 1 260 72 is_stmt 0 view .LVU151
 712 0000 30B5     		push	{r4, r5, lr}
 713              	.LCFI13:
 714              		.cfi_def_cfa_offset 12
 715              		.cfi_offset 4, -12
 716              		.cfi_offset 5, -8
 717              		.cfi_offset 14, -4
 718 0002 83B0     		sub	sp, sp, #12
 719              	.LCFI14:
 720              		.cfi_def_cfa_offset 24
 721 0004 0446     		mov	r4, r0
 722 0006 02A8     		add	r0, sp, #8
 723              	.LVL60:
 260:Core/Src/oled/ssd1306.c ****     // Write until null-byte
 724              		.loc 1 260 72 view .LVU152
 725 0008 00E90600 		stmdb	r0, {r1, r2}
 726 000c 1D46     		mov	r5, r3
 262:Core/Src/oled/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 727              		.loc 1 262 5 is_stmt 1 view .LVU153
 728              	.LVL61:
 729              	.L65:
 262:Core/Src/oled/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 730              		.loc 1 262 11 view .LVU154
ARM GAS  /tmp/cc0q0Vjh.s 			page 22


 262:Core/Src/oled/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 731              		.loc 1 262 12 is_stmt 0 view .LVU155
 732 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 262:Core/Src/oled/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 733              		.loc 1 262 11 view .LVU156
 734 0010 58B1     		cbz	r0, .L66
 263:Core/Src/oled/ssd1306.c ****             // Char could not be written
 735              		.loc 1 263 9 is_stmt 1 view .LVU157
 263:Core/Src/oled/ssd1306.c ****             // Char could not be written
 736              		.loc 1 263 13 is_stmt 0 view .LVU158
 737 0012 2B46     		mov	r3, r5
 738 0014 02AA     		add	r2, sp, #8
 739 0016 12E90600 		ldmdb	r2, {r1, r2}
 740 001a FFF7FEFF 		bl	ssd1306_WriteChar
 741              	.LVL62:
 742 001e 0246     		mov	r2, r0
 263:Core/Src/oled/ssd1306.c ****             // Char could not be written
 743              		.loc 1 263 53 view .LVU159
 744 0020 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 263:Core/Src/oled/ssd1306.c ****             // Char could not be written
 745              		.loc 1 263 12 view .LVU160
 746 0022 8242     		cmp	r2, r0
 747 0024 01D1     		bne	.L66
 269:Core/Src/oled/ssd1306.c ****     }
 748              		.loc 1 269 9 is_stmt 1 view .LVU161
 269:Core/Src/oled/ssd1306.c ****     }
 749              		.loc 1 269 12 is_stmt 0 view .LVU162
 750 0026 0134     		adds	r4, r4, #1
 751              	.LVL63:
 269:Core/Src/oled/ssd1306.c ****     }
 752              		.loc 1 269 12 view .LVU163
 753 0028 F1E7     		b	.L65
 754              	.L66:
 274:Core/Src/oled/ssd1306.c **** 
 755              		.loc 1 274 1 view .LVU164
 756 002a 03B0     		add	sp, sp, #12
 757              	.LCFI15:
 758              		.cfi_def_cfa_offset 12
 759              		@ sp needed
 760 002c 30BD     		pop	{r4, r5, pc}
 274:Core/Src/oled/ssd1306.c **** 
 761              		.loc 1 274 1 view .LVU165
 762              		.cfi_endproc
 763              	.LFE75:
 765              		.section	.text.ssd1306_SetCursor,"ax",%progbits
 766              		.align	1
 767              		.global	ssd1306_SetCursor
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu softvfp
 773              	ssd1306_SetCursor:
 774              	.LVL64:
 775              	.LFB76:
 277:Core/Src/oled/ssd1306.c ****     SSD1306.CurrentX = x;
 776              		.loc 1 277 46 is_stmt 1 view -0
 777              		.cfi_startproc
ARM GAS  /tmp/cc0q0Vjh.s 			page 23


 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              		@ link register save eliminated.
 278:Core/Src/oled/ssd1306.c ****     SSD1306.CurrentY = y;
 781              		.loc 1 278 5 view .LVU167
 278:Core/Src/oled/ssd1306.c ****     SSD1306.CurrentY = y;
 782              		.loc 1 278 22 is_stmt 0 view .LVU168
 783 0000 014B     		ldr	r3, .L70
 784 0002 1880     		strh	r0, [r3]	@ movhi
 279:Core/Src/oled/ssd1306.c **** }
 785              		.loc 1 279 5 is_stmt 1 view .LVU169
 279:Core/Src/oled/ssd1306.c **** }
 786              		.loc 1 279 22 is_stmt 0 view .LVU170
 787 0004 5980     		strh	r1, [r3, #2]	@ movhi
 280:Core/Src/oled/ssd1306.c **** 
 788              		.loc 1 280 1 view .LVU171
 789 0006 7047     		bx	lr
 790              	.L71:
 791              		.align	2
 792              	.L70:
 793 0008 00000000 		.word	.LANCHOR1
 794              		.cfi_endproc
 795              	.LFE76:
 797              		.section	.text.ssd1306_Line,"ax",%progbits
 798              		.align	1
 799              		.global	ssd1306_Line
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu softvfp
 805              	ssd1306_Line:
 806              	.LVL65:
 807              	.LFB77:
 283:Core/Src/oled/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 808              		.loc 1 283 88 is_stmt 1 view -0
 809              		.cfi_startproc
 810              		@ args = 4, pretend = 0, frame = 8
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 283:Core/Src/oled/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 812              		.loc 1 283 88 is_stmt 0 view .LVU173
 813 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 814              	.LCFI16:
 815              		.cfi_def_cfa_offset 36
 816              		.cfi_offset 4, -36
 817              		.cfi_offset 5, -32
 818              		.cfi_offset 6, -28
 819              		.cfi_offset 7, -24
 820              		.cfi_offset 8, -20
 821              		.cfi_offset 9, -16
 822              		.cfi_offset 10, -12
 823              		.cfi_offset 11, -8
 824              		.cfi_offset 14, -4
 825 0004 83B0     		sub	sp, sp, #12
 826              	.LCFI17:
 827              		.cfi_def_cfa_offset 48
 828 0006 0446     		mov	r4, r0
 829 0008 0E46     		mov	r6, r1
ARM GAS  /tmp/cc0q0Vjh.s 			page 24


 830 000a 9146     		mov	r9, r2
 831 000c 9B46     		mov	fp, r3
 832 000e 9DF830A0 		ldrb	r10, [sp, #48]	@ zero_extendqisi2
 284:Core/Src/oled/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 833              		.loc 1 284 3 is_stmt 1 view .LVU174
 284:Core/Src/oled/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 834              		.loc 1 284 27 is_stmt 0 view .LVU175
 835 0012 A2EB0008 		sub	r8, r2, r0
 284:Core/Src/oled/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 836              		.loc 1 284 11 view .LVU176
 837 0016 B8F1000F 		cmp	r8, #0
 838 001a B8BF     		it	lt
 839 001c C8F10008 		rsblt	r8, r8, #0
 840              	.LVL66:
 285:Core/Src/oled/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 841              		.loc 1 285 3 is_stmt 1 view .LVU177
 285:Core/Src/oled/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 842              		.loc 1 285 27 is_stmt 0 view .LVU178
 843 0020 5F1A     		subs	r7, r3, r1
 285:Core/Src/oled/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 844              		.loc 1 285 11 view .LVU179
 845 0022 002F     		cmp	r7, #0
 846 0024 B8BF     		it	lt
 847 0026 7F42     		rsblt	r7, r7, #0
 848              	.LVL67:
 286:Core/Src/oled/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 849              		.loc 1 286 3 is_stmt 1 view .LVU180
 286:Core/Src/oled/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 850              		.loc 1 286 34 is_stmt 0 view .LVU181
 851 0028 8242     		cmp	r2, r0
 852 002a 0DD9     		bls	.L79
 853 002c 0123     		movs	r3, #1
 854              	.LVL68:
 286:Core/Src/oled/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 855              		.loc 1 286 34 view .LVU182
 856 002e 0093     		str	r3, [sp]
 857              	.L73:
 858              	.LVL69:
 287:Core/Src/oled/ssd1306.c ****   int32_t error = deltaX - deltaY;
 859              		.loc 1 287 3 is_stmt 1 discriminator 4 view .LVU183
 287:Core/Src/oled/ssd1306.c ****   int32_t error = deltaX - deltaY;
 860              		.loc 1 287 34 is_stmt 0 discriminator 4 view .LVU184
 861 0030 B345     		cmp	fp, r6
 862 0032 0DD9     		bls	.L80
 287:Core/Src/oled/ssd1306.c ****   int32_t error = deltaX - deltaY;
 863              		.loc 1 287 34 view .LVU185
 864 0034 0123     		movs	r3, #1
 865 0036 0193     		str	r3, [sp, #4]
 866              	.L74:
 867              	.LVL70:
 288:Core/Src/oled/ssd1306.c ****   int32_t error2;
 868              		.loc 1 288 3 is_stmt 1 discriminator 4 view .LVU186
 288:Core/Src/oled/ssd1306.c ****   int32_t error2;
 869              		.loc 1 288 11 is_stmt 0 discriminator 4 view .LVU187
 870 0038 A8EB0705 		sub	r5, r8, r7
 871              	.LVL71:
 289:Core/Src/oled/ssd1306.c ****     
ARM GAS  /tmp/cc0q0Vjh.s 			page 25


 872              		.loc 1 289 3 is_stmt 1 discriminator 4 view .LVU188
 291:Core/Src/oled/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 873              		.loc 1 291 3 discriminator 4 view .LVU189
 874 003c 5246     		mov	r2, r10
 875              	.LVL72:
 291:Core/Src/oled/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 876              		.loc 1 291 3 is_stmt 0 discriminator 4 view .LVU190
 877 003e 5946     		mov	r1, fp
 878              	.LVL73:
 291:Core/Src/oled/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 879              		.loc 1 291 3 discriminator 4 view .LVU191
 880 0040 4846     		mov	r0, r9
 881              	.LVL74:
 291:Core/Src/oled/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 882              		.loc 1 291 3 discriminator 4 view .LVU192
 883 0042 FFF7FEFF 		bl	ssd1306_DrawPixel
 884              	.LVL75:
 292:Core/Src/oled/ssd1306.c ****     {
 885              		.loc 1 292 5 is_stmt 1 discriminator 4 view .LVU193
 292:Core/Src/oled/ssd1306.c ****     {
 886              		.loc 1 292 10 is_stmt 0 discriminator 4 view .LVU194
 887 0046 1BE0     		b	.L75
 888              	.LVL76:
 889              	.L79:
 286:Core/Src/oled/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 890              		.loc 1 286 34 view .LVU195
 891 0048 4FF0FF33 		mov	r3, #-1
 892              	.LVL77:
 286:Core/Src/oled/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 893              		.loc 1 286 34 view .LVU196
 894 004c 0093     		str	r3, [sp]
 895 004e EFE7     		b	.L73
 896              	.LVL78:
 897              	.L80:
 287:Core/Src/oled/ssd1306.c ****   int32_t error = deltaX - deltaY;
 898              		.loc 1 287 34 view .LVU197
 899 0050 4FF0FF33 		mov	r3, #-1
 900 0054 0193     		str	r3, [sp, #4]
 901 0056 EFE7     		b	.L74
 902              	.LVL79:
 903              	.L78:
 294:Core/Src/oled/ssd1306.c ****     error2 = error * 2;
 904              		.loc 1 294 5 is_stmt 1 view .LVU198
 905 0058 5246     		mov	r2, r10
 906 005a 3146     		mov	r1, r6
 907 005c 2046     		mov	r0, r4
 908 005e FFF7FEFF 		bl	ssd1306_DrawPixel
 909              	.LVL80:
 295:Core/Src/oled/ssd1306.c ****     if(error2 > -deltaY)
 910              		.loc 1 295 5 view .LVU199
 295:Core/Src/oled/ssd1306.c ****     if(error2 > -deltaY)
 911              		.loc 1 295 12 is_stmt 0 view .LVU200
 912 0062 6B00     		lsls	r3, r5, #1
 913              	.LVL81:
 296:Core/Src/oled/ssd1306.c ****     {
 914              		.loc 1 296 5 is_stmt 1 view .LVU201
 296:Core/Src/oled/ssd1306.c ****     {
ARM GAS  /tmp/cc0q0Vjh.s 			page 26


 915              		.loc 1 296 17 is_stmt 0 view .LVU202
 916 0064 7A42     		rsbs	r2, r7, #0
 296:Core/Src/oled/ssd1306.c ****     {
 917              		.loc 1 296 7 view .LVU203
 918 0066 B2EB450F 		cmp	r2, r5, lsl #1
 919 006a 03DA     		bge	.L76
 298:Core/Src/oled/ssd1306.c ****       x1 += signX;
 920              		.loc 1 298 7 is_stmt 1 view .LVU204
 298:Core/Src/oled/ssd1306.c ****       x1 += signX;
 921              		.loc 1 298 13 is_stmt 0 view .LVU205
 922 006c ED1B     		subs	r5, r5, r7
 923              	.LVL82:
 299:Core/Src/oled/ssd1306.c ****     }
 924              		.loc 1 299 7 is_stmt 1 view .LVU206
 299:Core/Src/oled/ssd1306.c ****     }
 925              		.loc 1 299 10 is_stmt 0 view .LVU207
 926 006e 009A     		ldr	r2, [sp]
 927 0070 1444     		add	r4, r4, r2
 928              	.LVL83:
 299:Core/Src/oled/ssd1306.c ****     }
 929              		.loc 1 299 10 view .LVU208
 930 0072 E4B2     		uxtb	r4, r4
 931              	.LVL84:
 932              	.L76:
 304:Core/Src/oled/ssd1306.c ****         
 933              		.loc 1 304 5 is_stmt 1 view .LVU209
 306:Core/Src/oled/ssd1306.c ****     {
 934              		.loc 1 306 5 view .LVU210
 306:Core/Src/oled/ssd1306.c ****     {
 935              		.loc 1 306 7 is_stmt 0 view .LVU211
 936 0074 9845     		cmp	r8, r3
 937 0076 03DD     		ble	.L75
 308:Core/Src/oled/ssd1306.c ****       y1 += signY;
 938              		.loc 1 308 7 is_stmt 1 view .LVU212
 308:Core/Src/oled/ssd1306.c ****       y1 += signY;
 939              		.loc 1 308 13 is_stmt 0 view .LVU213
 940 0078 4544     		add	r5, r5, r8
 941              	.LVL85:
 309:Core/Src/oled/ssd1306.c ****     }
 942              		.loc 1 309 7 is_stmt 1 view .LVU214
 309:Core/Src/oled/ssd1306.c ****     }
 943              		.loc 1 309 10 is_stmt 0 view .LVU215
 944 007a 019B     		ldr	r3, [sp, #4]
 945              	.LVL86:
 309:Core/Src/oled/ssd1306.c ****     }
 946              		.loc 1 309 10 view .LVU216
 947 007c 1E44     		add	r6, r6, r3
 948              	.LVL87:
 309:Core/Src/oled/ssd1306.c ****     }
 949              		.loc 1 309 10 view .LVU217
 950 007e F6B2     		uxtb	r6, r6
 951              	.LVL88:
 952              	.L75:
 314:Core/Src/oled/ssd1306.c ****   }
 953              		.loc 1 314 5 is_stmt 1 view .LVU218
 292:Core/Src/oled/ssd1306.c ****     {
 954              		.loc 1 292 10 view .LVU219
ARM GAS  /tmp/cc0q0Vjh.s 			page 27


 955 0080 4C45     		cmp	r4, r9
 956 0082 E9D1     		bne	.L78
 292:Core/Src/oled/ssd1306.c ****     {
 957              		.loc 1 292 22 is_stmt 0 discriminator 1 view .LVU220
 958 0084 5E45     		cmp	r6, fp
 959 0086 E7D1     		bne	.L78
 317:Core/Src/oled/ssd1306.c **** //Draw polyline
 960              		.loc 1 317 1 view .LVU221
 961 0088 03B0     		add	sp, sp, #12
 962              	.LCFI18:
 963              		.cfi_def_cfa_offset 36
 964              	.LVL89:
 317:Core/Src/oled/ssd1306.c **** //Draw polyline
 965              		.loc 1 317 1 view .LVU222
 966              		@ sp needed
 967 008a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 317:Core/Src/oled/ssd1306.c **** //Draw polyline
 968              		.loc 1 317 1 view .LVU223
 969              		.cfi_endproc
 970              	.LFE77:
 972              		.section	.text.ssd1306_Polyline,"ax",%progbits
 973              		.align	1
 974              		.global	ssd1306_Polyline
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu softvfp
 980              	ssd1306_Polyline:
 981              	.LVL90:
 982              	.LFB78:
 319:Core/Src/oled/ssd1306.c ****   uint16_t i;
 983              		.loc 1 319 97 is_stmt 1 view -0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 320:Core/Src/oled/ssd1306.c ****   if(par_vertex != 0){
 987              		.loc 1 320 3 view .LVU225
 321:Core/Src/oled/ssd1306.c ****     for(i = 1; i < par_size; i++){
 988              		.loc 1 321 3 view .LVU226
 321:Core/Src/oled/ssd1306.c ****     for(i = 1; i < par_size; i++){
 989              		.loc 1 321 5 is_stmt 0 view .LVU227
 990 0000 38B1     		cbz	r0, .L90
 319:Core/Src/oled/ssd1306.c ****   uint16_t i;
 991              		.loc 1 319 97 view .LVU228
 992 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 993              	.LCFI19:
 994              		.cfi_def_cfa_offset 24
 995              		.cfi_offset 4, -24
 996              		.cfi_offset 5, -20
 997              		.cfi_offset 6, -16
 998              		.cfi_offset 7, -12
 999              		.cfi_offset 8, -8
 1000              		.cfi_offset 14, -4
 1001 0006 82B0     		sub	sp, sp, #8
 1002              	.LCFI20:
 1003              		.cfi_def_cfa_offset 32
 1004 0008 0F46     		mov	r7, r1
ARM GAS  /tmp/cc0q0Vjh.s 			page 28


 1005 000a 9046     		mov	r8, r2
 1006 000c 0546     		mov	r5, r0
 322:Core/Src/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1007              		.loc 1 322 11 view .LVU229
 1008 000e 0124     		movs	r4, #1
 1009 0010 13E0     		b	.L83
 1010              	.L90:
 1011              	.LCFI21:
 1012              		.cfi_def_cfa_offset 0
 1013              		.cfi_restore 4
 1014              		.cfi_restore 5
 1015              		.cfi_restore 6
 1016              		.cfi_restore 7
 1017              		.cfi_restore 8
 1018              		.cfi_restore 14
 322:Core/Src/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1019              		.loc 1 322 11 view .LVU230
 1020 0012 7047     		bx	lr
 1021              	.LVL91:
 1022              	.L85:
 1023              	.LCFI22:
 1024              		.cfi_def_cfa_offset 32
 1025              		.cfi_offset 4, -24
 1026              		.cfi_offset 5, -20
 1027              		.cfi_offset 6, -16
 1028              		.cfi_offset 7, -12
 1029              		.cfi_offset 8, -8
 1030              		.cfi_offset 14, -4
 323:Core/Src/oled/ssd1306.c ****     }
 1031              		.loc 1 323 7 is_stmt 1 discriminator 3 view .LVU231
 323:Core/Src/oled/ssd1306.c ****     }
 1032              		.loc 1 323 30 is_stmt 0 discriminator 3 view .LVU232
 1033 0014 04F10040 		add	r0, r4, #-2147483648
 1034 0018 0138     		subs	r0, r0, #1
 1035 001a 05EB4006 		add	r6, r5, r0, lsl #1
 323:Core/Src/oled/ssd1306.c ****     }
 1036              		.loc 1 323 72 discriminator 3 view .LVU233
 1037 001e 05EB4403 		add	r3, r5, r4, lsl #1
 323:Core/Src/oled/ssd1306.c ****     }
 1038              		.loc 1 323 7 discriminator 3 view .LVU234
 1039 0022 CDF80080 		str	r8, [sp]
 1040 0026 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1041 0028 15F81420 		ldrb	r2, [r5, r4, lsl #1]	@ zero_extendqisi2
 1042 002c 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 1043 002e 15F81000 		ldrb	r0, [r5, r0, lsl #1]	@ zero_extendqisi2
 1044 0032 FFF7FEFF 		bl	ssd1306_Line
 1045              	.LVL92:
 322:Core/Src/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1046              		.loc 1 322 30 is_stmt 1 discriminator 3 view .LVU235
 322:Core/Src/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1047              		.loc 1 322 31 is_stmt 0 discriminator 3 view .LVU236
 1048 0036 0134     		adds	r4, r4, #1
 1049              	.LVL93:
 322:Core/Src/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1050              		.loc 1 322 31 discriminator 3 view .LVU237
 1051 0038 A4B2     		uxth	r4, r4
 1052              	.LVL94:
ARM GAS  /tmp/cc0q0Vjh.s 			page 29


 1053              	.L83:
 322:Core/Src/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1054              		.loc 1 322 16 is_stmt 1 discriminator 1 view .LVU238
 322:Core/Src/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1055              		.loc 1 322 5 is_stmt 0 discriminator 1 view .LVU239
 1056 003a BC42     		cmp	r4, r7
 1057 003c EAD3     		bcc	.L85
 331:Core/Src/oled/ssd1306.c **** /*Convert Degrees to Radians*/
 1058              		.loc 1 331 1 view .LVU240
 1059 003e 02B0     		add	sp, sp, #8
 1060              	.LCFI23:
 1061              		.cfi_def_cfa_offset 24
 1062              		@ sp needed
 1063 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 331:Core/Src/oled/ssd1306.c **** /*Convert Degrees to Radians*/
 1064              		.loc 1 331 1 view .LVU241
 1065              		.cfi_endproc
 1066              	.LFE78:
 1068              		.global	__aeabi_ui2f
 1069              		.global	__aeabi_fdiv
 1070              		.global	__aeabi_fmul
 1071              		.global	__aeabi_i2d
 1072              		.global	__aeabi_d2iz
 1073              		.section	.text.ssd1306_DrawArc,"ax",%progbits
 1074              		.align	1
 1075              		.global	ssd1306_DrawArc
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu softvfp
 1081              	ssd1306_DrawArc:
 1082              	.LVL95:
 1083              	.LFB81:
 350:Core/Src/oled/ssd1306.c **** /*DrawArc. Draw angle is beginning from 4 quart of trigonometric circle (3pi/2)
 351:Core/Src/oled/ssd1306.c ****  * start_angle in degree
 352:Core/Src/oled/ssd1306.c ****  * sweep in degree
 353:Core/Src/oled/ssd1306.c ****  */
 354:Core/Src/oled/ssd1306.c **** void ssd1306_DrawArc(uint8_t x, uint8_t y, uint8_t radius, uint16_t start_angle, uint16_t sweep, SS
 1084              		.loc 1 354 119 is_stmt 1 view -0
 1085              		.cfi_startproc
 1086              		@ args = 8, pretend = 0, frame = 32
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		.loc 1 354 119 is_stmt 0 view .LVU243
 1089 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1090              	.LCFI24:
 1091              		.cfi_def_cfa_offset 36
 1092              		.cfi_offset 4, -36
 1093              		.cfi_offset 5, -32
 1094              		.cfi_offset 6, -28
 1095              		.cfi_offset 7, -24
 1096              		.cfi_offset 8, -20
 1097              		.cfi_offset 9, -16
 1098              		.cfi_offset 10, -12
 1099              		.cfi_offset 11, -8
 1100              		.cfi_offset 14, -4
 1101 0004 8BB0     		sub	sp, sp, #44
 1102              	.LCFI25:
ARM GAS  /tmp/cc0q0Vjh.s 			page 30


 1103              		.cfi_def_cfa_offset 80
 1104 0006 8146     		mov	r9, r0
 1105 0008 8B46     		mov	fp, r1
 1106 000a 0792     		str	r2, [sp, #28]
 1107 000c 1D46     		mov	r5, r3
 1108 000e 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 1109              	.LVL96:
 1110              		.loc 1 354 119 view .LVU244
 1111 0012 0893     		str	r3, [sp, #32]
 355:Core/Src/oled/ssd1306.c ****     #define CIRCLE_APPROXIMATION_SEGMENTS 36
 356:Core/Src/oled/ssd1306.c ****     float approx_degree;
 1112              		.loc 1 356 5 is_stmt 1 view .LVU245
 357:Core/Src/oled/ssd1306.c ****     uint32_t approx_segments;
 1113              		.loc 1 357 5 view .LVU246
 358:Core/Src/oled/ssd1306.c ****     uint8_t xp1,xp2;
 1114              		.loc 1 358 5 view .LVU247
 359:Core/Src/oled/ssd1306.c ****     uint8_t yp1,yp2;
 1115              		.loc 1 359 5 view .LVU248
 360:Core/Src/oled/ssd1306.c ****     uint32_t count = 0;
 1116              		.loc 1 360 5 view .LVU249
 1117              	.LVL97:
 361:Core/Src/oled/ssd1306.c ****     uint32_t loc_sweep = 0;
 1118              		.loc 1 361 5 view .LVU250
 362:Core/Src/oled/ssd1306.c ****     float rad;
 1119              		.loc 1 362 5 view .LVU251
 363:Core/Src/oled/ssd1306.c ****     
 364:Core/Src/oled/ssd1306.c ****     loc_sweep = ssd1306_NormalizeTo0_360(sweep);
 1120              		.loc 1 364 5 view .LVU252
 1121              		.loc 1 364 17 is_stmt 0 view .LVU253
 1122 0014 BDF85000 		ldrh	r0, [sp, #80]
 1123              	.LVL98:
 1124              		.loc 1 364 17 view .LVU254
 1125 0018 FFF7FEFF 		bl	ssd1306_NormalizeTo0_360
 1126              	.LVL99:
 1127              		.loc 1 364 17 view .LVU255
 1128 001c 0446     		mov	r4, r0
 1129              	.LVL100:
 365:Core/Src/oled/ssd1306.c ****     
 366:Core/Src/oled/ssd1306.c ****     count = (ssd1306_NormalizeTo0_360(start_angle) * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 1130              		.loc 1 366 5 is_stmt 1 view .LVU256
 1131              		.loc 1 366 14 is_stmt 0 view .LVU257
 1132 001e 2846     		mov	r0, r5
 1133              	.LVL101:
 1134              		.loc 1 366 14 view .LVU258
 1135 0020 FFF7FEFF 		bl	ssd1306_NormalizeTo0_360
 1136              	.LVL102:
 1137              		.loc 1 366 85 view .LVU259
 1138 0024 444B     		ldr	r3, .L98
 1139 0026 83FB003A 		smull	r3, r10, r3, r0
 1140 002a C017     		asrs	r0, r0, #31
 1141 002c C0EBAA0A 		rsb	r10, r0, r10, asr #2
 1142              	.LVL103:
 367:Core/Src/oled/ssd1306.c ****     approx_segments = (loc_sweep * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 1143              		.loc 1 367 5 is_stmt 1 view .LVU260
 1144              		.loc 1 367 34 is_stmt 0 view .LVU261
 1145 0030 04EBC403 		add	r3, r4, r4, lsl #3
 1146              		.loc 1 367 21 view .LVU262
ARM GAS  /tmp/cc0q0Vjh.s 			page 31


 1147 0034 C3F35C03 		ubfx	r3, r3, #1, #29
 1148 0038 404A     		ldr	r2, .L98+4
 1149 003a A2FB0323 		umull	r2, r3, r2, r3
 1150 003e 9D08     		lsrs	r5, r3, #2
 1151              	.LVL104:
 368:Core/Src/oled/ssd1306.c ****     approx_degree = loc_sweep / (float)approx_segments;
 1152              		.loc 1 368 5 is_stmt 1 view .LVU263
 1153              		.loc 1 368 31 is_stmt 0 view .LVU264
 1154 0040 2046     		mov	r0, r4
 1155 0042 FFF7FEFF 		bl	__aeabi_ui2f
 1156              	.LVL105:
 1157 0046 0446     		mov	r4, r0
 1158              	.LVL106:
 1159              		.loc 1 368 31 view .LVU265
 1160 0048 0990     		str	r0, [sp, #36]	@ float
 1161              		.loc 1 368 33 view .LVU266
 1162 004a 2846     		mov	r0, r5
 1163 004c FFF7FEFF 		bl	__aeabi_ui2f
 1164              	.LVL107:
 1165 0050 0146     		mov	r1, r0
 1166              		.loc 1 368 19 view .LVU267
 1167 0052 2046     		mov	r0, r4
 1168 0054 FFF7FEFF 		bl	__aeabi_fdiv
 1169              	.LVL108:
 1170 0058 0746     		mov	r7, r0
 1171              	.LVL109:
 369:Core/Src/oled/ssd1306.c ****     while(count < approx_segments)
 1172              		.loc 1 369 5 is_stmt 1 view .LVU268
 1173 005a A846     		mov	r8, r5
 1174              		.loc 1 369 10 is_stmt 0 view .LVU269
 1175 005c 2BE0     		b	.L92
 1176              	.LVL110:
 1177              	.L93:
 370:Core/Src/oled/ssd1306.c ****     {
 371:Core/Src/oled/ssd1306.c ****         rad = ssd1306_DegToRad(count*approx_degree);
 372:Core/Src/oled/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 373:Core/Src/oled/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 374:Core/Src/oled/ssd1306.c ****         count++;
 375:Core/Src/oled/ssd1306.c ****         if(count != approx_segments)
 376:Core/Src/oled/ssd1306.c ****         {
 377:Core/Src/oled/ssd1306.c ****             rad = ssd1306_DegToRad(count*approx_degree);
 378:Core/Src/oled/ssd1306.c ****         }
 379:Core/Src/oled/ssd1306.c ****         else
 380:Core/Src/oled/ssd1306.c ****         {            
 381:Core/Src/oled/ssd1306.c ****             rad = ssd1306_DegToRad(loc_sweep);
 1178              		.loc 1 381 13 is_stmt 1 view .LVU270
 1179              		.loc 1 381 19 is_stmt 0 view .LVU271
 1180 005e 0998     		ldr	r0, [sp, #36]	@ float
 1181 0060 FFF7FEFF 		bl	ssd1306_DegToRad
 1182              	.LVL111:
 1183              	.L94:
 382:Core/Src/oled/ssd1306.c ****         }
 383:Core/Src/oled/ssd1306.c ****         xp2 = x + (int8_t)(sin(rad)*radius);
 1184              		.loc 1 383 9 is_stmt 1 view .LVU272
 1185              		.loc 1 383 28 is_stmt 0 view .LVU273
 1186 0064 FFF7FEFF 		bl	__aeabi_f2d
 1187              	.LVL112:
ARM GAS  /tmp/cc0q0Vjh.s 			page 32


 1188              		.loc 1 383 28 view .LVU274
 1189 0068 0246     		mov	r2, r0
 1190 006a 0B46     		mov	r3, r1
 1191 006c CDE90423 		strd	r2, [sp, #16]
 1192 0070 FFF7FEFF 		bl	sin
 1193              	.LVL113:
 1194 0074 0246     		mov	r2, r0
 1195 0076 0B46     		mov	r3, r1
 1196              		.loc 1 383 36 view .LVU275
 1197 0078 DDE90201 		ldrd	r0, [sp, #8]
 1198 007c FFF7FEFF 		bl	__aeabi_dmul
 1199              	.LVL114:
 1200              		.loc 1 383 19 view .LVU276
 1201 0080 FFF7FEFF 		bl	__aeabi_d2iz
 1202              	.LVL115:
 1203 0084 C5B2     		uxtb	r5, r0
 1204              		.loc 1 383 13 view .LVU277
 1205 0086 4D44     		add	r5, r5, r9
 1206 0088 EDB2     		uxtb	r5, r5
 1207              	.LVL116:
 384:Core/Src/oled/ssd1306.c ****         yp2 = y + (int8_t)(cos(rad)*radius);    
 1208              		.loc 1 384 9 is_stmt 1 view .LVU278
 1209              		.loc 1 384 28 is_stmt 0 view .LVU279
 1210 008a DDE90401 		ldrd	r0, [sp, #16]
 1211 008e FFF7FEFF 		bl	cos
 1212              	.LVL117:
 1213 0092 0246     		mov	r2, r0
 1214 0094 0B46     		mov	r3, r1
 1215              		.loc 1 384 36 view .LVU280
 1216 0096 DDE90201 		ldrd	r0, [sp, #8]
 1217 009a FFF7FEFF 		bl	__aeabi_dmul
 1218              	.LVL118:
 1219              		.loc 1 384 19 view .LVU281
 1220 009e FFF7FEFF 		bl	__aeabi_d2iz
 1221              	.LVL119:
 1222 00a2 C3B2     		uxtb	r3, r0
 1223              		.loc 1 384 13 view .LVU282
 1224 00a4 5B44     		add	r3, r3, fp
 1225              	.LVL120:
 385:Core/Src/oled/ssd1306.c ****         ssd1306_Line(xp1,yp1,xp2,yp2,color);
 1226              		.loc 1 385 9 is_stmt 1 view .LVU283
 1227 00a6 089A     		ldr	r2, [sp, #32]
 1228 00a8 0092     		str	r2, [sp]
 1229 00aa DBB2     		uxtb	r3, r3
 1230              		.loc 1 385 9 is_stmt 0 view .LVU284
 1231 00ac 2A46     		mov	r2, r5
 1232 00ae 2146     		mov	r1, r4
 1233 00b0 3046     		mov	r0, r6
 1234 00b2 FFF7FEFF 		bl	ssd1306_Line
 1235              	.LVL121:
 1236              	.L92:
 369:Core/Src/oled/ssd1306.c ****     {
 1237              		.loc 1 369 10 is_stmt 1 view .LVU285
 1238 00b6 C245     		cmp	r10, r8
 1239 00b8 3BD2     		bcs	.L97
 371:Core/Src/oled/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 1240              		.loc 1 371 9 view .LVU286
ARM GAS  /tmp/cc0q0Vjh.s 			page 33


 371:Core/Src/oled/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 1241              		.loc 1 371 15 is_stmt 0 view .LVU287
 1242 00ba 5046     		mov	r0, r10
 1243 00bc FFF7FEFF 		bl	__aeabi_ui2f
 1244              	.LVL122:
 1245 00c0 3946     		mov	r1, r7
 1246 00c2 FFF7FEFF 		bl	__aeabi_fmul
 1247              	.LVL123:
 1248 00c6 FFF7FEFF 		bl	ssd1306_DegToRad
 1249              	.LVL124:
 372:Core/Src/oled/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1250              		.loc 1 372 9 is_stmt 1 view .LVU288
 372:Core/Src/oled/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1251              		.loc 1 372 28 is_stmt 0 view .LVU289
 1252 00ca FFF7FEFF 		bl	__aeabi_f2d
 1253              	.LVL125:
 372:Core/Src/oled/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1254              		.loc 1 372 28 view .LVU290
 1255 00ce 0446     		mov	r4, r0
 1256 00d0 0D46     		mov	r5, r1
 1257 00d2 FFF7FEFF 		bl	sin
 1258              	.LVL126:
 1259 00d6 CDE90401 		strd	r0, [sp, #16]
 372:Core/Src/oled/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1260              		.loc 1 372 36 view .LVU291
 1261 00da 0798     		ldr	r0, [sp, #28]
 1262 00dc FFF7FEFF 		bl	__aeabi_i2d
 1263              	.LVL127:
 1264 00e0 0246     		mov	r2, r0
 1265 00e2 0B46     		mov	r3, r1
 1266 00e4 CDE90223 		strd	r2, [sp, #8]
 1267 00e8 DDE90401 		ldrd	r0, [sp, #16]
 1268 00ec FFF7FEFF 		bl	__aeabi_dmul
 1269              	.LVL128:
 372:Core/Src/oled/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1270              		.loc 1 372 19 view .LVU292
 1271 00f0 FFF7FEFF 		bl	__aeabi_d2iz
 1272              	.LVL129:
 1273 00f4 C6B2     		uxtb	r6, r0
 372:Core/Src/oled/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1274              		.loc 1 372 13 view .LVU293
 1275 00f6 4E44     		add	r6, r6, r9
 1276 00f8 F6B2     		uxtb	r6, r6
 1277              	.LVL130:
 373:Core/Src/oled/ssd1306.c ****         count++;
 1278              		.loc 1 373 9 is_stmt 1 view .LVU294
 373:Core/Src/oled/ssd1306.c ****         count++;
 1279              		.loc 1 373 28 is_stmt 0 view .LVU295
 1280 00fa 2046     		mov	r0, r4
 1281 00fc 2946     		mov	r1, r5
 1282 00fe FFF7FEFF 		bl	cos
 1283              	.LVL131:
 1284 0102 0246     		mov	r2, r0
 1285 0104 0B46     		mov	r3, r1
 373:Core/Src/oled/ssd1306.c ****         count++;
 1286              		.loc 1 373 36 view .LVU296
 1287 0106 DDE90201 		ldrd	r0, [sp, #8]
ARM GAS  /tmp/cc0q0Vjh.s 			page 34


 1288 010a FFF7FEFF 		bl	__aeabi_dmul
 1289              	.LVL132:
 373:Core/Src/oled/ssd1306.c ****         count++;
 1290              		.loc 1 373 19 view .LVU297
 1291 010e FFF7FEFF 		bl	__aeabi_d2iz
 1292              	.LVL133:
 1293 0112 C4B2     		uxtb	r4, r0
 373:Core/Src/oled/ssd1306.c ****         count++;
 1294              		.loc 1 373 13 view .LVU298
 1295 0114 5C44     		add	r4, r4, fp
 1296 0116 E4B2     		uxtb	r4, r4
 1297              	.LVL134:
 374:Core/Src/oled/ssd1306.c ****         if(count != approx_segments)
 1298              		.loc 1 374 9 is_stmt 1 view .LVU299
 374:Core/Src/oled/ssd1306.c ****         if(count != approx_segments)
 1299              		.loc 1 374 14 is_stmt 0 view .LVU300
 1300 0118 0AF1010A 		add	r10, r10, #1
 1301              	.LVL135:
 375:Core/Src/oled/ssd1306.c ****         {
 1302              		.loc 1 375 9 is_stmt 1 view .LVU301
 375:Core/Src/oled/ssd1306.c ****         {
 1303              		.loc 1 375 11 is_stmt 0 view .LVU302
 1304 011c D045     		cmp	r8, r10
 1305 011e 9ED0     		beq	.L93
 377:Core/Src/oled/ssd1306.c ****         }
 1306              		.loc 1 377 13 is_stmt 1 view .LVU303
 377:Core/Src/oled/ssd1306.c ****         }
 1307              		.loc 1 377 19 is_stmt 0 view .LVU304
 1308 0120 5046     		mov	r0, r10
 1309 0122 FFF7FEFF 		bl	__aeabi_ui2f
 1310              	.LVL136:
 1311 0126 3946     		mov	r1, r7
 1312 0128 FFF7FEFF 		bl	__aeabi_fmul
 1313              	.LVL137:
 1314 012c FFF7FEFF 		bl	ssd1306_DegToRad
 1315              	.LVL138:
 377:Core/Src/oled/ssd1306.c ****         }
 1316              		.loc 1 377 19 view .LVU305
 1317 0130 98E7     		b	.L94
 1318              	.LVL139:
 1319              	.L97:
 386:Core/Src/oled/ssd1306.c ****     }
 387:Core/Src/oled/ssd1306.c ****     
 388:Core/Src/oled/ssd1306.c ****     return;
 389:Core/Src/oled/ssd1306.c **** }
 1320              		.loc 1 389 1 view .LVU306
 1321 0132 0BB0     		add	sp, sp, #44
 1322              	.LCFI26:
 1323              		.cfi_def_cfa_offset 36
 1324              		@ sp needed
 1325 0134 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1326              	.LVL140:
 1327              	.L99:
 1328              		.loc 1 389 1 view .LVU307
 1329              		.align	2
 1330              	.L98:
 1331 0138 67666666 		.word	1717986919
ARM GAS  /tmp/cc0q0Vjh.s 			page 35


 1332 013c 176CC116 		.word	381774871
 1333              		.cfi_endproc
 1334              	.LFE81:
 1336              		.section	.text.ssd1306_DrawCircle,"ax",%progbits
 1337              		.align	1
 1338              		.global	ssd1306_DrawCircle
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu softvfp
 1344              	ssd1306_DrawCircle:
 1345              	.LVL141:
 1346              	.LFB82:
 390:Core/Src/oled/ssd1306.c **** //Draw circle by Bresenhem's algorithm
 391:Core/Src/oled/ssd1306.c **** void ssd1306_DrawCircle(uint8_t par_x,uint8_t par_y,uint8_t par_r,SSD1306_COLOR par_color) {
 1347              		.loc 1 391 92 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 8
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              		.loc 1 391 92 is_stmt 0 view .LVU309
 1352 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1353              	.LCFI27:
 1354              		.cfi_def_cfa_offset 36
 1355              		.cfi_offset 4, -36
 1356              		.cfi_offset 5, -32
 1357              		.cfi_offset 6, -28
 1358              		.cfi_offset 7, -24
 1359              		.cfi_offset 8, -20
 1360              		.cfi_offset 9, -16
 1361              		.cfi_offset 10, -12
 1362              		.cfi_offset 11, -8
 1363              		.cfi_offset 14, -4
 1364 0004 83B0     		sub	sp, sp, #12
 1365              	.LCFI28:
 1366              		.cfi_def_cfa_offset 48
 1367 0006 0090     		str	r0, [sp]
 1368 0008 0191     		str	r1, [sp, #4]
 1369 000a 9A46     		mov	r10, r3
 392:Core/Src/oled/ssd1306.c ****   int32_t x = -par_r;
 1370              		.loc 1 392 3 is_stmt 1 view .LVU310
 1371              	.LVL142:
 393:Core/Src/oled/ssd1306.c ****   int32_t y = 0;
 1372              		.loc 1 393 3 view .LVU311
 394:Core/Src/oled/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1373              		.loc 1 394 3 view .LVU312
 395:Core/Src/oled/ssd1306.c ****   int32_t e2;
 1374              		.loc 1 395 3 view .LVU313
 396:Core/Src/oled/ssd1306.c **** 
 397:Core/Src/oled/ssd1306.c ****   if (par_x >= SSD1306_WIDTH || par_y >= SSD1306_HEIGHT) {
 1375              		.loc 1 397 3 view .LVU314
 1376              		.loc 1 397 6 is_stmt 0 view .LVU315
 1377 000c 10F0800F 		tst	r0, #128
 1378 0010 49D1     		bne	.L100
 1379 0012 5742     		rsbs	r7, r2, #0
 1380              	.LVL143:
 1381              		.loc 1 397 6 view .LVU316
 1382 0014 C2F10102 		rsb	r2, r2, #1
ARM GAS  /tmp/cc0q0Vjh.s 			page 36


 1383              	.LVL144:
 1384              		.loc 1 397 6 view .LVU317
 1385 0018 5400     		lsls	r4, r2, #1
 1386              		.loc 1 397 30 discriminator 1 view .LVU318
 1387 001a 3F29     		cmp	r1, #63
 1388 001c 43D8     		bhi	.L100
 393:Core/Src/oled/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1389              		.loc 1 393 11 view .LVU319
 1390 001e 4FF0000B 		mov	fp, #0
 1391 0022 08E0     		b	.L104
 1392              	.LVL145:
 1393              	.L105:
 393:Core/Src/oled/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1394              		.loc 1 393 11 view .LVU320
 1395 0024 2346     		mov	r3, r4
 1396              	.LVL146:
 1397              	.L102:
 398:Core/Src/oled/ssd1306.c ****     return;
 399:Core/Src/oled/ssd1306.c ****   }
 400:Core/Src/oled/ssd1306.c **** 
 401:Core/Src/oled/ssd1306.c ****     do {
 402:Core/Src/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y + y, par_color);
 403:Core/Src/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y + y, par_color);
 404:Core/Src/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y - y, par_color);
 405:Core/Src/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y - y, par_color);
 406:Core/Src/oled/ssd1306.c ****         e2 = err;
 407:Core/Src/oled/ssd1306.c ****         if (e2 <= y) {
 408:Core/Src/oled/ssd1306.c ****             y++;
 409:Core/Src/oled/ssd1306.c ****             err = err + (y * 2 + 1);
 410:Core/Src/oled/ssd1306.c ****             if(-x == y && e2 <= x) {
 411:Core/Src/oled/ssd1306.c ****               e2 = 0;
 412:Core/Src/oled/ssd1306.c ****             }
 413:Core/Src/oled/ssd1306.c ****             else
 414:Core/Src/oled/ssd1306.c ****             {
 415:Core/Src/oled/ssd1306.c ****               /*nothing to do*/
 416:Core/Src/oled/ssd1306.c ****             }
 417:Core/Src/oled/ssd1306.c ****         }
 418:Core/Src/oled/ssd1306.c ****         else
 419:Core/Src/oled/ssd1306.c ****         {
 420:Core/Src/oled/ssd1306.c ****           /*nothing to do*/
 421:Core/Src/oled/ssd1306.c ****         }
 1398              		.loc 1 421 9 is_stmt 1 view .LVU321
 422:Core/Src/oled/ssd1306.c ****         if(e2 > x) {
 1399              		.loc 1 422 9 view .LVU322
 1400              		.loc 1 422 11 is_stmt 0 view .LVU323
 1401 0026 A742     		cmp	r7, r4
 1402 0028 3BDA     		bge	.L107
 423:Core/Src/oled/ssd1306.c ****           x++;
 1403              		.loc 1 423 11 is_stmt 1 view .LVU324
 1404              		.loc 1 423 12 is_stmt 0 view .LVU325
 1405 002a 0137     		adds	r7, r7, #1
 1406              	.LVL147:
 424:Core/Src/oled/ssd1306.c ****           err = err + (x * 2 + 1);
 1407              		.loc 1 424 11 is_stmt 1 view .LVU326
 1408              		.loc 1 424 26 is_stmt 0 view .LVU327
 1409 002c 7C00     		lsls	r4, r7, #1
 1410              	.LVL148:
ARM GAS  /tmp/cc0q0Vjh.s 			page 37


 1411              		.loc 1 424 30 view .LVU328
 1412 002e 0134     		adds	r4, r4, #1
 1413              		.loc 1 424 15 view .LVU329
 1414 0030 1C44     		add	r4, r4, r3
 1415              	.LVL149:
 1416              	.L103:
 425:Core/Src/oled/ssd1306.c ****         }
 426:Core/Src/oled/ssd1306.c ****         else
 427:Core/Src/oled/ssd1306.c ****         {
 428:Core/Src/oled/ssd1306.c ****           /*nothing to do*/
 429:Core/Src/oled/ssd1306.c ****         }
 1417              		.loc 1 429 9 is_stmt 1 view .LVU330
 430:Core/Src/oled/ssd1306.c ****     } while(x <= 0);
 1418              		.loc 1 430 12 view .LVU331
 1419              		.loc 1 430 5 is_stmt 0 view .LVU332
 1420 0032 002F     		cmp	r7, #0
 1421 0034 37DC     		bgt	.L100
 1422              	.LVL150:
 1423              	.L104:
 401:Core/Src/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y + y, par_color);
 1424              		.loc 1 401 5 is_stmt 1 view .LVU333
 402:Core/Src/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y + y, par_color);
 1425              		.loc 1 402 7 view .LVU334
 1426 0036 FEB2     		uxtb	r6, r7
 1427 0038 009B     		ldr	r3, [sp]
 1428 003a A3EB0608 		sub	r8, r3, r6
 1429 003e 5FFA88F8 		uxtb	r8, r8
 1430 0042 5FFA8BF5 		uxtb	r5, fp
 1431 0046 019A     		ldr	r2, [sp, #4]
 1432 0048 05EB0209 		add	r9, r5, r2
 1433 004c 5FFA89F9 		uxtb	r9, r9
 1434 0050 5246     		mov	r2, r10
 1435 0052 4946     		mov	r1, r9
 1436 0054 4046     		mov	r0, r8
 1437 0056 FFF7FEFF 		bl	ssd1306_DrawPixel
 1438              	.LVL151:
 403:Core/Src/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y - y, par_color);
 1439              		.loc 1 403 7 view .LVU335
 1440 005a 009B     		ldr	r3, [sp]
 1441 005c 1E44     		add	r6, r6, r3
 1442 005e F6B2     		uxtb	r6, r6
 1443 0060 5246     		mov	r2, r10
 1444 0062 4946     		mov	r1, r9
 1445 0064 3046     		mov	r0, r6
 1446 0066 FFF7FEFF 		bl	ssd1306_DrawPixel
 1447              	.LVL152:
 404:Core/Src/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y - y, par_color);
 1448              		.loc 1 404 7 view .LVU336
 1449 006a 019A     		ldr	r2, [sp, #4]
 1450 006c 551B     		subs	r5, r2, r5
 1451 006e EDB2     		uxtb	r5, r5
 1452 0070 5246     		mov	r2, r10
 1453 0072 2946     		mov	r1, r5
 1454 0074 3046     		mov	r0, r6
 1455 0076 FFF7FEFF 		bl	ssd1306_DrawPixel
 1456              	.LVL153:
 405:Core/Src/oled/ssd1306.c ****         e2 = err;
ARM GAS  /tmp/cc0q0Vjh.s 			page 38


 1457              		.loc 1 405 7 view .LVU337
 1458 007a 5246     		mov	r2, r10
 1459 007c 2946     		mov	r1, r5
 1460 007e 4046     		mov	r0, r8
 1461 0080 FFF7FEFF 		bl	ssd1306_DrawPixel
 1462              	.LVL154:
 406:Core/Src/oled/ssd1306.c ****         if (e2 <= y) {
 1463              		.loc 1 406 9 view .LVU338
 407:Core/Src/oled/ssd1306.c ****             y++;
 1464              		.loc 1 407 9 view .LVU339
 407:Core/Src/oled/ssd1306.c ****             y++;
 1465              		.loc 1 407 12 is_stmt 0 view .LVU340
 1466 0084 A345     		cmp	fp, r4
 1467 0086 CDDB     		blt	.L105
 408:Core/Src/oled/ssd1306.c ****             err = err + (y * 2 + 1);
 1468              		.loc 1 408 13 is_stmt 1 view .LVU341
 408:Core/Src/oled/ssd1306.c ****             err = err + (y * 2 + 1);
 1469              		.loc 1 408 14 is_stmt 0 view .LVU342
 1470 0088 0BF1010B 		add	fp, fp, #1
 1471              	.LVL155:
 409:Core/Src/oled/ssd1306.c ****             if(-x == y && e2 <= x) {
 1472              		.loc 1 409 13 is_stmt 1 view .LVU343
 409:Core/Src/oled/ssd1306.c ****             if(-x == y && e2 <= x) {
 1473              		.loc 1 409 28 is_stmt 0 view .LVU344
 1474 008c 4FEA4B03 		lsl	r3, fp, #1
 409:Core/Src/oled/ssd1306.c ****             if(-x == y && e2 <= x) {
 1475              		.loc 1 409 32 view .LVU345
 1476 0090 0133     		adds	r3, r3, #1
 409:Core/Src/oled/ssd1306.c ****             if(-x == y && e2 <= x) {
 1477              		.loc 1 409 17 view .LVU346
 1478 0092 2344     		add	r3, r3, r4
 1479              	.LVL156:
 410:Core/Src/oled/ssd1306.c ****               e2 = 0;
 1480              		.loc 1 410 13 is_stmt 1 view .LVU347
 410:Core/Src/oled/ssd1306.c ****               e2 = 0;
 1481              		.loc 1 410 15 is_stmt 0 view .LVU348
 1482 0094 1BEB070F 		cmn	fp, r7
 1483 0098 C5D1     		bne	.L102
 410:Core/Src/oled/ssd1306.c ****               e2 = 0;
 1484              		.loc 1 410 24 discriminator 1 view .LVU349
 1485 009a A742     		cmp	r7, r4
 1486 009c C3DB     		blt	.L102
 411:Core/Src/oled/ssd1306.c ****             }
 1487              		.loc 1 411 18 view .LVU350
 1488 009e 0024     		movs	r4, #0
 1489              	.LVL157:
 411:Core/Src/oled/ssd1306.c ****             }
 1490              		.loc 1 411 18 view .LVU351
 1491 00a0 C1E7     		b	.L102
 1492              	.LVL158:
 1493              	.L107:
 411:Core/Src/oled/ssd1306.c ****             }
 1494              		.loc 1 411 18 view .LVU352
 1495 00a2 1C46     		mov	r4, r3
 1496              	.LVL159:
 411:Core/Src/oled/ssd1306.c ****             }
 1497              		.loc 1 411 18 view .LVU353
ARM GAS  /tmp/cc0q0Vjh.s 			page 39


 1498 00a4 C5E7     		b	.L103
 1499              	.LVL160:
 1500              	.L100:
 431:Core/Src/oled/ssd1306.c **** 
 432:Core/Src/oled/ssd1306.c ****     return;
 433:Core/Src/oled/ssd1306.c **** }
 1501              		.loc 1 433 1 view .LVU354
 1502 00a6 03B0     		add	sp, sp, #12
 1503              	.LCFI29:
 1504              		.cfi_def_cfa_offset 36
 1505              		@ sp needed
 1506 00a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1507              		.cfi_endproc
 1508              	.LFE82:
 1510              		.section	.text.ssd1306_DrawRectangle,"ax",%progbits
 1511              		.align	1
 1512              		.global	ssd1306_DrawRectangle
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1516              		.fpu softvfp
 1518              	ssd1306_DrawRectangle:
 1519              	.LVL161:
 1520              	.LFB83:
 434:Core/Src/oled/ssd1306.c **** 
 435:Core/Src/oled/ssd1306.c **** //Draw rectangle
 436:Core/Src/oled/ssd1306.c **** void ssd1306_DrawRectangle(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 1521              		.loc 1 436 97 is_stmt 1 view -0
 1522              		.cfi_startproc
 1523              		@ args = 4, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525              		.loc 1 436 97 is_stmt 0 view .LVU356
 1526 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1527              	.LCFI30:
 1528              		.cfi_def_cfa_offset 24
 1529              		.cfi_offset 4, -24
 1530              		.cfi_offset 5, -20
 1531              		.cfi_offset 6, -16
 1532              		.cfi_offset 7, -12
 1533              		.cfi_offset 8, -8
 1534              		.cfi_offset 14, -4
 1535 0004 82B0     		sub	sp, sp, #8
 1536              	.LCFI31:
 1537              		.cfi_def_cfa_offset 32
 1538 0006 0546     		mov	r5, r0
 1539 0008 0E46     		mov	r6, r1
 1540 000a 1746     		mov	r7, r2
 1541 000c 1C46     		mov	r4, r3
 1542 000e 9DF82080 		ldrb	r8, [sp, #32]	@ zero_extendqisi2
 437:Core/Src/oled/ssd1306.c ****   ssd1306_Line(x1,y1,x2,y1,color);
 1543              		.loc 1 437 3 is_stmt 1 view .LVU357
 1544 0012 CDF80080 		str	r8, [sp]
 1545 0016 0B46     		mov	r3, r1
 1546              	.LVL162:
 1547              		.loc 1 437 3 is_stmt 0 view .LVU358
 1548 0018 FFF7FEFF 		bl	ssd1306_Line
 1549              	.LVL163:
ARM GAS  /tmp/cc0q0Vjh.s 			page 40


 438:Core/Src/oled/ssd1306.c ****   ssd1306_Line(x2,y1,x2,y2,color);
 1550              		.loc 1 438 3 is_stmt 1 view .LVU359
 1551 001c CDF80080 		str	r8, [sp]
 1552 0020 2346     		mov	r3, r4
 1553 0022 3A46     		mov	r2, r7
 1554 0024 3146     		mov	r1, r6
 1555 0026 3846     		mov	r0, r7
 1556 0028 FFF7FEFF 		bl	ssd1306_Line
 1557              	.LVL164:
 439:Core/Src/oled/ssd1306.c ****   ssd1306_Line(x2,y2,x1,y2,color);
 1558              		.loc 1 439 3 view .LVU360
 1559 002c CDF80080 		str	r8, [sp]
 1560 0030 2346     		mov	r3, r4
 1561 0032 2A46     		mov	r2, r5
 1562 0034 2146     		mov	r1, r4
 1563 0036 3846     		mov	r0, r7
 1564 0038 FFF7FEFF 		bl	ssd1306_Line
 1565              	.LVL165:
 440:Core/Src/oled/ssd1306.c ****   ssd1306_Line(x1,y2,x1,y1,color);
 1566              		.loc 1 440 3 view .LVU361
 1567 003c CDF80080 		str	r8, [sp]
 1568 0040 3346     		mov	r3, r6
 1569 0042 2A46     		mov	r2, r5
 1570 0044 2146     		mov	r1, r4
 1571 0046 2846     		mov	r0, r5
 1572 0048 FFF7FEFF 		bl	ssd1306_Line
 1573              	.LVL166:
 441:Core/Src/oled/ssd1306.c **** 
 442:Core/Src/oled/ssd1306.c ****   return;
 1574              		.loc 1 442 3 view .LVU362
 443:Core/Src/oled/ssd1306.c **** }
 1575              		.loc 1 443 1 is_stmt 0 view .LVU363
 1576 004c 02B0     		add	sp, sp, #8
 1577              	.LCFI32:
 1578              		.cfi_def_cfa_offset 24
 1579              		@ sp needed
 1580 004e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1581              		.loc 1 443 1 view .LVU364
 1582              		.cfi_endproc
 1583              	.LFE83:
 1585              		.section	.text.ssd1306_SetContrast,"ax",%progbits
 1586              		.align	1
 1587              		.global	ssd1306_SetContrast
 1588              		.syntax unified
 1589              		.thumb
 1590              		.thumb_func
 1591              		.fpu softvfp
 1593              	ssd1306_SetContrast:
 1594              	.LVL167:
 1595              	.LFB84:
 444:Core/Src/oled/ssd1306.c **** 
 445:Core/Src/oled/ssd1306.c **** void ssd1306_SetContrast(const uint8_t value) {
 1596              		.loc 1 445 47 is_stmt 1 view -0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 0
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600              		.loc 1 445 47 is_stmt 0 view .LVU366
ARM GAS  /tmp/cc0q0Vjh.s 			page 41


 1601 0000 10B5     		push	{r4, lr}
 1602              	.LCFI33:
 1603              		.cfi_def_cfa_offset 8
 1604              		.cfi_offset 4, -8
 1605              		.cfi_offset 14, -4
 1606 0002 0446     		mov	r4, r0
 446:Core/Src/oled/ssd1306.c ****     const uint8_t kSetContrastControlRegister = 0x81;
 1607              		.loc 1 446 5 is_stmt 1 view .LVU367
 1608              	.LVL168:
 447:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(kSetContrastControlRegister);
 1609              		.loc 1 447 5 view .LVU368
 1610 0004 8120     		movs	r0, #129
 1611              	.LVL169:
 1612              		.loc 1 447 5 is_stmt 0 view .LVU369
 1613 0006 FFF7FEFF 		bl	ssd1306_WriteCommand
 1614              	.LVL170:
 448:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(value);
 1615              		.loc 1 448 5 is_stmt 1 view .LVU370
 1616 000a 2046     		mov	r0, r4
 1617 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 1618              	.LVL171:
 449:Core/Src/oled/ssd1306.c **** }
 1619              		.loc 1 449 1 is_stmt 0 view .LVU371
 1620 0010 10BD     		pop	{r4, pc}
 1621              		.cfi_endproc
 1622              	.LFE84:
 1624              		.section	.text.ssd1306_SetDisplayOn,"ax",%progbits
 1625              		.align	1
 1626              		.global	ssd1306_SetDisplayOn
 1627              		.syntax unified
 1628              		.thumb
 1629              		.thumb_func
 1630              		.fpu softvfp
 1632              	ssd1306_SetDisplayOn:
 1633              	.LVL172:
 1634              	.LFB85:
 450:Core/Src/oled/ssd1306.c **** 
 451:Core/Src/oled/ssd1306.c **** void ssd1306_SetDisplayOn(const uint8_t on) {
 1635              		.loc 1 451 45 is_stmt 1 view -0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              		.loc 1 451 45 is_stmt 0 view .LVU373
 1640 0000 08B5     		push	{r3, lr}
 1641              	.LCFI34:
 1642              		.cfi_def_cfa_offset 8
 1643              		.cfi_offset 3, -8
 1644              		.cfi_offset 14, -4
 452:Core/Src/oled/ssd1306.c ****     uint8_t value;
 1645              		.loc 1 452 5 is_stmt 1 view .LVU374
 453:Core/Src/oled/ssd1306.c ****     if (on) {
 1646              		.loc 1 453 5 view .LVU375
 1647              		.loc 1 453 8 is_stmt 0 view .LVU376
 1648 0002 30B1     		cbz	r0, .L114
 454:Core/Src/oled/ssd1306.c ****         value = 0xAF;   // Display on
 1649              		.loc 1 454 9 is_stmt 1 view .LVU377
 1650              	.LVL173:
ARM GAS  /tmp/cc0q0Vjh.s 			page 42


 455:Core/Src/oled/ssd1306.c ****         SSD1306.DisplayOn = 1;
 1651              		.loc 1 455 9 view .LVU378
 1652              		.loc 1 455 27 is_stmt 0 view .LVU379
 1653 0004 054B     		ldr	r3, .L117
 1654 0006 0122     		movs	r2, #1
 1655 0008 5A71     		strb	r2, [r3, #5]
 454:Core/Src/oled/ssd1306.c ****         value = 0xAF;   // Display on
 1656              		.loc 1 454 15 view .LVU380
 1657 000a AF20     		movs	r0, #175
 1658              	.LVL174:
 1659              	.L115:
 456:Core/Src/oled/ssd1306.c ****     } else {
 457:Core/Src/oled/ssd1306.c ****         value = 0xAE;   // Display off
 458:Core/Src/oled/ssd1306.c ****         SSD1306.DisplayOn = 0;
 459:Core/Src/oled/ssd1306.c ****     }
 460:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(value);
 1660              		.loc 1 460 5 is_stmt 1 view .LVU381
 1661 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 1662              	.LVL175:
 461:Core/Src/oled/ssd1306.c **** }
 1663              		.loc 1 461 1 is_stmt 0 view .LVU382
 1664 0010 08BD     		pop	{r3, pc}
 1665              	.LVL176:
 1666              	.L114:
 457:Core/Src/oled/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1667              		.loc 1 457 9 is_stmt 1 view .LVU383
 458:Core/Src/oled/ssd1306.c ****     }
 1668              		.loc 1 458 9 view .LVU384
 458:Core/Src/oled/ssd1306.c ****     }
 1669              		.loc 1 458 27 is_stmt 0 view .LVU385
 1670 0012 024B     		ldr	r3, .L117
 1671 0014 0022     		movs	r2, #0
 1672 0016 5A71     		strb	r2, [r3, #5]
 457:Core/Src/oled/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1673              		.loc 1 457 15 view .LVU386
 1674 0018 AE20     		movs	r0, #174
 1675              	.LVL177:
 457:Core/Src/oled/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1676              		.loc 1 457 15 view .LVU387
 1677 001a F7E7     		b	.L115
 1678              	.L118:
 1679              		.align	2
 1680              	.L117:
 1681 001c 00000000 		.word	.LANCHOR1
 1682              		.cfi_endproc
 1683              	.LFE85:
 1685              		.section	.text.ssd1306_Init,"ax",%progbits
 1686              		.align	1
 1687              		.global	ssd1306_Init
 1688              		.syntax unified
 1689              		.thumb
 1690              		.thumb_func
 1691              		.fpu softvfp
 1693              	ssd1306_Init:
 1694              	.LFB70:
  76:Core/Src/oled/ssd1306.c ****     // Reset OLED
 1695              		.loc 1 76 25 is_stmt 1 view -0
ARM GAS  /tmp/cc0q0Vjh.s 			page 43


 1696              		.cfi_startproc
 1697              		@ args = 0, pretend = 0, frame = 0
 1698              		@ frame_needed = 0, uses_anonymous_args = 0
 1699 0000 08B5     		push	{r3, lr}
 1700              	.LCFI35:
 1701              		.cfi_def_cfa_offset 8
 1702              		.cfi_offset 3, -8
 1703              		.cfi_offset 14, -4
  78:Core/Src/oled/ssd1306.c **** 
 1704              		.loc 1 78 5 view .LVU389
  81:Core/Src/oled/ssd1306.c **** 
 1705              		.loc 1 81 5 view .LVU390
 1706 0002 6420     		movs	r0, #100
 1707 0004 FFF7FEFF 		bl	HAL_Delay
 1708              	.LVL178:
  84:Core/Src/oled/ssd1306.c **** 
 1709              		.loc 1 84 5 view .LVU391
 1710 0008 0020     		movs	r0, #0
 1711 000a FFF7FEFF 		bl	ssd1306_SetDisplayOn
 1712              	.LVL179:
  86:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 1713              		.loc 1 86 5 view .LVU392
 1714 000e 2020     		movs	r0, #32
 1715 0010 FFF7FEFF 		bl	ssd1306_WriteCommand
 1716              	.LVL180:
  87:Core/Src/oled/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
 1717              		.loc 1 87 5 view .LVU393
 1718 0014 0020     		movs	r0, #0
 1719 0016 FFF7FEFF 		bl	ssd1306_WriteCommand
 1720              	.LVL181:
  90:Core/Src/oled/ssd1306.c **** 
 1721              		.loc 1 90 5 view .LVU394
 1722 001a B020     		movs	r0, #176
 1723 001c FFF7FEFF 		bl	ssd1306_WriteCommand
 1724              	.LVL182:
  95:Core/Src/oled/ssd1306.c **** #endif
 1725              		.loc 1 95 5 view .LVU395
 1726 0020 C820     		movs	r0, #200
 1727 0022 FFF7FEFF 		bl	ssd1306_WriteCommand
 1728              	.LVL183:
  98:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 1729              		.loc 1 98 5 view .LVU396
 1730 0026 0020     		movs	r0, #0
 1731 0028 FFF7FEFF 		bl	ssd1306_WriteCommand
 1732              	.LVL184:
  99:Core/Src/oled/ssd1306.c **** 
 1733              		.loc 1 99 5 view .LVU397
 1734 002c 1020     		movs	r0, #16
 1735 002e FFF7FEFF 		bl	ssd1306_WriteCommand
 1736              	.LVL185:
 101:Core/Src/oled/ssd1306.c **** 
 1737              		.loc 1 101 5 view .LVU398
 1738 0032 4020     		movs	r0, #64
 1739 0034 FFF7FEFF 		bl	ssd1306_WriteCommand
 1740              	.LVL186:
 103:Core/Src/oled/ssd1306.c **** 
 1741              		.loc 1 103 5 view .LVU399
ARM GAS  /tmp/cc0q0Vjh.s 			page 44


 1742 0038 FF20     		movs	r0, #255
 1743 003a FFF7FEFF 		bl	ssd1306_SetContrast
 1744              	.LVL187:
 108:Core/Src/oled/ssd1306.c **** #endif
 1745              		.loc 1 108 5 view .LVU400
 1746 003e A120     		movs	r0, #161
 1747 0040 FFF7FEFF 		bl	ssd1306_WriteCommand
 1748              	.LVL188:
 114:Core/Src/oled/ssd1306.c **** #endif
 1749              		.loc 1 114 5 view .LVU401
 1750 0044 A620     		movs	r0, #166
 1751 0046 FFF7FEFF 		bl	ssd1306_WriteCommand
 1752              	.LVL189:
 122:Core/Src/oled/ssd1306.c **** #endif
 1753              		.loc 1 122 5 view .LVU402
 1754 004a A820     		movs	r0, #168
 1755 004c FFF7FEFF 		bl	ssd1306_WriteCommand
 1756              	.LVL190:
 128:Core/Src/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 1757              		.loc 1 128 5 view .LVU403
 1758 0050 3F20     		movs	r0, #63
 1759 0052 FFF7FEFF 		bl	ssd1306_WriteCommand
 1760              	.LVL191:
 135:Core/Src/oled/ssd1306.c **** 
 1761              		.loc 1 135 5 view .LVU404
 1762 0056 A420     		movs	r0, #164
 1763 0058 FFF7FEFF 		bl	ssd1306_WriteCommand
 1764              	.LVL192:
 137:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 1765              		.loc 1 137 5 view .LVU405
 1766 005c D320     		movs	r0, #211
 1767 005e FFF7FEFF 		bl	ssd1306_WriteCommand
 1768              	.LVL193:
 138:Core/Src/oled/ssd1306.c **** 
 1769              		.loc 1 138 5 view .LVU406
 1770 0062 0020     		movs	r0, #0
 1771 0064 FFF7FEFF 		bl	ssd1306_WriteCommand
 1772              	.LVL194:
 140:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 1773              		.loc 1 140 5 view .LVU407
 1774 0068 D520     		movs	r0, #213
 1775 006a FFF7FEFF 		bl	ssd1306_WriteCommand
 1776              	.LVL195:
 141:Core/Src/oled/ssd1306.c **** 
 1777              		.loc 1 141 5 view .LVU408
 1778 006e F020     		movs	r0, #240
 1779 0070 FFF7FEFF 		bl	ssd1306_WriteCommand
 1780              	.LVL196:
 143:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 1781              		.loc 1 143 5 view .LVU409
 1782 0074 D920     		movs	r0, #217
 1783 0076 FFF7FEFF 		bl	ssd1306_WriteCommand
 1784              	.LVL197:
 144:Core/Src/oled/ssd1306.c **** 
 1785              		.loc 1 144 5 view .LVU410
 1786 007a 2220     		movs	r0, #34
 1787 007c FFF7FEFF 		bl	ssd1306_WriteCommand
ARM GAS  /tmp/cc0q0Vjh.s 			page 45


 1788              	.LVL198:
 146:Core/Src/oled/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 1789              		.loc 1 146 5 view .LVU411
 1790 0080 DA20     		movs	r0, #218
 1791 0082 FFF7FEFF 		bl	ssd1306_WriteCommand
 1792              	.LVL199:
 150:Core/Src/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 1793              		.loc 1 150 5 view .LVU412
 1794 0086 1220     		movs	r0, #18
 1795 0088 FFF7FEFF 		bl	ssd1306_WriteCommand
 1796              	.LVL200:
 157:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 1797              		.loc 1 157 5 view .LVU413
 1798 008c DB20     		movs	r0, #219
 1799 008e FFF7FEFF 		bl	ssd1306_WriteCommand
 1800              	.LVL201:
 158:Core/Src/oled/ssd1306.c **** 
 1801              		.loc 1 158 5 view .LVU414
 1802 0092 2020     		movs	r0, #32
 1803 0094 FFF7FEFF 		bl	ssd1306_WriteCommand
 1804              	.LVL202:
 160:Core/Src/oled/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 1805              		.loc 1 160 5 view .LVU415
 1806 0098 8D20     		movs	r0, #141
 1807 009a FFF7FEFF 		bl	ssd1306_WriteCommand
 1808              	.LVL203:
 161:Core/Src/oled/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 1809              		.loc 1 161 5 view .LVU416
 1810 009e 1420     		movs	r0, #20
 1811 00a0 FFF7FEFF 		bl	ssd1306_WriteCommand
 1812              	.LVL204:
 162:Core/Src/oled/ssd1306.c **** 
 1813              		.loc 1 162 5 view .LVU417
 1814 00a4 0120     		movs	r0, #1
 1815 00a6 FFF7FEFF 		bl	ssd1306_SetDisplayOn
 1816              	.LVL205:
 165:Core/Src/oled/ssd1306.c ****     
 1817              		.loc 1 165 5 view .LVU418
 1818 00aa 0020     		movs	r0, #0
 1819 00ac FFF7FEFF 		bl	ssd1306_Fill
 1820              	.LVL206:
 168:Core/Src/oled/ssd1306.c ****     
 1821              		.loc 1 168 5 view .LVU419
 1822 00b0 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1823              	.LVL207:
 171:Core/Src/oled/ssd1306.c ****     SSD1306.CurrentY = 0;
 1824              		.loc 1 171 5 view .LVU420
 171:Core/Src/oled/ssd1306.c ****     SSD1306.CurrentY = 0;
 1825              		.loc 1 171 22 is_stmt 0 view .LVU421
 1826 00b4 034B     		ldr	r3, .L121
 1827 00b6 0022     		movs	r2, #0
 1828 00b8 1A80     		strh	r2, [r3]	@ movhi
 172:Core/Src/oled/ssd1306.c ****     
 1829              		.loc 1 172 5 is_stmt 1 view .LVU422
 172:Core/Src/oled/ssd1306.c ****     
 1830              		.loc 1 172 22 is_stmt 0 view .LVU423
 1831 00ba 5A80     		strh	r2, [r3, #2]	@ movhi
ARM GAS  /tmp/cc0q0Vjh.s 			page 46


 174:Core/Src/oled/ssd1306.c **** }
 1832              		.loc 1 174 5 is_stmt 1 view .LVU424
 174:Core/Src/oled/ssd1306.c **** }
 1833              		.loc 1 174 25 is_stmt 0 view .LVU425
 1834 00bc 0122     		movs	r2, #1
 1835 00be 1A71     		strb	r2, [r3, #4]
 175:Core/Src/oled/ssd1306.c **** 
 1836              		.loc 1 175 1 view .LVU426
 1837 00c0 08BD     		pop	{r3, pc}
 1838              	.L122:
 1839 00c2 00BF     		.align	2
 1840              	.L121:
 1841 00c4 00000000 		.word	.LANCHOR1
 1842              		.cfi_endproc
 1843              	.LFE70:
 1845              		.section	.text.ssd1306_GetDisplayOn,"ax",%progbits
 1846              		.align	1
 1847              		.global	ssd1306_GetDisplayOn
 1848              		.syntax unified
 1849              		.thumb
 1850              		.thumb_func
 1851              		.fpu softvfp
 1853              	ssd1306_GetDisplayOn:
 1854              	.LFB86:
 462:Core/Src/oled/ssd1306.c **** 
 463:Core/Src/oled/ssd1306.c **** uint8_t ssd1306_GetDisplayOn() {
 1855              		.loc 1 463 32 is_stmt 1 view -0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 0
 1858              		@ frame_needed = 0, uses_anonymous_args = 0
 1859              		@ link register save eliminated.
 464:Core/Src/oled/ssd1306.c ****     return SSD1306.DisplayOn;
 1860              		.loc 1 464 5 view .LVU428
 465:Core/Src/oled/ssd1306.c **** }
 1861              		.loc 1 465 1 is_stmt 0 view .LVU429
 1862 0000 014B     		ldr	r3, .L124
 1863 0002 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 1864 0004 7047     		bx	lr
 1865              	.L125:
 1866 0006 00BF     		.align	2
 1867              	.L124:
 1868 0008 00000000 		.word	.LANCHOR1
 1869              		.cfi_endproc
 1870              	.LFE86:
 1872              		.section	.bss.SSD1306,"aw",%nobits
 1873              		.align	2
 1874              		.set	.LANCHOR1,. + 0
 1877              	SSD1306:
 1878 0000 00000000 		.space	6
 1878      0000
 1879              		.section	.bss.SSD1306_Buffer,"aw",%nobits
 1880              		.align	2
 1881              		.set	.LANCHOR0,. + 0
 1884              	SSD1306_Buffer:
 1885 0000 00000000 		.space	1024
 1885      00000000 
 1885      00000000 
ARM GAS  /tmp/cc0q0Vjh.s 			page 47


 1885      00000000 
 1885      00000000 
 1886              		.text
 1887              	.Letext0:
 1888              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1889              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1890              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1891              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1892              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 1893              		.file 7 "/usr/include/newlib/sys/_types.h"
 1894              		.file 8 "/usr/include/newlib/sys/reent.h"
 1895              		.file 9 "/usr/include/newlib/sys/lock.h"
 1896              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1897              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1898              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1899              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1900              		.file 14 "Core/Src/oled/../../Inc/oled/ssd1306_fonts.h"
 1901              		.file 15 "Core/Src/oled/../../Inc/oled/ssd1306.h"
 1902              		.file 16 "/usr/include/newlib/math.h"
 1903              		.file 17 "/usr/include/newlib/stdlib.h"
 1904              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1905              		.file 19 "<built-in>"
ARM GAS  /tmp/cc0q0Vjh.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ssd1306.c
     /tmp/cc0q0Vjh.s:20     .text.ssd1306_DegToRad:0000000000000000 $t
     /tmp/cc0q0Vjh.s:27     .text.ssd1306_DegToRad:0000000000000000 ssd1306_DegToRad
     /tmp/cc0q0Vjh.s:62     .text.ssd1306_DegToRad:0000000000000020 $d
     /tmp/cc0q0Vjh.s:69     .text.ssd1306_NormalizeTo0_360:0000000000000000 $t
     /tmp/cc0q0Vjh.s:75     .text.ssd1306_NormalizeTo0_360:0000000000000000 ssd1306_NormalizeTo0_360
     /tmp/cc0q0Vjh.s:109    .text.ssd1306_Reset:0000000000000000 $t
     /tmp/cc0q0Vjh.s:116    .text.ssd1306_Reset:0000000000000000 ssd1306_Reset
     /tmp/cc0q0Vjh.s:129    .text.ssd1306_WriteCommand:0000000000000000 $t
     /tmp/cc0q0Vjh.s:136    .text.ssd1306_WriteCommand:0000000000000000 ssd1306_WriteCommand
     /tmp/cc0q0Vjh.s:180    .text.ssd1306_WriteCommand:0000000000000030 $d
     /tmp/cc0q0Vjh.s:186    .text.ssd1306_WriteData:0000000000000000 $t
     /tmp/cc0q0Vjh.s:193    .text.ssd1306_WriteData:0000000000000000 ssd1306_WriteData
     /tmp/cc0q0Vjh.s:246    .text.ssd1306_WriteData:000000000000002c $d
     /tmp/cc0q0Vjh.s:252    .text.ssd1306_FillBuffer:0000000000000000 $t
     /tmp/cc0q0Vjh.s:259    .text.ssd1306_FillBuffer:0000000000000000 ssd1306_FillBuffer
     /tmp/cc0q0Vjh.s:305    .text.ssd1306_FillBuffer:000000000000001c $d
     /tmp/cc0q0Vjh.s:310    .text.ssd1306_Fill:0000000000000000 $t
     /tmp/cc0q0Vjh.s:317    .text.ssd1306_Fill:0000000000000000 ssd1306_Fill
     /tmp/cc0q0Vjh.s:360    .text.ssd1306_Fill:000000000000001c $d
     /tmp/cc0q0Vjh.s:365    .text.ssd1306_UpdateScreen:0000000000000000 $t
     /tmp/cc0q0Vjh.s:372    .text.ssd1306_UpdateScreen:0000000000000000 ssd1306_UpdateScreen
     /tmp/cc0q0Vjh.s:432    .text.ssd1306_UpdateScreen:0000000000000034 $d
     /tmp/cc0q0Vjh.s:437    .text.ssd1306_DrawPixel:0000000000000000 $t
     /tmp/cc0q0Vjh.s:444    .text.ssd1306_DrawPixel:0000000000000000 ssd1306_DrawPixel
     /tmp/cc0q0Vjh.s:508    .text.ssd1306_DrawPixel:0000000000000040 $d
     /tmp/cc0q0Vjh.s:513    .text.ssd1306_WriteChar:0000000000000000 $t
     /tmp/cc0q0Vjh.s:520    .text.ssd1306_WriteChar:0000000000000000 ssd1306_WriteChar
     /tmp/cc0q0Vjh.s:692    .text.ssd1306_WriteChar:00000000000000b0 $d
     /tmp/cc0q0Vjh.s:697    .text.ssd1306_WriteString:0000000000000000 $t
     /tmp/cc0q0Vjh.s:704    .text.ssd1306_WriteString:0000000000000000 ssd1306_WriteString
     /tmp/cc0q0Vjh.s:766    .text.ssd1306_SetCursor:0000000000000000 $t
     /tmp/cc0q0Vjh.s:773    .text.ssd1306_SetCursor:0000000000000000 ssd1306_SetCursor
     /tmp/cc0q0Vjh.s:793    .text.ssd1306_SetCursor:0000000000000008 $d
     /tmp/cc0q0Vjh.s:798    .text.ssd1306_Line:0000000000000000 $t
     /tmp/cc0q0Vjh.s:805    .text.ssd1306_Line:0000000000000000 ssd1306_Line
     /tmp/cc0q0Vjh.s:973    .text.ssd1306_Polyline:0000000000000000 $t
     /tmp/cc0q0Vjh.s:980    .text.ssd1306_Polyline:0000000000000000 ssd1306_Polyline
     /tmp/cc0q0Vjh.s:1074   .text.ssd1306_DrawArc:0000000000000000 $t
     /tmp/cc0q0Vjh.s:1081   .text.ssd1306_DrawArc:0000000000000000 ssd1306_DrawArc
     /tmp/cc0q0Vjh.s:1331   .text.ssd1306_DrawArc:0000000000000138 $d
     /tmp/cc0q0Vjh.s:1337   .text.ssd1306_DrawCircle:0000000000000000 $t
     /tmp/cc0q0Vjh.s:1344   .text.ssd1306_DrawCircle:0000000000000000 ssd1306_DrawCircle
     /tmp/cc0q0Vjh.s:1511   .text.ssd1306_DrawRectangle:0000000000000000 $t
     /tmp/cc0q0Vjh.s:1518   .text.ssd1306_DrawRectangle:0000000000000000 ssd1306_DrawRectangle
     /tmp/cc0q0Vjh.s:1586   .text.ssd1306_SetContrast:0000000000000000 $t
     /tmp/cc0q0Vjh.s:1593   .text.ssd1306_SetContrast:0000000000000000 ssd1306_SetContrast
     /tmp/cc0q0Vjh.s:1625   .text.ssd1306_SetDisplayOn:0000000000000000 $t
     /tmp/cc0q0Vjh.s:1632   .text.ssd1306_SetDisplayOn:0000000000000000 ssd1306_SetDisplayOn
     /tmp/cc0q0Vjh.s:1681   .text.ssd1306_SetDisplayOn:000000000000001c $d
     /tmp/cc0q0Vjh.s:1686   .text.ssd1306_Init:0000000000000000 $t
     /tmp/cc0q0Vjh.s:1693   .text.ssd1306_Init:0000000000000000 ssd1306_Init
     /tmp/cc0q0Vjh.s:1841   .text.ssd1306_Init:00000000000000c4 $d
     /tmp/cc0q0Vjh.s:1846   .text.ssd1306_GetDisplayOn:0000000000000000 $t
     /tmp/cc0q0Vjh.s:1853   .text.ssd1306_GetDisplayOn:0000000000000000 ssd1306_GetDisplayOn
     /tmp/cc0q0Vjh.s:1868   .text.ssd1306_GetDisplayOn:0000000000000008 $d
ARM GAS  /tmp/cc0q0Vjh.s 			page 49


     /tmp/cc0q0Vjh.s:1873   .bss.SSD1306:0000000000000000 $d
     /tmp/cc0q0Vjh.s:1877   .bss.SSD1306:0000000000000000 SSD1306
     /tmp/cc0q0Vjh.s:1880   .bss.SSD1306_Buffer:0000000000000000 $d
     /tmp/cc0q0Vjh.s:1884   .bss.SSD1306_Buffer:0000000000000000 SSD1306_Buffer

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
HAL_GPIO_TogglePin
HAL_I2C_Mem_Write
hi2c1
memcpy
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_i2d
__aeabi_d2iz
sin
cos
HAL_Delay
